IsPersonalSubjectAccessReview
=============================

IsPersonalSubjectAccessReview is a marker for PolicyRule.AttributeRestrictions that denotes that subjectaccessreviews on self should be allowed

kind: IsPersonalSubjectAccessReview                                   # string (kind of object, in CamelCase; cannot be updated)
apiVersion: v1beta1                                                   # string (version of the schema the object should have)


Policy
======

Policy is a object that holds all the Roles for a particular namespace.  There is at most
one Policy document per namespace.

kind: Policy                                                          # string (kind of object, in CamelCase; cannot be updated)
apiVersion: v1beta1                                                   # string (version of the schema the object should have)
metadata:                                                             # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta3.ObjectMeta
  name:                                                               # string (string that identifies an object. Must be unique within a namespace; cannot be updated)
  generateName:                                                       # string (an optional prefix to use to generate a unique name; has the same validation rules as name; optional, and is applied only name if is not specified)
  namespace:                                                          # string (namespace of the object; cannot be updated)
  selfLink:                                                           # string (URL for the object; populated by the system, read-only)
  uid:                                                                # github.com/GoogleCloudPlatform/kubernetes/pkg/types.UID (unique UUID across space and time; populated by the system; read-only)
  resourceVersion:                                                    # string (string that identifies the internal version of this object that can be used by clients to determine when objects have changed; populated by the system, read-only; value must be treated as opaque by clients and passed unmodified back to the server: https://github.com/GoogleCloudPlatform/kubernetes/blob/master/docs/api-conventions.md#concurrency-control-and-consistency)
  creationTimestamp:                                                  # github.com/GoogleCloudPlatform/kubernetes/pkg/util.Time (RFC 3339 date and time at which the object was created; populated by the system, read-only; null for lists)
  deletionTimestamp:                                                  # *github.com/GoogleCloudPlatform/kubernetes/pkg/util.Time (RFC 3339 date and time at which the object will be deleted; populated by the system when a graceful deletion is requested, read-only; if not set, graceful deletion of the object has not been requested)
  labels:                                                             # map[string]string (map of string keys and values that can be used to organize and categorize objects; may match selectors of replication controllers and services)
    [string]:                                                         # string
  annotations:                                                        # map[string]string (map of string keys and values that can be used by external tooling to store and retrieve arbitrary metadata about objects)
    [string]:                                                         # string
lastModified:                                                         # github.com/GoogleCloudPlatform/kubernetes/pkg/util.Time
roles:                                                                # []github.com/openshift/origin/pkg/authorization/api/v1beta1.NamedRole
- name:                                                               # string
  role:                                                               # github.com/openshift/origin/pkg/authorization/api/v1beta1.Role
    kind:                                                             # string (kind of object, in CamelCase; cannot be updated)
    apiVersion:                                                       # string (version of the schema the object should have)
    metadata:                                                         # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta3.ObjectMeta
      name:                                                           # string (string that identifies an object. Must be unique within a namespace; cannot be updated)
      generateName:                                                   # string (an optional prefix to use to generate a unique name; has the same validation rules as name; optional, and is applied only name if is not specified)
      namespace:                                                      # string (namespace of the object; cannot be updated)
      selfLink:                                                       # string (URL for the object; populated by the system, read-only)
      uid:                                                            # github.com/GoogleCloudPlatform/kubernetes/pkg/types.UID (unique UUID across space and time; populated by the system; read-only)
      resourceVersion:                                                # string (string that identifies the internal version of this object that can be used by clients to determine when objects have changed; populated by the system, read-only; value must be treated as opaque by clients and passed unmodified back to the server: https://github.com/GoogleCloudPlatform/kubernetes/blob/master/docs/api-conventions.md#concurrency-control-and-consistency)
      creationTimestamp:                                              # github.com/GoogleCloudPlatform/kubernetes/pkg/util.Time (RFC 3339 date and time at which the object was created; populated by the system, read-only; null for lists)
      deletionTimestamp:                                              # *github.com/GoogleCloudPlatform/kubernetes/pkg/util.Time (RFC 3339 date and time at which the object will be deleted; populated by the system when a graceful deletion is requested, read-only; if not set, graceful deletion of the object has not been requested)
      labels:                                                         # map[string]string (map of string keys and values that can be used to organize and categorize objects; may match selectors of replication controllers and services)
        [string]:                                                     # string
      annotations:                                                    # map[string]string (map of string keys and values that can be used by external tooling to store and retrieve arbitrary metadata about objects)
        [string]:                                                     # string
    rules:                                                            # []github.com/openshift/origin/pkg/authorization/api/v1beta1.PolicyRule
    - verbs:                                                          # []string
    - - [string]                                                      # 
      attributeRestrictions:                                          # github.com/GoogleCloudPlatform/kubernetes/pkg/runtime.RawExtension
      - [byte]                                                        # 
      resourceKinds:                                                  # []string
      - [string]                                                      # 
      resources:                                                      # []string
      - [string]                                                      # 
      resourceNames:                                                  # []string
      - [string]                                                      # 
      nonResourceURLs:                                                # []string
      - [string]                                                      # 


PolicyBinding
=============

PolicyBinding is a object that holds all the RoleBindings for a particular namespace.  There is
one PolicyBinding document per referenced Policy namespace

kind: PolicyBinding                                                   # string (kind of object, in CamelCase; cannot be updated)
apiVersion: v1beta1                                                   # string (version of the schema the object should have)
metadata:                                                             # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta3.ObjectMeta
  name:                                                               # string (string that identifies an object. Must be unique within a namespace; cannot be updated)
  generateName:                                                       # string (an optional prefix to use to generate a unique name; has the same validation rules as name; optional, and is applied only name if is not specified)
  namespace:                                                          # string (namespace of the object; cannot be updated)
  selfLink:                                                           # string (URL for the object; populated by the system, read-only)
  uid:                                                                # github.com/GoogleCloudPlatform/kubernetes/pkg/types.UID (unique UUID across space and time; populated by the system; read-only)
  resourceVersion:                                                    # string (string that identifies the internal version of this object that can be used by clients to determine when objects have changed; populated by the system, read-only; value must be treated as opaque by clients and passed unmodified back to the server: https://github.com/GoogleCloudPlatform/kubernetes/blob/master/docs/api-conventions.md#concurrency-control-and-consistency)
  creationTimestamp:                                                  # github.com/GoogleCloudPlatform/kubernetes/pkg/util.Time (RFC 3339 date and time at which the object was created; populated by the system, read-only; null for lists)
  deletionTimestamp:                                                  # *github.com/GoogleCloudPlatform/kubernetes/pkg/util.Time (RFC 3339 date and time at which the object will be deleted; populated by the system when a graceful deletion is requested, read-only; if not set, graceful deletion of the object has not been requested)
  labels:                                                             # map[string]string (map of string keys and values that can be used to organize and categorize objects; may match selectors of replication controllers and services)
    [string]:                                                         # string
  annotations:                                                        # map[string]string (map of string keys and values that can be used by external tooling to store and retrieve arbitrary metadata about objects)
    [string]:                                                         # string
lastModified:                                                         # github.com/GoogleCloudPlatform/kubernetes/pkg/util.Time
policyRef:                                                            # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta3.ObjectReference
  kind:                                                               # string (kind of the referent)
  namespace:                                                          # string (namespace of the referent)
  name:                                                               # string (name of the referent)
  uid:                                                                # github.com/GoogleCloudPlatform/kubernetes/pkg/types.UID (uid of the referent)
  apiVersion:                                                         # string (API version of the referent)
  resourceVersion:                                                    # string (specific resourceVersion to which this reference is made, if any: https://github.com/GoogleCloudPlatform/kubernetes/blob/master/docs/api-conventions.md#concurrency-control-and-consistency)
  fieldPath:                                                          # string (if referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2])
roleBindings:                                                         # []github.com/openshift/origin/pkg/authorization/api/v1beta1.NamedRoleBinding
- name:                                                               # string
  roleBinding:                                                        # github.com/openshift/origin/pkg/authorization/api/v1beta1.RoleBinding
    kind:                                                             # string (kind of object, in CamelCase; cannot be updated)
    apiVersion:                                                       # string (version of the schema the object should have)
    metadata:                                                         # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta3.ObjectMeta
      name:                                                           # string (string that identifies an object. Must be unique within a namespace; cannot be updated)
      generateName:                                                   # string (an optional prefix to use to generate a unique name; has the same validation rules as name; optional, and is applied only name if is not specified)
      namespace:                                                      # string (namespace of the object; cannot be updated)
      selfLink:                                                       # string (URL for the object; populated by the system, read-only)
      uid:                                                            # github.com/GoogleCloudPlatform/kubernetes/pkg/types.UID (unique UUID across space and time; populated by the system; read-only)
      resourceVersion:                                                # string (string that identifies the internal version of this object that can be used by clients to determine when objects have changed; populated by the system, read-only; value must be treated as opaque by clients and passed unmodified back to the server: https://github.com/GoogleCloudPlatform/kubernetes/blob/master/docs/api-conventions.md#concurrency-control-and-consistency)
      creationTimestamp:                                              # github.com/GoogleCloudPlatform/kubernetes/pkg/util.Time (RFC 3339 date and time at which the object was created; populated by the system, read-only; null for lists)
      deletionTimestamp:                                              # *github.com/GoogleCloudPlatform/kubernetes/pkg/util.Time (RFC 3339 date and time at which the object will be deleted; populated by the system when a graceful deletion is requested, read-only; if not set, graceful deletion of the object has not been requested)
      labels:                                                         # map[string]string (map of string keys and values that can be used to organize and categorize objects; may match selectors of replication controllers and services)
        [string]:                                                     # string
      annotations:                                                    # map[string]string (map of string keys and values that can be used by external tooling to store and retrieve arbitrary metadata about objects)
        [string]:                                                     # string
    userNames:                                                        # []string
    - [string]                                                        # 
    groupNames:                                                       # []string
    - [string]                                                        # 
    roleRef:                                                          # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta3.ObjectReference
      kind:                                                           # string (kind of the referent)
      namespace:                                                      # string (namespace of the referent)
      name:                                                           # string (name of the referent)
      uid:                                                            # github.com/GoogleCloudPlatform/kubernetes/pkg/types.UID (uid of the referent)
      apiVersion:                                                     # string (API version of the referent)
      resourceVersion:                                                # string (specific resourceVersion to which this reference is made, if any: https://github.com/GoogleCloudPlatform/kubernetes/blob/master/docs/api-conventions.md#concurrency-control-and-consistency)
      fieldPath:                                                      # string (if referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2])


PolicyBindingList
=================

PolicyBindingList is a collection of PolicyBindings

kind: PolicyBindingList                                               # string (kind of object, in CamelCase; cannot be updated)
apiVersion: v1beta1                                                   # string (version of the schema the object should have)
metadata:                                                             # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta3.ListMeta
  selfLink:                                                           # string (URL for the object; populated by the system, read-only)
  resourceVersion:                                                    # string (string that identifies the internal version of this object that can be used by clients to determine when objects have changed; populated by the system, read-only; value must be treated as opaque by clients and passed unmodified back to the server: https://github.com/GoogleCloudPlatform/kubernetes/blob/master/docs/api-conventions.md#concurrency-control-and-consistency)
items:                                                                # []github.com/openshift/origin/pkg/authorization/api/v1beta1.PolicyBinding
- kind:                                                               # string (kind of object, in CamelCase; cannot be updated)
  apiVersion:                                                         # string (version of the schema the object should have)
  metadata:                                                           # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta3.ObjectMeta
    name:                                                             # string (string that identifies an object. Must be unique within a namespace; cannot be updated)
    generateName:                                                     # string (an optional prefix to use to generate a unique name; has the same validation rules as name; optional, and is applied only name if is not specified)
    namespace:                                                        # string (namespace of the object; cannot be updated)
    selfLink:                                                         # string (URL for the object; populated by the system, read-only)
    uid:                                                              # github.com/GoogleCloudPlatform/kubernetes/pkg/types.UID (unique UUID across space and time; populated by the system; read-only)
    resourceVersion:                                                  # string (string that identifies the internal version of this object that can be used by clients to determine when objects have changed; populated by the system, read-only; value must be treated as opaque by clients and passed unmodified back to the server: https://github.com/GoogleCloudPlatform/kubernetes/blob/master/docs/api-conventions.md#concurrency-control-and-consistency)
    creationTimestamp:                                                # github.com/GoogleCloudPlatform/kubernetes/pkg/util.Time (RFC 3339 date and time at which the object was created; populated by the system, read-only; null for lists)
    deletionTimestamp:                                                # *github.com/GoogleCloudPlatform/kubernetes/pkg/util.Time (RFC 3339 date and time at which the object will be deleted; populated by the system when a graceful deletion is requested, read-only; if not set, graceful deletion of the object has not been requested)
    labels:                                                           # map[string]string (map of string keys and values that can be used to organize and categorize objects; may match selectors of replication controllers and services)
      [string]:                                                       # string
    annotations:                                                      # map[string]string (map of string keys and values that can be used by external tooling to store and retrieve arbitrary metadata about objects)
      [string]:                                                       # string
  lastModified:                                                       # github.com/GoogleCloudPlatform/kubernetes/pkg/util.Time
  policyRef:                                                          # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta3.ObjectReference
    kind:                                                             # string (kind of the referent)
    namespace:                                                        # string (namespace of the referent)
    name:                                                             # string (name of the referent)
    uid:                                                              # github.com/GoogleCloudPlatform/kubernetes/pkg/types.UID (uid of the referent)
    apiVersion:                                                       # string (API version of the referent)
    resourceVersion:                                                  # string (specific resourceVersion to which this reference is made, if any: https://github.com/GoogleCloudPlatform/kubernetes/blob/master/docs/api-conventions.md#concurrency-control-and-consistency)
    fieldPath:                                                        # string (if referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2])
  roleBindings:                                                       # []github.com/openshift/origin/pkg/authorization/api/v1beta1.NamedRoleBinding
  - name:                                                             # string
    roleBinding:                                                      # github.com/openshift/origin/pkg/authorization/api/v1beta1.RoleBinding
      kind:                                                           # string (kind of object, in CamelCase; cannot be updated)
      apiVersion:                                                     # string (version of the schema the object should have)
      metadata:                                                       # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta3.ObjectMeta
        name:                                                         # string (string that identifies an object. Must be unique within a namespace; cannot be updated)
        generateName:                                                 # string (an optional prefix to use to generate a unique name; has the same validation rules as name; optional, and is applied only name if is not specified)
        namespace:                                                    # string (namespace of the object; cannot be updated)
        selfLink:                                                     # string (URL for the object; populated by the system, read-only)
        uid:                                                          # github.com/GoogleCloudPlatform/kubernetes/pkg/types.UID (unique UUID across space and time; populated by the system; read-only)
        resourceVersion:                                              # string (string that identifies the internal version of this object that can be used by clients to determine when objects have changed; populated by the system, read-only; value must be treated as opaque by clients and passed unmodified back to the server: https://github.com/GoogleCloudPlatform/kubernetes/blob/master/docs/api-conventions.md#concurrency-control-and-consistency)
        creationTimestamp:                                            # github.com/GoogleCloudPlatform/kubernetes/pkg/util.Time (RFC 3339 date and time at which the object was created; populated by the system, read-only; null for lists)
        deletionTimestamp:                                            # *github.com/GoogleCloudPlatform/kubernetes/pkg/util.Time (RFC 3339 date and time at which the object will be deleted; populated by the system when a graceful deletion is requested, read-only; if not set, graceful deletion of the object has not been requested)
        labels:                                                       # map[string]string (map of string keys and values that can be used to organize and categorize objects; may match selectors of replication controllers and services)
          [string]:                                                   # string
        annotations:                                                  # map[string]string (map of string keys and values that can be used by external tooling to store and retrieve arbitrary metadata about objects)
          [string]:                                                   # string
      userNames:                                                      # []string
      - [string]                                                      # 
      groupNames:                                                     # []string
      - [string]                                                      # 
      roleRef:                                                        # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta3.ObjectReference
        kind:                                                         # string (kind of the referent)
        namespace:                                                    # string (namespace of the referent)
        name:                                                         # string (name of the referent)
        uid:                                                          # github.com/GoogleCloudPlatform/kubernetes/pkg/types.UID (uid of the referent)
        apiVersion:                                                   # string (API version of the referent)
        resourceVersion:                                              # string (specific resourceVersion to which this reference is made, if any: https://github.com/GoogleCloudPlatform/kubernetes/blob/master/docs/api-conventions.md#concurrency-control-and-consistency)
        fieldPath:                                                    # string (if referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2])


PolicyList
==========

PolicyList is a collection of Policies

kind: PolicyList                                                      # string (kind of object, in CamelCase; cannot be updated)
apiVersion: v1beta1                                                   # string (version of the schema the object should have)
metadata:                                                             # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta3.ListMeta
  selfLink:                                                           # string (URL for the object; populated by the system, read-only)
  resourceVersion:                                                    # string (string that identifies the internal version of this object that can be used by clients to determine when objects have changed; populated by the system, read-only; value must be treated as opaque by clients and passed unmodified back to the server: https://github.com/GoogleCloudPlatform/kubernetes/blob/master/docs/api-conventions.md#concurrency-control-and-consistency)
items:                                                                # []github.com/openshift/origin/pkg/authorization/api/v1beta1.Policy
- kind:                                                               # string (kind of object, in CamelCase; cannot be updated)
  apiVersion:                                                         # string (version of the schema the object should have)
  metadata:                                                           # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta3.ObjectMeta
    name:                                                             # string (string that identifies an object. Must be unique within a namespace; cannot be updated)
    generateName:                                                     # string (an optional prefix to use to generate a unique name; has the same validation rules as name; optional, and is applied only name if is not specified)
    namespace:                                                        # string (namespace of the object; cannot be updated)
    selfLink:                                                         # string (URL for the object; populated by the system, read-only)
    uid:                                                              # github.com/GoogleCloudPlatform/kubernetes/pkg/types.UID (unique UUID across space and time; populated by the system; read-only)
    resourceVersion:                                                  # string (string that identifies the internal version of this object that can be used by clients to determine when objects have changed; populated by the system, read-only; value must be treated as opaque by clients and passed unmodified back to the server: https://github.com/GoogleCloudPlatform/kubernetes/blob/master/docs/api-conventions.md#concurrency-control-and-consistency)
    creationTimestamp:                                                # github.com/GoogleCloudPlatform/kubernetes/pkg/util.Time (RFC 3339 date and time at which the object was created; populated by the system, read-only; null for lists)
    deletionTimestamp:                                                # *github.com/GoogleCloudPlatform/kubernetes/pkg/util.Time (RFC 3339 date and time at which the object will be deleted; populated by the system when a graceful deletion is requested, read-only; if not set, graceful deletion of the object has not been requested)
    labels:                                                           # map[string]string (map of string keys and values that can be used to organize and categorize objects; may match selectors of replication controllers and services)
      [string]:                                                       # string
    annotations:                                                      # map[string]string (map of string keys and values that can be used by external tooling to store and retrieve arbitrary metadata about objects)
      [string]:                                                       # string
  lastModified:                                                       # github.com/GoogleCloudPlatform/kubernetes/pkg/util.Time
  roles:                                                              # []github.com/openshift/origin/pkg/authorization/api/v1beta1.NamedRole
  - name:                                                             # string
    role:                                                             # github.com/openshift/origin/pkg/authorization/api/v1beta1.Role
      kind:                                                           # string (kind of object, in CamelCase; cannot be updated)
      apiVersion:                                                     # string (version of the schema the object should have)
      metadata:                                                       # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta3.ObjectMeta
        name:                                                         # string (string that identifies an object. Must be unique within a namespace; cannot be updated)
        generateName:                                                 # string (an optional prefix to use to generate a unique name; has the same validation rules as name; optional, and is applied only name if is not specified)
        namespace:                                                    # string (namespace of the object; cannot be updated)
        selfLink:                                                     # string (URL for the object; populated by the system, read-only)
        uid:                                                          # github.com/GoogleCloudPlatform/kubernetes/pkg/types.UID (unique UUID across space and time; populated by the system; read-only)
        resourceVersion:                                              # string (string that identifies the internal version of this object that can be used by clients to determine when objects have changed; populated by the system, read-only; value must be treated as opaque by clients and passed unmodified back to the server: https://github.com/GoogleCloudPlatform/kubernetes/blob/master/docs/api-conventions.md#concurrency-control-and-consistency)
        creationTimestamp:                                            # github.com/GoogleCloudPlatform/kubernetes/pkg/util.Time (RFC 3339 date and time at which the object was created; populated by the system, read-only; null for lists)
        deletionTimestamp:                                            # *github.com/GoogleCloudPlatform/kubernetes/pkg/util.Time (RFC 3339 date and time at which the object will be deleted; populated by the system when a graceful deletion is requested, read-only; if not set, graceful deletion of the object has not been requested)
        labels:                                                       # map[string]string (map of string keys and values that can be used to organize and categorize objects; may match selectors of replication controllers and services)
          [string]:                                                   # string
        annotations:                                                  # map[string]string (map of string keys and values that can be used by external tooling to store and retrieve arbitrary metadata about objects)
          [string]:                                                   # string
      rules:                                                          # []github.com/openshift/origin/pkg/authorization/api/v1beta1.PolicyRule
      - verbs:                                                        # []string
      - - [string]                                                    # 
        attributeRestrictions:                                        # github.com/GoogleCloudPlatform/kubernetes/pkg/runtime.RawExtension
        - [byte]                                                      # 
        resourceKinds:                                                # []string
        - [string]                                                    # 
        resources:                                                    # []string
        - [string]                                                    # 
        resourceNames:                                                # []string
        - [string]                                                    # 
        nonResourceURLs:                                              # []string
        - [string]                                                    # 


ResourceAccessReview
====================

ResourceAccessReview is a means to request a list of which users and groups are authorized to perform the
action specified by spec

kind: ResourceAccessReview                                            # string (kind of object, in CamelCase; cannot be updated)
apiVersion: v1beta1                                                   # string (version of the schema the object should have)
verb:                                                                 # string
resource:                                                             # string
content:                                                              # github.com/GoogleCloudPlatform/kubernetes/pkg/runtime.RawExtension
- [byte]                                                              # 
resourceName:                                                         # string


ResourceAccessReviewResponse
============================

ResourceAccessReviewResponse describes who can perform the action

kind: ResourceAccessReviewResponse                                    # string (kind of object, in CamelCase; cannot be updated)
apiVersion: v1beta1                                                   # string (version of the schema the object should have)
namespace:                                                            # string
users:                                                                # []string
- [string]                                                            # 
groups:                                                               # []string
- [string]                                                            # 


Role
====

Role is a logical grouping of PolicyRules that can be referenced as a unit by RoleBindings.

kind: Role                                                            # string (kind of object, in CamelCase; cannot be updated)
apiVersion: v1beta1                                                   # string (version of the schema the object should have)
metadata:                                                             # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta3.ObjectMeta
  name:                                                               # string (string that identifies an object. Must be unique within a namespace; cannot be updated)
  generateName:                                                       # string (an optional prefix to use to generate a unique name; has the same validation rules as name; optional, and is applied only name if is not specified)
  namespace:                                                          # string (namespace of the object; cannot be updated)
  selfLink:                                                           # string (URL for the object; populated by the system, read-only)
  uid:                                                                # github.com/GoogleCloudPlatform/kubernetes/pkg/types.UID (unique UUID across space and time; populated by the system; read-only)
  resourceVersion:                                                    # string (string that identifies the internal version of this object that can be used by clients to determine when objects have changed; populated by the system, read-only; value must be treated as opaque by clients and passed unmodified back to the server: https://github.com/GoogleCloudPlatform/kubernetes/blob/master/docs/api-conventions.md#concurrency-control-and-consistency)
  creationTimestamp:                                                  # github.com/GoogleCloudPlatform/kubernetes/pkg/util.Time (RFC 3339 date and time at which the object was created; populated by the system, read-only; null for lists)
  deletionTimestamp:                                                  # *github.com/GoogleCloudPlatform/kubernetes/pkg/util.Time (RFC 3339 date and time at which the object will be deleted; populated by the system when a graceful deletion is requested, read-only; if not set, graceful deletion of the object has not been requested)
  labels:                                                             # map[string]string (map of string keys and values that can be used to organize and categorize objects; may match selectors of replication controllers and services)
    [string]:                                                         # string
  annotations:                                                        # map[string]string (map of string keys and values that can be used by external tooling to store and retrieve arbitrary metadata about objects)
    [string]:                                                         # string
rules:                                                                # []github.com/openshift/origin/pkg/authorization/api/v1beta1.PolicyRule
- verbs:                                                              # []string
- - [string]                                                          # 
  attributeRestrictions:                                              # github.com/GoogleCloudPlatform/kubernetes/pkg/runtime.RawExtension
  - [byte]                                                            # 
  resourceKinds:                                                      # []string
  - [string]                                                          # 
  resources:                                                          # []string
  - [string]                                                          # 
  resourceNames:                                                      # []string
  - [string]                                                          # 
  nonResourceURLs:                                                    # []string
  - [string]                                                          # 


RoleBinding
===========

RoleBinding references a Role, but not contain it.  It can reference any Role in the same namespace or in the global namespace.
It adds who information via Users and Groups and namespace information by which namespace it exists in.  RoleBindings in a given
namespace only have effect in that namespace (excepting the master namespace which has power in all namespaces).

kind: RoleBinding                                                     # string (kind of object, in CamelCase; cannot be updated)
apiVersion: v1beta1                                                   # string (version of the schema the object should have)
metadata:                                                             # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta3.ObjectMeta
  name:                                                               # string (string that identifies an object. Must be unique within a namespace; cannot be updated)
  generateName:                                                       # string (an optional prefix to use to generate a unique name; has the same validation rules as name; optional, and is applied only name if is not specified)
  namespace:                                                          # string (namespace of the object; cannot be updated)
  selfLink:                                                           # string (URL for the object; populated by the system, read-only)
  uid:                                                                # github.com/GoogleCloudPlatform/kubernetes/pkg/types.UID (unique UUID across space and time; populated by the system; read-only)
  resourceVersion:                                                    # string (string that identifies the internal version of this object that can be used by clients to determine when objects have changed; populated by the system, read-only; value must be treated as opaque by clients and passed unmodified back to the server: https://github.com/GoogleCloudPlatform/kubernetes/blob/master/docs/api-conventions.md#concurrency-control-and-consistency)
  creationTimestamp:                                                  # github.com/GoogleCloudPlatform/kubernetes/pkg/util.Time (RFC 3339 date and time at which the object was created; populated by the system, read-only; null for lists)
  deletionTimestamp:                                                  # *github.com/GoogleCloudPlatform/kubernetes/pkg/util.Time (RFC 3339 date and time at which the object will be deleted; populated by the system when a graceful deletion is requested, read-only; if not set, graceful deletion of the object has not been requested)
  labels:                                                             # map[string]string (map of string keys and values that can be used to organize and categorize objects; may match selectors of replication controllers and services)
    [string]:                                                         # string
  annotations:                                                        # map[string]string (map of string keys and values that can be used by external tooling to store and retrieve arbitrary metadata about objects)
    [string]:                                                         # string
userNames:                                                            # []string
- [string]                                                            # 
groupNames:                                                           # []string
- [string]                                                            # 
roleRef:                                                              # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta3.ObjectReference
  kind:                                                               # string (kind of the referent)
  namespace:                                                          # string (namespace of the referent)
  name:                                                               # string (name of the referent)
  uid:                                                                # github.com/GoogleCloudPlatform/kubernetes/pkg/types.UID (uid of the referent)
  apiVersion:                                                         # string (API version of the referent)
  resourceVersion:                                                    # string (specific resourceVersion to which this reference is made, if any: https://github.com/GoogleCloudPlatform/kubernetes/blob/master/docs/api-conventions.md#concurrency-control-and-consistency)
  fieldPath:                                                          # string (if referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2])


RoleBindingList
===============

RoleBindingList is a collection of RoleBindings

kind: RoleBindingList                                                 # string (kind of object, in CamelCase; cannot be updated)
apiVersion: v1beta1                                                   # string (version of the schema the object should have)
metadata:                                                             # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta3.ListMeta
  selfLink:                                                           # string (URL for the object; populated by the system, read-only)
  resourceVersion:                                                    # string (string that identifies the internal version of this object that can be used by clients to determine when objects have changed; populated by the system, read-only; value must be treated as opaque by clients and passed unmodified back to the server: https://github.com/GoogleCloudPlatform/kubernetes/blob/master/docs/api-conventions.md#concurrency-control-and-consistency)
items:                                                                # []github.com/openshift/origin/pkg/authorization/api/v1beta1.RoleBinding
- kind:                                                               # string (kind of object, in CamelCase; cannot be updated)
  apiVersion:                                                         # string (version of the schema the object should have)
  metadata:                                                           # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta3.ObjectMeta
    name:                                                             # string (string that identifies an object. Must be unique within a namespace; cannot be updated)
    generateName:                                                     # string (an optional prefix to use to generate a unique name; has the same validation rules as name; optional, and is applied only name if is not specified)
    namespace:                                                        # string (namespace of the object; cannot be updated)
    selfLink:                                                         # string (URL for the object; populated by the system, read-only)
    uid:                                                              # github.com/GoogleCloudPlatform/kubernetes/pkg/types.UID (unique UUID across space and time; populated by the system; read-only)
    resourceVersion:                                                  # string (string that identifies the internal version of this object that can be used by clients to determine when objects have changed; populated by the system, read-only; value must be treated as opaque by clients and passed unmodified back to the server: https://github.com/GoogleCloudPlatform/kubernetes/blob/master/docs/api-conventions.md#concurrency-control-and-consistency)
    creationTimestamp:                                                # github.com/GoogleCloudPlatform/kubernetes/pkg/util.Time (RFC 3339 date and time at which the object was created; populated by the system, read-only; null for lists)
    deletionTimestamp:                                                # *github.com/GoogleCloudPlatform/kubernetes/pkg/util.Time (RFC 3339 date and time at which the object will be deleted; populated by the system when a graceful deletion is requested, read-only; if not set, graceful deletion of the object has not been requested)
    labels:                                                           # map[string]string (map of string keys and values that can be used to organize and categorize objects; may match selectors of replication controllers and services)
      [string]:                                                       # string
    annotations:                                                      # map[string]string (map of string keys and values that can be used by external tooling to store and retrieve arbitrary metadata about objects)
      [string]:                                                       # string
  userNames:                                                          # []string
  - [string]                                                          # 
  groupNames:                                                         # []string
  - [string]                                                          # 
  roleRef:                                                            # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta3.ObjectReference
    kind:                                                             # string (kind of the referent)
    namespace:                                                        # string (namespace of the referent)
    name:                                                             # string (name of the referent)
    uid:                                                              # github.com/GoogleCloudPlatform/kubernetes/pkg/types.UID (uid of the referent)
    apiVersion:                                                       # string (API version of the referent)
    resourceVersion:                                                  # string (specific resourceVersion to which this reference is made, if any: https://github.com/GoogleCloudPlatform/kubernetes/blob/master/docs/api-conventions.md#concurrency-control-and-consistency)
    fieldPath:                                                        # string (if referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2])


RoleList
========

RoleList is a collection of Roles

kind: RoleList                                                        # string (kind of object, in CamelCase; cannot be updated)
apiVersion: v1beta1                                                   # string (version of the schema the object should have)
metadata:                                                             # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta3.ListMeta
  selfLink:                                                           # string (URL for the object; populated by the system, read-only)
  resourceVersion:                                                    # string (string that identifies the internal version of this object that can be used by clients to determine when objects have changed; populated by the system, read-only; value must be treated as opaque by clients and passed unmodified back to the server: https://github.com/GoogleCloudPlatform/kubernetes/blob/master/docs/api-conventions.md#concurrency-control-and-consistency)
items:                                                                # []github.com/openshift/origin/pkg/authorization/api/v1beta1.Role
- kind:                                                               # string (kind of object, in CamelCase; cannot be updated)
  apiVersion:                                                         # string (version of the schema the object should have)
  metadata:                                                           # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta3.ObjectMeta
    name:                                                             # string (string that identifies an object. Must be unique within a namespace; cannot be updated)
    generateName:                                                     # string (an optional prefix to use to generate a unique name; has the same validation rules as name; optional, and is applied only name if is not specified)
    namespace:                                                        # string (namespace of the object; cannot be updated)
    selfLink:                                                         # string (URL for the object; populated by the system, read-only)
    uid:                                                              # github.com/GoogleCloudPlatform/kubernetes/pkg/types.UID (unique UUID across space and time; populated by the system; read-only)
    resourceVersion:                                                  # string (string that identifies the internal version of this object that can be used by clients to determine when objects have changed; populated by the system, read-only; value must be treated as opaque by clients and passed unmodified back to the server: https://github.com/GoogleCloudPlatform/kubernetes/blob/master/docs/api-conventions.md#concurrency-control-and-consistency)
    creationTimestamp:                                                # github.com/GoogleCloudPlatform/kubernetes/pkg/util.Time (RFC 3339 date and time at which the object was created; populated by the system, read-only; null for lists)
    deletionTimestamp:                                                # *github.com/GoogleCloudPlatform/kubernetes/pkg/util.Time (RFC 3339 date and time at which the object will be deleted; populated by the system when a graceful deletion is requested, read-only; if not set, graceful deletion of the object has not been requested)
    labels:                                                           # map[string]string (map of string keys and values that can be used to organize and categorize objects; may match selectors of replication controllers and services)
      [string]:                                                       # string
    annotations:                                                      # map[string]string (map of string keys and values that can be used by external tooling to store and retrieve arbitrary metadata about objects)
      [string]:                                                       # string
  rules:                                                              # []github.com/openshift/origin/pkg/authorization/api/v1beta1.PolicyRule
  - verbs:                                                            # []string
  - - [string]                                                        # 
    attributeRestrictions:                                            # github.com/GoogleCloudPlatform/kubernetes/pkg/runtime.RawExtension
    - [byte]                                                          # 
    resourceKinds:                                                    # []string
    - [string]                                                        # 
    resources:                                                        # []string
    - [string]                                                        # 
    resourceNames:                                                    # []string
    - [string]                                                        # 
    nonResourceURLs:                                                  # []string
    - [string]                                                        # 


SubjectAccessReview
===================

SubjectAccessReview is an object for requesting information about whether a user or group can perform an action

kind: SubjectAccessReview                                             # string (kind of object, in CamelCase; cannot be updated)
apiVersion: v1beta1                                                   # string (version of the schema the object should have)
verb:                                                                 # string
resource:                                                             # string
user:                                                                 # string
groups:                                                               # []string
- [string]                                                            # 
content:                                                              # github.com/GoogleCloudPlatform/kubernetes/pkg/runtime.RawExtension
- [byte]                                                              # 
resourceName:                                                         # string


SubjectAccessReviewResponse
===========================

SubjectAccessReviewResponse describes whether or not a user or group can perform an action

kind: SubjectAccessReviewResponse                                     # string (kind of object, in CamelCase; cannot be updated)
apiVersion: v1beta1                                                   # string (version of the schema the object should have)
namespace:                                                            # string
allowed:                                                              # bool
reason:                                                               # string


Config
======

Config contains a list of Kubernetes resources to be applied.
DEPRECATED: All clients should use Kubernetes api.List instead of Config.

kind: Config                                                          # string (kind of object, in CamelCase; cannot be updated)
apiVersion: v1beta1                                                   # string (version of the schema the object should have)
metadata:                                                             # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta3.ObjectMeta
  name:                                                               # string (string that identifies an object. Must be unique within a namespace; cannot be updated)
  generateName:                                                       # string (an optional prefix to use to generate a unique name; has the same validation rules as name; optional, and is applied only name if is not specified)
  namespace:                                                          # string (namespace of the object; cannot be updated)
  selfLink:                                                           # string (URL for the object; populated by the system, read-only)
  uid:                                                                # github.com/GoogleCloudPlatform/kubernetes/pkg/types.UID (unique UUID across space and time; populated by the system; read-only)
  resourceVersion:                                                    # string (string that identifies the internal version of this object that can be used by clients to determine when objects have changed; populated by the system, read-only; value must be treated as opaque by clients and passed unmodified back to the server: https://github.com/GoogleCloudPlatform/kubernetes/blob/master/docs/api-conventions.md#concurrency-control-and-consistency)
  creationTimestamp:                                                  # github.com/GoogleCloudPlatform/kubernetes/pkg/util.Time (RFC 3339 date and time at which the object was created; populated by the system, read-only; null for lists)
  deletionTimestamp:                                                  # *github.com/GoogleCloudPlatform/kubernetes/pkg/util.Time (RFC 3339 date and time at which the object will be deleted; populated by the system when a graceful deletion is requested, read-only; if not set, graceful deletion of the object has not been requested)
  labels:                                                             # map[string]string (map of string keys and values that can be used to organize and categorize objects; may match selectors of replication controllers and services)
    [string]:                                                         # string
  annotations:                                                        # map[string]string (map of string keys and values that can be used by external tooling to store and retrieve arbitrary metadata about objects)
    [string]:                                                         # string
items:                                                                # []github.com/GoogleCloudPlatform/kubernetes/pkg/runtime.RawExtension
- - [byte]                                                            # 


Deployment
==========

A deployment represents a single configuration of a pod deployed into the cluster, and may
represent both a current deployment or a historical deployment.

DEPRECATED: This type longer drives any system behavior. Deployments are now represented directly
by ReplicationControllers. Use DeploymentConfig to drive deployments.

kind: Deployment                                                      # string (kind of object, in CamelCase; cannot be updated)
apiVersion: v1beta1                                                   # string (version of the schema the object should have)
metadata:                                                             # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta3.ObjectMeta
  name:                                                               # string (string that identifies an object. Must be unique within a namespace; cannot be updated)
  generateName:                                                       # string (an optional prefix to use to generate a unique name; has the same validation rules as name; optional, and is applied only name if is not specified)
  namespace:                                                          # string (namespace of the object; cannot be updated)
  selfLink:                                                           # string (URL for the object; populated by the system, read-only)
  uid:                                                                # github.com/GoogleCloudPlatform/kubernetes/pkg/types.UID (unique UUID across space and time; populated by the system; read-only)
  resourceVersion:                                                    # string (string that identifies the internal version of this object that can be used by clients to determine when objects have changed; populated by the system, read-only; value must be treated as opaque by clients and passed unmodified back to the server: https://github.com/GoogleCloudPlatform/kubernetes/blob/master/docs/api-conventions.md#concurrency-control-and-consistency)
  creationTimestamp:                                                  # github.com/GoogleCloudPlatform/kubernetes/pkg/util.Time (RFC 3339 date and time at which the object was created; populated by the system, read-only; null for lists)
  deletionTimestamp:                                                  # *github.com/GoogleCloudPlatform/kubernetes/pkg/util.Time (RFC 3339 date and time at which the object will be deleted; populated by the system when a graceful deletion is requested, read-only; if not set, graceful deletion of the object has not been requested)
  labels:                                                             # map[string]string (map of string keys and values that can be used to organize and categorize objects; may match selectors of replication controllers and services)
    [string]:                                                         # string
  annotations:                                                        # map[string]string (map of string keys and values that can be used by external tooling to store and retrieve arbitrary metadata about objects)
    [string]:                                                         # string
strategy:                                                             # github.com/openshift/origin/pkg/deploy/api/v1beta1.DeploymentStrategy
  type: Custom|Recreate                                               # github.com/openshift/origin/pkg/deploy/api/v1beta1.DeploymentStrategyType
  customParams:                                                       # *github.com/openshift/origin/pkg/deploy/api/v1beta1.CustomDeploymentStrategyParams
    image:                                                            # string
    environment:                                                      # []github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta3.EnvVar
    - name:                                                           # string (name of the environment variable; must be a C_IDENTIFIER)
      value:                                                          # string (value of the environment variable; defaults to empty string)
    command:                                                          # []string
    - [string]                                                        # 
  recreateParams:                                                     # *github.com/openshift/origin/pkg/deploy/api/v1beta1.RecreateDeploymentStrategyParams
    pre:                                                              # *github.com/openshift/origin/pkg/deploy/api/v1beta1.LifecycleHook
      failurePolicy: Abort|Ignore|Retry                               # github.com/openshift/origin/pkg/deploy/api/v1beta1.LifecycleHookFailurePolicy
      execNewPod:                                                     # *github.com/openshift/origin/pkg/deploy/api/v1beta1.ExecNewPodHook
        command:                                                      # []string
        - [string]                                                    # 
        env:                                                          # []github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta3.EnvVar
        - name:                                                       # string (name of the environment variable; must be a C_IDENTIFIER)
          value:                                                      # string (value of the environment variable; defaults to empty string)
        containerName:                                                # string
    post:                                                             # *github.com/openshift/origin/pkg/deploy/api/v1beta1.LifecycleHook
      failurePolicy: Abort|Ignore|Retry                               # github.com/openshift/origin/pkg/deploy/api/v1beta1.LifecycleHookFailurePolicy
      execNewPod:                                                     # *github.com/openshift/origin/pkg/deploy/api/v1beta1.ExecNewPodHook
        command:                                                      # []string
        - [string]                                                    # 
        env:                                                          # []github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta3.EnvVar
        - name:                                                       # string (name of the environment variable; must be a C_IDENTIFIER)
          value:                                                      # string (value of the environment variable; defaults to empty string)
        containerName:                                                # string
controllerTemplate:                                                   # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ReplicationControllerState
  replicas:                                                           # int (number of replicas (desired or observed, as appropriate))
  replicaSelector:                                                    # map[string]string (label keys and values that must match in order to be controlled by this replication controller)
    [string]:                                                         # string
  podTemplate:                                                        # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.PodTemplate (template for pods to be created by this replication controller when the observed number of replicas is less than the desired number of replicas)
    desiredState:                                                     # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.PodState (specification of the desired state of pods created from this template)
      manifest:                                                       # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ContainerManifest (manifest of containers and volumes comprising the pod)
        version:                                                      # string (manifest version; must be v1beta1)
        id:                                                           # string (manifest name; must be a DNS_SUBDOMAIN; cannot be updated)
        uuid:                                                         # github.com/GoogleCloudPlatform/kubernetes/pkg/types.UID (manifest UUID, populated by the system, read-only)
        volumes:                                                      # []github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.Volume (list of volumes that can be mounted by containers belonging to the pod)
        - name:                                                       # string (volume name; must be a DNS_LABEL and unique within the pod)
          source:                                                     # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.VolumeSource (location and type of volume to mount; at most one of HostDir, EmptyDir, GCEPersistentDisk, or GitRepo; default is EmptyDir)
            hostDir:                                                  # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.HostPathVolumeSource (pre-existing host file or directory; generally for privileged system daemons or other agents tied to the host)
              path:                                                   # string (path of the directory on the host)
            emptyDir:                                                 # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.EmptyDirVolumeSource (temporary directory that shares a pod's lifetime)
              medium: |Memory                                         # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.StorageType (type of storage used to back the volume; must be an empty string (default) or Memory)
            persistentDisk:                                           # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.GCEPersistentDiskVolumeSource (GCE disk resource attached to the host machine on demand)
              pdName:                                                 # string (unique name of the PD resource in GCE)
              fsType:                                                 # string (file system type to mount, such as ext4, xfs, ntfs)
              partition:                                              # int (partition on the disk to mount (e.g., '1' for /dev/sda1); if omitted the plain device name (e.g., /dev/sda) will be mounted)
              readOnly:                                               # bool (read-only if true, read-write otherwise (false or unspecified))
            gitRepo:                                                  # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.GitRepoVolumeSource (git repository at a particular revision)
              repository:                                             # string (repository URL)
              revision:                                               # string (commit hash for the specified revision)
            secret:                                                   # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.SecretVolumeSource (secret to populate volume with)
              target:                                                 # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ObjectReference (target is a reference to a secret)
                kind:                                                 # string (kind of the referent)
                namespace:                                            # string (namespace of the referent)
                name:                                                 # string (id of the referent)
                uid:                                                  # github.com/GoogleCloudPlatform/kubernetes/pkg/types.UID (uid of the referent)
                apiVersion:                                           # string (API version of the referent)
                resourceVersion:                                      # string (specific resourceVersion to which this reference is made, if any: https://github.com/GoogleCloudPlatform/kubernetes/blob/master/docs/api-conventions.md#concurrency-control-and-consistency)
                fieldPath:                                            # string (if referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2])
            nfs:                                                      # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.NFSVolumeSource (NFS volume that will be mounted in the host machine )
              server:                                                 # string (the hostname or IP address of the NFS server)
              path:                                                   # string (the path that is exported by the NFS server)
              readOnly:                                               # bool (forces the NFS export to be mounted with read-only permissions)
            iscsi:                                                    # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ISCSIVolumeSource (iSCSI disk attached to host machine on demand)
              targetPortal:                                           # string (iSCSI target portal)
              iqn:                                                    # string (iSCSI Qualified Name)
              lun:                                                    # int (iscsi target lun number)
              fsType:                                                 # string (file system type to mount, such as ext4, xfs, ntfs)
              readOnly:                                               # bool (read-only if true, read-write otherwise (false or unspecified))
            glusterfs:                                                # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.GlusterfsVolumeSource (Glusterfs volume that will be mounted on the host machine )
              endpoints:                                              # string (gluster hosts endpoints name)
              path:                                                   # string (path to gluster volume)
              readOnly:                                               # bool (Glusterfs volume to be mounted with read-only permissions)
        containers:                                                   # []github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.Container (list of containers belonging to the pod; containers cannot currently be added or removed)
        - name:                                                       # string (name of the container; must be a DNS_LABEL and unique within the pod; cannot be updated)
          image:                                                      # string (Docker image name)
          entrypoint:                                                 # []string (entrypoint array; not executed within a shell; the image's entrypoint is used if this is not provided; cannot be updated)
          - [string]                                                  # 
          command:                                                    # []string (command argv array; not executed within a shell; the image's cmd is used if this is not provided; cannot be updated)
          - [string]                                                  # 
          workingDir:                                                 # string (container's working directory; defaults to image's default; cannot be updated)
          ports:                                                      # []github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ContainerPort (list of ports to expose from the container; cannot be updated)
          - name:                                                     # string (name for the port that can be referred to by services; must be a DNS_LABEL and unique without the pod)
            hostPort:                                                 # int (number of port to expose on the host; most containers do not need this)
            containerPort:                                            # int (number of port to expose on the pod's IP address)
            protocol: TCP|UDP                                         # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.Protocol (protocol for port; must be UDP or TCP; TCP if unspecified)
            hostIP:                                                   # string (host IP to bind the port to)
          env:                                                        # []github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.EnvVar (list of environment variables to set in the container; cannot be updated)
          - name:                                                     # string (name of the environment variable; must be a C_IDENTIFIER)
            key:                                                      # string (name of the environment variable; must be a C_IDENTIFIER; deprecated - use name instead)
            value:                                                    # string (value of the environment variable; defaults to empty string)
          resources:                                                  # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ResourceRequirements (Compute Resources required by this container; cannot be updated)
            limits:                                                   # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ResourceList (Maximum amount of compute resources allowed)
              [github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ResourceName]: # github.com/GoogleCloudPlatform/kubernetes/pkg/util.IntOrString
            requests:                                                 # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ResourceList (Minimum amount of resources requested)
              [github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ResourceName]: # github.com/GoogleCloudPlatform/kubernetes/pkg/util.IntOrString
          cpu:                                                        # int (CPU share in thousandths of a core; cannot be updated)
          memory:                                                     # int64 (memory limit in bytes; defaults to unlimited; cannot be updated)
          volumeMounts:                                               # []github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.VolumeMount (pod volumes to mount into the container's filesystem; cannot be updated)
          - name:                                                     # string (name of the volume to mount)
            readOnly:                                                 # bool (mounted read-only if true, read-write otherwise (false or unspecified))
            mountPath:                                                # string (path within the container at which the volume should be mounted; overrides path)
            path:                                                     # string (path within the container at which the volume should be mounted; deprecated)
            mountType:                                                # string (LOCAL or HOST; defaults to LOCAL; deprecated)
          livenessProbe:                                              # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.LivenessProbe (periodic probe of container liveness; container will be restarted if the probe fails; cannot be updated)
            httpGet:                                                  # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.HTTPGetAction (parameters for HTTP-based liveness probe)
              path:                                                   # string (path to access on the HTTP server)
              port:                                                   # github.com/GoogleCloudPlatform/kubernetes/pkg/util.IntOrString (number or name of the port to access on the container)
              host:                                                   # string (hostname to connect to; defaults to pod IP)
            tcpSocket:                                                # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.TCPSocketAction (parameters for TCP-based liveness probe)
              port:                                                   # github.com/GoogleCloudPlatform/kubernetes/pkg/util.IntOrString (number of name of the port to access on the container)
            exec:                                                     # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ExecAction (parameters for exec-based liveness probe)
              command:                                                # []string (command line to execute inside the container; working directory for the command is root ('/') in the container's file system; the command is exec'd, not run inside a shell; exit status of 0 is treated as live/healthy and non-zero is unhealthy)
              - [string]                                              # 
            initialDelaySeconds:                                      # int64 (number of seconds after the container has started before liveness probes are initiated)
            timeoutSeconds:                                           # int64 (number of seconds after which liveness probes timeout; defaults to 1 second)
          readinessProbe:                                             # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.LivenessProbe (periodic probe of container service readiness; container will be removed from service endpoints if the probe fails; cannot be updated)
            httpGet:                                                  # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.HTTPGetAction (parameters for HTTP-based liveness probe)
              path:                                                   # string (path to access on the HTTP server)
              port:                                                   # github.com/GoogleCloudPlatform/kubernetes/pkg/util.IntOrString (number or name of the port to access on the container)
              host:                                                   # string (hostname to connect to; defaults to pod IP)
            tcpSocket:                                                # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.TCPSocketAction (parameters for TCP-based liveness probe)
              port:                                                   # github.com/GoogleCloudPlatform/kubernetes/pkg/util.IntOrString (number of name of the port to access on the container)
            exec:                                                     # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ExecAction (parameters for exec-based liveness probe)
              command:                                                # []string (command line to execute inside the container; working directory for the command is root ('/') in the container's file system; the command is exec'd, not run inside a shell; exit status of 0 is treated as live/healthy and non-zero is unhealthy)
              - [string]                                              # 
            initialDelaySeconds:                                      # int64 (number of seconds after the container has started before liveness probes are initiated)
            timeoutSeconds:                                           # int64 (number of seconds after which liveness probes timeout; defaults to 1 second)
          lifecycle:                                                  # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.Lifecycle (actions that the management system should take in response to container lifecycle events; cannot be updated)
            postStart:                                                # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.Handler (called immediately after a container is started; if the handler fails, the container is terminated and restarted according to its restart policy; other management of the container blocks until the hook completes)
              exec:                                                   # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ExecAction (exec-based handler)
                command:                                              # []string (command line to execute inside the container; working directory for the command is root ('/') in the container's file system; the command is exec'd, not run inside a shell; exit status of 0 is treated as live/healthy and non-zero is unhealthy)
                - [string]                                            # 
              httpGet:                                                # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.HTTPGetAction (HTTP-based handler)
                path:                                                 # string (path to access on the HTTP server)
                port:                                                 # github.com/GoogleCloudPlatform/kubernetes/pkg/util.IntOrString (number or name of the port to access on the container)
                host:                                                 # string (hostname to connect to; defaults to pod IP)
              tcpSocket:                                              # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.TCPSocketAction (TCP-based handler; TCP hooks not yet supported)
                port:                                                 # github.com/GoogleCloudPlatform/kubernetes/pkg/util.IntOrString (number of name of the port to access on the container)
            preStop:                                                  # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.Handler (called before a container is terminated; the container is terminated after the handler completes; other management of the container blocks until the hook completes)
              exec:                                                   # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ExecAction (exec-based handler)
                command:                                              # []string (command line to execute inside the container; working directory for the command is root ('/') in the container's file system; the command is exec'd, not run inside a shell; exit status of 0 is treated as live/healthy and non-zero is unhealthy)
                - [string]                                            # 
              httpGet:                                                # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.HTTPGetAction (HTTP-based handler)
                path:                                                 # string (path to access on the HTTP server)
                port:                                                 # github.com/GoogleCloudPlatform/kubernetes/pkg/util.IntOrString (number or name of the port to access on the container)
                host:                                                 # string (hostname to connect to; defaults to pod IP)
              tcpSocket:                                              # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.TCPSocketAction (TCP-based handler; TCP hooks not yet supported)
                port:                                                 # github.com/GoogleCloudPlatform/kubernetes/pkg/util.IntOrString (number of name of the port to access on the container)
          terminationMessagePath:                                     # string (path at which the file to which the container's termination message will be written is mounted into the container's filesystem; message written is intended to be brief final status, such as an assertion failure message; defaults to /dev/termination-log; cannot be updated)
          privileged:                                                 # bool (whether or not the container is granted privileged status; defaults to false; cannot be updated)
          imagePullPolicy: PullAlways|PullIfNotPresent|PullNever      # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.PullPolicy (image pull policy; one of PullAlways, PullNever, PullIfNotPresent; defaults to PullAlways if :latest tag is specified, or PullIfNotPresent otherwise; cannot be updated)
          capabilities:                                               # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.Capabilities (capabilities for container; cannot be updated)
            add:                                                      # []github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.CapabilityType (added capabilities)
            - [github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.CapabilityType] # 
            drop:                                                     # []github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.CapabilityType (droped capabilities)
            - [github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.CapabilityType] # 
        restartPolicy:                                                # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.RestartPolicy (restart policy for all containers within the pod; one of RestartPolicyAlways, RestartPolicyOnFailure, RestartPolicyNever)
          always:                                                     # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.RestartPolicyAlways (always restart the container after termination)
          onFailure:                                                  # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.RestartPolicyOnFailure (restart the container if it fails for any reason, but not if it succeeds (exit 0))
          never:                                                      # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.RestartPolicyNever (never restart the container)
        dnsPolicy: ClusterFirst|Default                               # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.DNSPolicy (DNS policy for containers within the pod; one of 'ClusterFirst' or 'Default')
        hostNetwork:                                                  # bool (host networking requested for this pod)
      status: Running|Succeeded|Terminated|Unknown|Waiting            # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.PodStatus (current condition of the pod, Waiting, Running, or Terminated)
      Condition:                                                      # []github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.PodCondition (current service state of pod)
      - kind: Ready                                                   # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.PodConditionKind (kind of the condition, currently only Ready)
        status: Full|None|Unknown                                     # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ConditionStatus (status of the condition, one of Full, None, Unknown)
      message:                                                        # string (human readable message indicating details about why the pod is in this condition)
      host:                                                           # string (host to which the pod is assigned; empty if not yet scheduled; cannot be updated)
      hostIP:                                                         # string (IP address of the host to which the pod is assigned; empty if not yet scheduled)
      podIP:                                                          # string (IP address allocated to the pod; routable at least within the cluster; empty if not yet allocated)
      info:                                                           # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.PodInfo (map of container name to container status)
        [string]:                                                     # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ContainerStatus
    nodeSelector:                                                     # map[string]string (a selector which must be true for the pod to fit on a node)
      [string]:                                                       # string
    labels:                                                           # map[string]string (map of string keys and values that can be used to organize and categorize the pods created from the template; must match the selector of the replication controller to which the template belongs; may match selectors of services)
      [string]:                                                       # string
    annotations:                                                      # map[string]string (map of string keys and values that can be used by external tooling to store and retrieve arbitrary metadata about pods created from the template)
      [string]:                                                       # string
status: Complete|Failed|New|Pending|Running                           # github.com/openshift/origin/pkg/deploy/api/v1beta1.DeploymentStatus
details:                                                              # *github.com/openshift/origin/pkg/deploy/api/v1beta1.DeploymentDetails
  message:                                                            # string
  causes:                                                             # []*github.com/openshift/origin/pkg/deploy/api/v1beta1.DeploymentCause
  - [*github.com/openshift/origin/pkg/deploy/api/v1beta1.DeploymentCause] # 


DeploymentConfig
================

DeploymentConfig represents a configuration for a single deployment (represented as a
ReplicationController). It also contains details about changes which resulted in the current
state of the DeploymentConfig. Each change to the DeploymentConfig which should result in
a new deployment results in an increment of LatestVersion.

kind: DeploymentConfig                                                # string (kind of object, in CamelCase; cannot be updated)
apiVersion: v1beta1                                                   # string (version of the schema the object should have)
metadata:                                                             # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta3.ObjectMeta
  name:                                                               # string (string that identifies an object. Must be unique within a namespace; cannot be updated)
  generateName:                                                       # string (an optional prefix to use to generate a unique name; has the same validation rules as name; optional, and is applied only name if is not specified)
  namespace:                                                          # string (namespace of the object; cannot be updated)
  selfLink:                                                           # string (URL for the object; populated by the system, read-only)
  uid:                                                                # github.com/GoogleCloudPlatform/kubernetes/pkg/types.UID (unique UUID across space and time; populated by the system; read-only)
  resourceVersion:                                                    # string (string that identifies the internal version of this object that can be used by clients to determine when objects have changed; populated by the system, read-only; value must be treated as opaque by clients and passed unmodified back to the server: https://github.com/GoogleCloudPlatform/kubernetes/blob/master/docs/api-conventions.md#concurrency-control-and-consistency)
  creationTimestamp:                                                  # github.com/GoogleCloudPlatform/kubernetes/pkg/util.Time (RFC 3339 date and time at which the object was created; populated by the system, read-only; null for lists)
  deletionTimestamp:                                                  # *github.com/GoogleCloudPlatform/kubernetes/pkg/util.Time (RFC 3339 date and time at which the object will be deleted; populated by the system when a graceful deletion is requested, read-only; if not set, graceful deletion of the object has not been requested)
  labels:                                                             # map[string]string (map of string keys and values that can be used to organize and categorize objects; may match selectors of replication controllers and services)
    [string]:                                                         # string
  annotations:                                                        # map[string]string (map of string keys and values that can be used by external tooling to store and retrieve arbitrary metadata about objects)
    [string]:                                                         # string
triggers:                                                             # []github.com/openshift/origin/pkg/deploy/api/v1beta1.DeploymentTriggerPolicy
- type: Manual|ConfigChange|ImageChange                               # github.com/openshift/origin/pkg/deploy/api/v1beta1.DeploymentTriggerType
  imageChangeParams:                                                  # *github.com/openshift/origin/pkg/deploy/api/v1beta1.DeploymentTriggerImageChangeParams
    automatic:                                                        # bool
    containerNames:                                                   # []string
    - [string]                                                        # 
    repositoryName:                                                   # string
    from:                                                             # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta3.ObjectReference
      kind:                                                           # string (kind of the referent)
      namespace:                                                      # string (namespace of the referent)
      name:                                                           # string (name of the referent)
      uid:                                                            # github.com/GoogleCloudPlatform/kubernetes/pkg/types.UID (uid of the referent)
      apiVersion:                                                     # string (API version of the referent)
      resourceVersion:                                                # string (specific resourceVersion to which this reference is made, if any: https://github.com/GoogleCloudPlatform/kubernetes/blob/master/docs/api-conventions.md#concurrency-control-and-consistency)
      fieldPath:                                                      # string (if referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2])
    tag:                                                              # string
    lastTriggeredImage:                                               # string
template:                                                             # github.com/openshift/origin/pkg/deploy/api/v1beta1.DeploymentTemplate
  strategy:                                                           # github.com/openshift/origin/pkg/deploy/api/v1beta1.DeploymentStrategy
    type: Custom|Recreate                                             # github.com/openshift/origin/pkg/deploy/api/v1beta1.DeploymentStrategyType
    customParams:                                                     # *github.com/openshift/origin/pkg/deploy/api/v1beta1.CustomDeploymentStrategyParams
      image:                                                          # string
      environment:                                                    # []github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta3.EnvVar
      - name:                                                         # string (name of the environment variable; must be a C_IDENTIFIER)
        value:                                                        # string (value of the environment variable; defaults to empty string)
      command:                                                        # []string
      - [string]                                                      # 
    recreateParams:                                                   # *github.com/openshift/origin/pkg/deploy/api/v1beta1.RecreateDeploymentStrategyParams
      pre:                                                            # *github.com/openshift/origin/pkg/deploy/api/v1beta1.LifecycleHook
        failurePolicy: Abort|Ignore|Retry                             # github.com/openshift/origin/pkg/deploy/api/v1beta1.LifecycleHookFailurePolicy
        execNewPod:                                                   # *github.com/openshift/origin/pkg/deploy/api/v1beta1.ExecNewPodHook
          command:                                                    # []string
          - [string]                                                  # 
          env:                                                        # []github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta3.EnvVar
          - name:                                                     # string (name of the environment variable; must be a C_IDENTIFIER)
            value:                                                    # string (value of the environment variable; defaults to empty string)
          containerName:                                              # string
      post:                                                           # *github.com/openshift/origin/pkg/deploy/api/v1beta1.LifecycleHook
        failurePolicy: Abort|Ignore|Retry                             # github.com/openshift/origin/pkg/deploy/api/v1beta1.LifecycleHookFailurePolicy
        execNewPod:                                                   # *github.com/openshift/origin/pkg/deploy/api/v1beta1.ExecNewPodHook
          command:                                                    # []string
          - [string]                                                  # 
          env:                                                        # []github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta3.EnvVar
          - name:                                                     # string (name of the environment variable; must be a C_IDENTIFIER)
            value:                                                    # string (value of the environment variable; defaults to empty string)
          containerName:                                              # string
  controllerTemplate:                                                 # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ReplicationControllerState
    replicas:                                                         # int (number of replicas (desired or observed, as appropriate))
    replicaSelector:                                                  # map[string]string (label keys and values that must match in order to be controlled by this replication controller)
      [string]:                                                       # string
    podTemplate:                                                      # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.PodTemplate (template for pods to be created by this replication controller when the observed number of replicas is less than the desired number of replicas)
      desiredState:                                                   # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.PodState (specification of the desired state of pods created from this template)
        manifest:                                                     # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ContainerManifest (manifest of containers and volumes comprising the pod)
          version:                                                    # string (manifest version; must be v1beta1)
          id:                                                         # string (manifest name; must be a DNS_SUBDOMAIN; cannot be updated)
          uuid:                                                       # github.com/GoogleCloudPlatform/kubernetes/pkg/types.UID (manifest UUID, populated by the system, read-only)
          volumes:                                                    # []github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.Volume (list of volumes that can be mounted by containers belonging to the pod)
          - name:                                                     # string (volume name; must be a DNS_LABEL and unique within the pod)
            source:                                                   # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.VolumeSource (location and type of volume to mount; at most one of HostDir, EmptyDir, GCEPersistentDisk, or GitRepo; default is EmptyDir)
              hostDir:                                                # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.HostPathVolumeSource (pre-existing host file or directory; generally for privileged system daemons or other agents tied to the host)
                path:                                                 # string (path of the directory on the host)
              emptyDir:                                               # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.EmptyDirVolumeSource (temporary directory that shares a pod's lifetime)
                medium: |Memory                                       # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.StorageType (type of storage used to back the volume; must be an empty string (default) or Memory)
              persistentDisk:                                         # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.GCEPersistentDiskVolumeSource (GCE disk resource attached to the host machine on demand)
                pdName:                                               # string (unique name of the PD resource in GCE)
                fsType:                                               # string (file system type to mount, such as ext4, xfs, ntfs)
                partition:                                            # int (partition on the disk to mount (e.g., '1' for /dev/sda1); if omitted the plain device name (e.g., /dev/sda) will be mounted)
                readOnly:                                             # bool (read-only if true, read-write otherwise (false or unspecified))
              gitRepo:                                                # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.GitRepoVolumeSource (git repository at a particular revision)
                repository:                                           # string (repository URL)
                revision:                                             # string (commit hash for the specified revision)
              secret:                                                 # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.SecretVolumeSource (secret to populate volume with)
                target:                                               # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ObjectReference (target is a reference to a secret)
                  kind:                                               # string (kind of the referent)
                  namespace:                                          # string (namespace of the referent)
                  name:                                               # string (id of the referent)
                  uid:                                                # github.com/GoogleCloudPlatform/kubernetes/pkg/types.UID (uid of the referent)
                  apiVersion:                                         # string (API version of the referent)
                  resourceVersion:                                    # string (specific resourceVersion to which this reference is made, if any: https://github.com/GoogleCloudPlatform/kubernetes/blob/master/docs/api-conventions.md#concurrency-control-and-consistency)
                  fieldPath:                                          # string (if referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2])
              nfs:                                                    # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.NFSVolumeSource (NFS volume that will be mounted in the host machine )
                server:                                               # string (the hostname or IP address of the NFS server)
                path:                                                 # string (the path that is exported by the NFS server)
                readOnly:                                             # bool (forces the NFS export to be mounted with read-only permissions)
              iscsi:                                                  # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ISCSIVolumeSource (iSCSI disk attached to host machine on demand)
                targetPortal:                                         # string (iSCSI target portal)
                iqn:                                                  # string (iSCSI Qualified Name)
                lun:                                                  # int (iscsi target lun number)
                fsType:                                               # string (file system type to mount, such as ext4, xfs, ntfs)
                readOnly:                                             # bool (read-only if true, read-write otherwise (false or unspecified))
              glusterfs:                                              # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.GlusterfsVolumeSource (Glusterfs volume that will be mounted on the host machine )
                endpoints:                                            # string (gluster hosts endpoints name)
                path:                                                 # string (path to gluster volume)
                readOnly:                                             # bool (Glusterfs volume to be mounted with read-only permissions)
          containers:                                                 # []github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.Container (list of containers belonging to the pod; containers cannot currently be added or removed)
          - name:                                                     # string (name of the container; must be a DNS_LABEL and unique within the pod; cannot be updated)
            image:                                                    # string (Docker image name)
            entrypoint:                                               # []string (entrypoint array; not executed within a shell; the image's entrypoint is used if this is not provided; cannot be updated)
            - [string]                                                # 
            command:                                                  # []string (command argv array; not executed within a shell; the image's cmd is used if this is not provided; cannot be updated)
            - [string]                                                # 
            workingDir:                                               # string (container's working directory; defaults to image's default; cannot be updated)
            ports:                                                    # []github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ContainerPort (list of ports to expose from the container; cannot be updated)
            - name:                                                   # string (name for the port that can be referred to by services; must be a DNS_LABEL and unique without the pod)
              hostPort:                                               # int (number of port to expose on the host; most containers do not need this)
              containerPort:                                          # int (number of port to expose on the pod's IP address)
              protocol: TCP|UDP                                       # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.Protocol (protocol for port; must be UDP or TCP; TCP if unspecified)
              hostIP:                                                 # string (host IP to bind the port to)
            env:                                                      # []github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.EnvVar (list of environment variables to set in the container; cannot be updated)
            - name:                                                   # string (name of the environment variable; must be a C_IDENTIFIER)
              key:                                                    # string (name of the environment variable; must be a C_IDENTIFIER; deprecated - use name instead)
              value:                                                  # string (value of the environment variable; defaults to empty string)
            resources:                                                # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ResourceRequirements (Compute Resources required by this container; cannot be updated)
              limits:                                                 # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ResourceList (Maximum amount of compute resources allowed)
                [github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ResourceName]: # github.com/GoogleCloudPlatform/kubernetes/pkg/util.IntOrString
              requests:                                               # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ResourceList (Minimum amount of resources requested)
                [github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ResourceName]: # github.com/GoogleCloudPlatform/kubernetes/pkg/util.IntOrString
            cpu:                                                      # int (CPU share in thousandths of a core; cannot be updated)
            memory:                                                   # int64 (memory limit in bytes; defaults to unlimited; cannot be updated)
            volumeMounts:                                             # []github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.VolumeMount (pod volumes to mount into the container's filesystem; cannot be updated)
            - name:                                                   # string (name of the volume to mount)
              readOnly:                                               # bool (mounted read-only if true, read-write otherwise (false or unspecified))
              mountPath:                                              # string (path within the container at which the volume should be mounted; overrides path)
              path:                                                   # string (path within the container at which the volume should be mounted; deprecated)
              mountType:                                              # string (LOCAL or HOST; defaults to LOCAL; deprecated)
            livenessProbe:                                            # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.LivenessProbe (periodic probe of container liveness; container will be restarted if the probe fails; cannot be updated)
              httpGet:                                                # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.HTTPGetAction (parameters for HTTP-based liveness probe)
                path:                                                 # string (path to access on the HTTP server)
                port:                                                 # github.com/GoogleCloudPlatform/kubernetes/pkg/util.IntOrString (number or name of the port to access on the container)
                host:                                                 # string (hostname to connect to; defaults to pod IP)
              tcpSocket:                                              # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.TCPSocketAction (parameters for TCP-based liveness probe)
                port:                                                 # github.com/GoogleCloudPlatform/kubernetes/pkg/util.IntOrString (number of name of the port to access on the container)
              exec:                                                   # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ExecAction (parameters for exec-based liveness probe)
                command:                                              # []string (command line to execute inside the container; working directory for the command is root ('/') in the container's file system; the command is exec'd, not run inside a shell; exit status of 0 is treated as live/healthy and non-zero is unhealthy)
                - [string]                                            # 
              initialDelaySeconds:                                    # int64 (number of seconds after the container has started before liveness probes are initiated)
              timeoutSeconds:                                         # int64 (number of seconds after which liveness probes timeout; defaults to 1 second)
            readinessProbe:                                           # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.LivenessProbe (periodic probe of container service readiness; container will be removed from service endpoints if the probe fails; cannot be updated)
              httpGet:                                                # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.HTTPGetAction (parameters for HTTP-based liveness probe)
                path:                                                 # string (path to access on the HTTP server)
                port:                                                 # github.com/GoogleCloudPlatform/kubernetes/pkg/util.IntOrString (number or name of the port to access on the container)
                host:                                                 # string (hostname to connect to; defaults to pod IP)
              tcpSocket:                                              # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.TCPSocketAction (parameters for TCP-based liveness probe)
                port:                                                 # github.com/GoogleCloudPlatform/kubernetes/pkg/util.IntOrString (number of name of the port to access on the container)
              exec:                                                   # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ExecAction (parameters for exec-based liveness probe)
                command:                                              # []string (command line to execute inside the container; working directory for the command is root ('/') in the container's file system; the command is exec'd, not run inside a shell; exit status of 0 is treated as live/healthy and non-zero is unhealthy)
                - [string]                                            # 
              initialDelaySeconds:                                    # int64 (number of seconds after the container has started before liveness probes are initiated)
              timeoutSeconds:                                         # int64 (number of seconds after which liveness probes timeout; defaults to 1 second)
            lifecycle:                                                # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.Lifecycle (actions that the management system should take in response to container lifecycle events; cannot be updated)
              postStart:                                              # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.Handler (called immediately after a container is started; if the handler fails, the container is terminated and restarted according to its restart policy; other management of the container blocks until the hook completes)
                exec:                                                 # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ExecAction (exec-based handler)
                  command:                                            # []string (command line to execute inside the container; working directory for the command is root ('/') in the container's file system; the command is exec'd, not run inside a shell; exit status of 0 is treated as live/healthy and non-zero is unhealthy)
                  - [string]                                          # 
                httpGet:                                              # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.HTTPGetAction (HTTP-based handler)
                  path:                                               # string (path to access on the HTTP server)
                  port:                                               # github.com/GoogleCloudPlatform/kubernetes/pkg/util.IntOrString (number or name of the port to access on the container)
                  host:                                               # string (hostname to connect to; defaults to pod IP)
                tcpSocket:                                            # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.TCPSocketAction (TCP-based handler; TCP hooks not yet supported)
                  port:                                               # github.com/GoogleCloudPlatform/kubernetes/pkg/util.IntOrString (number of name of the port to access on the container)
              preStop:                                                # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.Handler (called before a container is terminated; the container is terminated after the handler completes; other management of the container blocks until the hook completes)
                exec:                                                 # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ExecAction (exec-based handler)
                  command:                                            # []string (command line to execute inside the container; working directory for the command is root ('/') in the container's file system; the command is exec'd, not run inside a shell; exit status of 0 is treated as live/healthy and non-zero is unhealthy)
                  - [string]                                          # 
                httpGet:                                              # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.HTTPGetAction (HTTP-based handler)
                  path:                                               # string (path to access on the HTTP server)
                  port:                                               # github.com/GoogleCloudPlatform/kubernetes/pkg/util.IntOrString (number or name of the port to access on the container)
                  host:                                               # string (hostname to connect to; defaults to pod IP)
                tcpSocket:                                            # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.TCPSocketAction (TCP-based handler; TCP hooks not yet supported)
                  port:                                               # github.com/GoogleCloudPlatform/kubernetes/pkg/util.IntOrString (number of name of the port to access on the container)
            terminationMessagePath:                                   # string (path at which the file to which the container's termination message will be written is mounted into the container's filesystem; message written is intended to be brief final status, such as an assertion failure message; defaults to /dev/termination-log; cannot be updated)
            privileged:                                               # bool (whether or not the container is granted privileged status; defaults to false; cannot be updated)
            imagePullPolicy: PullAlways|PullIfNotPresent|PullNever    # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.PullPolicy (image pull policy; one of PullAlways, PullNever, PullIfNotPresent; defaults to PullAlways if :latest tag is specified, or PullIfNotPresent otherwise; cannot be updated)
            capabilities:                                             # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.Capabilities (capabilities for container; cannot be updated)
              add:                                                    # []github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.CapabilityType (added capabilities)
              - [github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.CapabilityType] # 
              drop:                                                   # []github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.CapabilityType (droped capabilities)
              - [github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.CapabilityType] # 
          restartPolicy:                                              # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.RestartPolicy (restart policy for all containers within the pod; one of RestartPolicyAlways, RestartPolicyOnFailure, RestartPolicyNever)
            always:                                                   # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.RestartPolicyAlways (always restart the container after termination)
            onFailure:                                                # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.RestartPolicyOnFailure (restart the container if it fails for any reason, but not if it succeeds (exit 0))
            never:                                                    # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.RestartPolicyNever (never restart the container)
          dnsPolicy: ClusterFirst|Default                             # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.DNSPolicy (DNS policy for containers within the pod; one of 'ClusterFirst' or 'Default')
          hostNetwork:                                                # bool (host networking requested for this pod)
        status: Running|Succeeded|Terminated|Unknown|Waiting          # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.PodStatus (current condition of the pod, Waiting, Running, or Terminated)
        Condition:                                                    # []github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.PodCondition (current service state of pod)
        - kind: Ready                                                 # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.PodConditionKind (kind of the condition, currently only Ready)
          status: Full|None|Unknown                                   # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ConditionStatus (status of the condition, one of Full, None, Unknown)
        message:                                                      # string (human readable message indicating details about why the pod is in this condition)
        host:                                                         # string (host to which the pod is assigned; empty if not yet scheduled; cannot be updated)
        hostIP:                                                       # string (IP address of the host to which the pod is assigned; empty if not yet scheduled)
        podIP:                                                        # string (IP address allocated to the pod; routable at least within the cluster; empty if not yet allocated)
        info:                                                         # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.PodInfo (map of container name to container status)
          [string]:                                                   # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ContainerStatus
      nodeSelector:                                                   # map[string]string (a selector which must be true for the pod to fit on a node)
        [string]:                                                     # string
      labels:                                                         # map[string]string (map of string keys and values that can be used to organize and categorize the pods created from the template; must match the selector of the replication controller to which the template belongs; may match selectors of services)
        [string]:                                                     # string
      annotations:                                                    # map[string]string (map of string keys and values that can be used by external tooling to store and retrieve arbitrary metadata about pods created from the template)
        [string]:                                                     # string
latestVersion:                                                        # int
details:                                                              # *github.com/openshift/origin/pkg/deploy/api/v1beta1.DeploymentDetails
  message:                                                            # string
  causes:                                                             # []*github.com/openshift/origin/pkg/deploy/api/v1beta1.DeploymentCause
  - [*github.com/openshift/origin/pkg/deploy/api/v1beta1.DeploymentCause] # 


DeploymentConfigList
====================

A DeploymentConfigList is a collection of deployment configs.

kind: DeploymentConfigList                                            # string (kind of object, in CamelCase; cannot be updated)
apiVersion: v1beta1                                                   # string (version of the schema the object should have)
metadata:                                                             # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta3.ListMeta
  selfLink:                                                           # string (URL for the object; populated by the system, read-only)
  resourceVersion:                                                    # string (string that identifies the internal version of this object that can be used by clients to determine when objects have changed; populated by the system, read-only; value must be treated as opaque by clients and passed unmodified back to the server: https://github.com/GoogleCloudPlatform/kubernetes/blob/master/docs/api-conventions.md#concurrency-control-and-consistency)
items:                                                                # []github.com/openshift/origin/pkg/deploy/api/v1beta1.DeploymentConfig
- kind:                                                               # string (kind of object, in CamelCase; cannot be updated)
  apiVersion:                                                         # string (version of the schema the object should have)
  metadata:                                                           # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta3.ObjectMeta
    name:                                                             # string (string that identifies an object. Must be unique within a namespace; cannot be updated)
    generateName:                                                     # string (an optional prefix to use to generate a unique name; has the same validation rules as name; optional, and is applied only name if is not specified)
    namespace:                                                        # string (namespace of the object; cannot be updated)
    selfLink:                                                         # string (URL for the object; populated by the system, read-only)
    uid:                                                              # github.com/GoogleCloudPlatform/kubernetes/pkg/types.UID (unique UUID across space and time; populated by the system; read-only)
    resourceVersion:                                                  # string (string that identifies the internal version of this object that can be used by clients to determine when objects have changed; populated by the system, read-only; value must be treated as opaque by clients and passed unmodified back to the server: https://github.com/GoogleCloudPlatform/kubernetes/blob/master/docs/api-conventions.md#concurrency-control-and-consistency)
    creationTimestamp:                                                # github.com/GoogleCloudPlatform/kubernetes/pkg/util.Time (RFC 3339 date and time at which the object was created; populated by the system, read-only; null for lists)
    deletionTimestamp:                                                # *github.com/GoogleCloudPlatform/kubernetes/pkg/util.Time (RFC 3339 date and time at which the object will be deleted; populated by the system when a graceful deletion is requested, read-only; if not set, graceful deletion of the object has not been requested)
    labels:                                                           # map[string]string (map of string keys and values that can be used to organize and categorize objects; may match selectors of replication controllers and services)
      [string]:                                                       # string
    annotations:                                                      # map[string]string (map of string keys and values that can be used by external tooling to store and retrieve arbitrary metadata about objects)
      [string]:                                                       # string
  triggers:                                                           # []github.com/openshift/origin/pkg/deploy/api/v1beta1.DeploymentTriggerPolicy
  - type: Manual|ConfigChange|ImageChange                             # github.com/openshift/origin/pkg/deploy/api/v1beta1.DeploymentTriggerType
    imageChangeParams:                                                # *github.com/openshift/origin/pkg/deploy/api/v1beta1.DeploymentTriggerImageChangeParams
      automatic:                                                      # bool
      containerNames:                                                 # []string
      - [string]                                                      # 
      repositoryName:                                                 # string
      from:                                                           # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta3.ObjectReference
        kind:                                                         # string (kind of the referent)
        namespace:                                                    # string (namespace of the referent)
        name:                                                         # string (name of the referent)
        uid:                                                          # github.com/GoogleCloudPlatform/kubernetes/pkg/types.UID (uid of the referent)
        apiVersion:                                                   # string (API version of the referent)
        resourceVersion:                                              # string (specific resourceVersion to which this reference is made, if any: https://github.com/GoogleCloudPlatform/kubernetes/blob/master/docs/api-conventions.md#concurrency-control-and-consistency)
        fieldPath:                                                    # string (if referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2])
      tag:                                                            # string
      lastTriggeredImage:                                             # string
  template:                                                           # github.com/openshift/origin/pkg/deploy/api/v1beta1.DeploymentTemplate
    strategy:                                                         # github.com/openshift/origin/pkg/deploy/api/v1beta1.DeploymentStrategy
      type: Custom|Recreate                                           # github.com/openshift/origin/pkg/deploy/api/v1beta1.DeploymentStrategyType
      customParams:                                                   # *github.com/openshift/origin/pkg/deploy/api/v1beta1.CustomDeploymentStrategyParams
        image:                                                        # string
        environment:                                                  # []github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta3.EnvVar
        - name:                                                       # string (name of the environment variable; must be a C_IDENTIFIER)
          value:                                                      # string (value of the environment variable; defaults to empty string)
        command:                                                      # []string
        - [string]                                                    # 
      recreateParams:                                                 # *github.com/openshift/origin/pkg/deploy/api/v1beta1.RecreateDeploymentStrategyParams
        pre:                                                          # *github.com/openshift/origin/pkg/deploy/api/v1beta1.LifecycleHook
          failurePolicy: Abort|Ignore|Retry                           # github.com/openshift/origin/pkg/deploy/api/v1beta1.LifecycleHookFailurePolicy
          execNewPod:                                                 # *github.com/openshift/origin/pkg/deploy/api/v1beta1.ExecNewPodHook
            command:                                                  # []string
            - [string]                                                # 
            env:                                                      # []github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta3.EnvVar
            - name:                                                   # string (name of the environment variable; must be a C_IDENTIFIER)
              value:                                                  # string (value of the environment variable; defaults to empty string)
            containerName:                                            # string
        post:                                                         # *github.com/openshift/origin/pkg/deploy/api/v1beta1.LifecycleHook
          failurePolicy: Abort|Ignore|Retry                           # github.com/openshift/origin/pkg/deploy/api/v1beta1.LifecycleHookFailurePolicy
          execNewPod:                                                 # *github.com/openshift/origin/pkg/deploy/api/v1beta1.ExecNewPodHook
            command:                                                  # []string
            - [string]                                                # 
            env:                                                      # []github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta3.EnvVar
            - name:                                                   # string (name of the environment variable; must be a C_IDENTIFIER)
              value:                                                  # string (value of the environment variable; defaults to empty string)
            containerName:                                            # string
    controllerTemplate:                                               # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ReplicationControllerState
      replicas:                                                       # int (number of replicas (desired or observed, as appropriate))
      replicaSelector:                                                # map[string]string (label keys and values that must match in order to be controlled by this replication controller)
        [string]:                                                     # string
      podTemplate:                                                    # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.PodTemplate (template for pods to be created by this replication controller when the observed number of replicas is less than the desired number of replicas)
        desiredState:                                                 # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.PodState (specification of the desired state of pods created from this template)
          manifest:                                                   # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ContainerManifest (manifest of containers and volumes comprising the pod)
            version:                                                  # string (manifest version; must be v1beta1)
            id:                                                       # string (manifest name; must be a DNS_SUBDOMAIN; cannot be updated)
            uuid:                                                     # github.com/GoogleCloudPlatform/kubernetes/pkg/types.UID (manifest UUID, populated by the system, read-only)
            volumes:                                                  # []github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.Volume (list of volumes that can be mounted by containers belonging to the pod)
            - name:                                                   # string (volume name; must be a DNS_LABEL and unique within the pod)
              source:                                                 # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.VolumeSource (location and type of volume to mount; at most one of HostDir, EmptyDir, GCEPersistentDisk, or GitRepo; default is EmptyDir)
                hostDir:                                              # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.HostPathVolumeSource (pre-existing host file or directory; generally for privileged system daemons or other agents tied to the host)
                  path:                                               # string (path of the directory on the host)
                emptyDir:                                             # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.EmptyDirVolumeSource (temporary directory that shares a pod's lifetime)
                  medium: |Memory                                     # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.StorageType (type of storage used to back the volume; must be an empty string (default) or Memory)
                persistentDisk:                                       # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.GCEPersistentDiskVolumeSource (GCE disk resource attached to the host machine on demand)
                  pdName:                                             # string (unique name of the PD resource in GCE)
                  fsType:                                             # string (file system type to mount, such as ext4, xfs, ntfs)
                  partition:                                          # int (partition on the disk to mount (e.g., '1' for /dev/sda1); if omitted the plain device name (e.g., /dev/sda) will be mounted)
                  readOnly:                                           # bool (read-only if true, read-write otherwise (false or unspecified))
                gitRepo:                                              # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.GitRepoVolumeSource (git repository at a particular revision)
                  repository:                                         # string (repository URL)
                  revision:                                           # string (commit hash for the specified revision)
                secret:                                               # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.SecretVolumeSource (secret to populate volume with)
                  target:                                             # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ObjectReference (target is a reference to a secret)
                    kind:                                             # string (kind of the referent)
                    namespace:                                        # string (namespace of the referent)
                    name:                                             # string (id of the referent)
                    uid:                                              # github.com/GoogleCloudPlatform/kubernetes/pkg/types.UID (uid of the referent)
                    apiVersion:                                       # string (API version of the referent)
                    resourceVersion:                                  # string (specific resourceVersion to which this reference is made, if any: https://github.com/GoogleCloudPlatform/kubernetes/blob/master/docs/api-conventions.md#concurrency-control-and-consistency)
                    fieldPath:                                        # string (if referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2])
                nfs:                                                  # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.NFSVolumeSource (NFS volume that will be mounted in the host machine )
                  server:                                             # string (the hostname or IP address of the NFS server)
                  path:                                               # string (the path that is exported by the NFS server)
                  readOnly:                                           # bool (forces the NFS export to be mounted with read-only permissions)
                iscsi:                                                # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ISCSIVolumeSource (iSCSI disk attached to host machine on demand)
                  targetPortal:                                       # string (iSCSI target portal)
                  iqn:                                                # string (iSCSI Qualified Name)
                  lun:                                                # int (iscsi target lun number)
                  fsType:                                             # string (file system type to mount, such as ext4, xfs, ntfs)
                  readOnly:                                           # bool (read-only if true, read-write otherwise (false or unspecified))
                glusterfs:                                            # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.GlusterfsVolumeSource (Glusterfs volume that will be mounted on the host machine )
                  endpoints:                                          # string (gluster hosts endpoints name)
                  path:                                               # string (path to gluster volume)
                  readOnly:                                           # bool (Glusterfs volume to be mounted with read-only permissions)
            containers:                                               # []github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.Container (list of containers belonging to the pod; containers cannot currently be added or removed)
            - name:                                                   # string (name of the container; must be a DNS_LABEL and unique within the pod; cannot be updated)
              image:                                                  # string (Docker image name)
              entrypoint:                                             # []string (entrypoint array; not executed within a shell; the image's entrypoint is used if this is not provided; cannot be updated)
              - [string]                                              # 
              command:                                                # []string (command argv array; not executed within a shell; the image's cmd is used if this is not provided; cannot be updated)
              - [string]                                              # 
              workingDir:                                             # string (container's working directory; defaults to image's default; cannot be updated)
              ports:                                                  # []github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ContainerPort (list of ports to expose from the container; cannot be updated)
              - name:                                                 # string (name for the port that can be referred to by services; must be a DNS_LABEL and unique without the pod)
                hostPort:                                             # int (number of port to expose on the host; most containers do not need this)
                containerPort:                                        # int (number of port to expose on the pod's IP address)
                protocol: TCP|UDP                                     # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.Protocol (protocol for port; must be UDP or TCP; TCP if unspecified)
                hostIP:                                               # string (host IP to bind the port to)
              env:                                                    # []github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.EnvVar (list of environment variables to set in the container; cannot be updated)
              - name:                                                 # string (name of the environment variable; must be a C_IDENTIFIER)
                key:                                                  # string (name of the environment variable; must be a C_IDENTIFIER; deprecated - use name instead)
                value:                                                # string (value of the environment variable; defaults to empty string)
              resources:                                              # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ResourceRequirements (Compute Resources required by this container; cannot be updated)
                limits:                                               # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ResourceList (Maximum amount of compute resources allowed)
                  [github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ResourceName]: # github.com/GoogleCloudPlatform/kubernetes/pkg/util.IntOrString
                requests:                                             # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ResourceList (Minimum amount of resources requested)
                  [github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ResourceName]: # github.com/GoogleCloudPlatform/kubernetes/pkg/util.IntOrString
              cpu:                                                    # int (CPU share in thousandths of a core; cannot be updated)
              memory:                                                 # int64 (memory limit in bytes; defaults to unlimited; cannot be updated)
              volumeMounts:                                           # []github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.VolumeMount (pod volumes to mount into the container's filesystem; cannot be updated)
              - name:                                                 # string (name of the volume to mount)
                readOnly:                                             # bool (mounted read-only if true, read-write otherwise (false or unspecified))
                mountPath:                                            # string (path within the container at which the volume should be mounted; overrides path)
                path:                                                 # string (path within the container at which the volume should be mounted; deprecated)
                mountType:                                            # string (LOCAL or HOST; defaults to LOCAL; deprecated)
              livenessProbe:                                          # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.LivenessProbe (periodic probe of container liveness; container will be restarted if the probe fails; cannot be updated)
                httpGet:                                              # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.HTTPGetAction (parameters for HTTP-based liveness probe)
                  path:                                               # string (path to access on the HTTP server)
                  port:                                               # github.com/GoogleCloudPlatform/kubernetes/pkg/util.IntOrString (number or name of the port to access on the container)
                  host:                                               # string (hostname to connect to; defaults to pod IP)
                tcpSocket:                                            # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.TCPSocketAction (parameters for TCP-based liveness probe)
                  port:                                               # github.com/GoogleCloudPlatform/kubernetes/pkg/util.IntOrString (number of name of the port to access on the container)
                exec:                                                 # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ExecAction (parameters for exec-based liveness probe)
                  command:                                            # []string (command line to execute inside the container; working directory for the command is root ('/') in the container's file system; the command is exec'd, not run inside a shell; exit status of 0 is treated as live/healthy and non-zero is unhealthy)
                  - [string]                                          # 
                initialDelaySeconds:                                  # int64 (number of seconds after the container has started before liveness probes are initiated)
                timeoutSeconds:                                       # int64 (number of seconds after which liveness probes timeout; defaults to 1 second)
              readinessProbe:                                         # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.LivenessProbe (periodic probe of container service readiness; container will be removed from service endpoints if the probe fails; cannot be updated)
                httpGet:                                              # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.HTTPGetAction (parameters for HTTP-based liveness probe)
                  path:                                               # string (path to access on the HTTP server)
                  port:                                               # github.com/GoogleCloudPlatform/kubernetes/pkg/util.IntOrString (number or name of the port to access on the container)
                  host:                                               # string (hostname to connect to; defaults to pod IP)
                tcpSocket:                                            # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.TCPSocketAction (parameters for TCP-based liveness probe)
                  port:                                               # github.com/GoogleCloudPlatform/kubernetes/pkg/util.IntOrString (number of name of the port to access on the container)
                exec:                                                 # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ExecAction (parameters for exec-based liveness probe)
                  command:                                            # []string (command line to execute inside the container; working directory for the command is root ('/') in the container's file system; the command is exec'd, not run inside a shell; exit status of 0 is treated as live/healthy and non-zero is unhealthy)
                  - [string]                                          # 
                initialDelaySeconds:                                  # int64 (number of seconds after the container has started before liveness probes are initiated)
                timeoutSeconds:                                       # int64 (number of seconds after which liveness probes timeout; defaults to 1 second)
              lifecycle:                                              # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.Lifecycle (actions that the management system should take in response to container lifecycle events; cannot be updated)
                postStart:                                            # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.Handler (called immediately after a container is started; if the handler fails, the container is terminated and restarted according to its restart policy; other management of the container blocks until the hook completes)
                  exec:                                               # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ExecAction (exec-based handler)
                    command:                                          # []string (command line to execute inside the container; working directory for the command is root ('/') in the container's file system; the command is exec'd, not run inside a shell; exit status of 0 is treated as live/healthy and non-zero is unhealthy)
                    - [string]                                        # 
                  httpGet:                                            # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.HTTPGetAction (HTTP-based handler)
                    path:                                             # string (path to access on the HTTP server)
                    port:                                             # github.com/GoogleCloudPlatform/kubernetes/pkg/util.IntOrString (number or name of the port to access on the container)
                    host:                                             # string (hostname to connect to; defaults to pod IP)
                  tcpSocket:                                          # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.TCPSocketAction (TCP-based handler; TCP hooks not yet supported)
                    port:                                             # github.com/GoogleCloudPlatform/kubernetes/pkg/util.IntOrString (number of name of the port to access on the container)
                preStop:                                              # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.Handler (called before a container is terminated; the container is terminated after the handler completes; other management of the container blocks until the hook completes)
                  exec:                                               # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ExecAction (exec-based handler)
                    command:                                          # []string (command line to execute inside the container; working directory for the command is root ('/') in the container's file system; the command is exec'd, not run inside a shell; exit status of 0 is treated as live/healthy and non-zero is unhealthy)
                    - [string]                                        # 
                  httpGet:                                            # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.HTTPGetAction (HTTP-based handler)
                    path:                                             # string (path to access on the HTTP server)
                    port:                                             # github.com/GoogleCloudPlatform/kubernetes/pkg/util.IntOrString (number or name of the port to access on the container)
                    host:                                             # string (hostname to connect to; defaults to pod IP)
                  tcpSocket:                                          # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.TCPSocketAction (TCP-based handler; TCP hooks not yet supported)
                    port:                                             # github.com/GoogleCloudPlatform/kubernetes/pkg/util.IntOrString (number of name of the port to access on the container)
              terminationMessagePath:                                 # string (path at which the file to which the container's termination message will be written is mounted into the container's filesystem; message written is intended to be brief final status, such as an assertion failure message; defaults to /dev/termination-log; cannot be updated)
              privileged:                                             # bool (whether or not the container is granted privileged status; defaults to false; cannot be updated)
              imagePullPolicy: PullAlways|PullIfNotPresent|PullNever  # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.PullPolicy (image pull policy; one of PullAlways, PullNever, PullIfNotPresent; defaults to PullAlways if :latest tag is specified, or PullIfNotPresent otherwise; cannot be updated)
              capabilities:                                           # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.Capabilities (capabilities for container; cannot be updated)
                add:                                                  # []github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.CapabilityType (added capabilities)
                - [github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.CapabilityType] # 
                drop:                                                 # []github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.CapabilityType (droped capabilities)
                - [github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.CapabilityType] # 
            restartPolicy:                                            # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.RestartPolicy (restart policy for all containers within the pod; one of RestartPolicyAlways, RestartPolicyOnFailure, RestartPolicyNever)
              always:                                                 # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.RestartPolicyAlways (always restart the container after termination)
              onFailure:                                              # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.RestartPolicyOnFailure (restart the container if it fails for any reason, but not if it succeeds (exit 0))
              never:                                                  # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.RestartPolicyNever (never restart the container)
            dnsPolicy: ClusterFirst|Default                           # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.DNSPolicy (DNS policy for containers within the pod; one of 'ClusterFirst' or 'Default')
            hostNetwork:                                              # bool (host networking requested for this pod)
          status: Running|Succeeded|Terminated|Unknown|Waiting        # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.PodStatus (current condition of the pod, Waiting, Running, or Terminated)
          Condition:                                                  # []github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.PodCondition (current service state of pod)
          - kind: Ready                                               # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.PodConditionKind (kind of the condition, currently only Ready)
            status: Full|None|Unknown                                 # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ConditionStatus (status of the condition, one of Full, None, Unknown)
          message:                                                    # string (human readable message indicating details about why the pod is in this condition)
          host:                                                       # string (host to which the pod is assigned; empty if not yet scheduled; cannot be updated)
          hostIP:                                                     # string (IP address of the host to which the pod is assigned; empty if not yet scheduled)
          podIP:                                                      # string (IP address allocated to the pod; routable at least within the cluster; empty if not yet allocated)
          info:                                                       # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.PodInfo (map of container name to container status)
            [string]:                                                 # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ContainerStatus
        nodeSelector:                                                 # map[string]string (a selector which must be true for the pod to fit on a node)
          [string]:                                                   # string
        labels:                                                       # map[string]string (map of string keys and values that can be used to organize and categorize the pods created from the template; must match the selector of the replication controller to which the template belongs; may match selectors of services)
          [string]:                                                   # string
        annotations:                                                  # map[string]string (map of string keys and values that can be used by external tooling to store and retrieve arbitrary metadata about pods created from the template)
          [string]:                                                   # string
  latestVersion:                                                      # int
  details:                                                            # *github.com/openshift/origin/pkg/deploy/api/v1beta1.DeploymentDetails
    message:                                                          # string
    causes:                                                           # []*github.com/openshift/origin/pkg/deploy/api/v1beta1.DeploymentCause
    - [*github.com/openshift/origin/pkg/deploy/api/v1beta1.DeploymentCause] # 


DeploymentConfigRollback
========================

DeploymentConfigRollback provides the input to rollback generation.

kind: DeploymentConfigRollback                                        # string (kind of object, in CamelCase; cannot be updated)
apiVersion: v1beta1                                                   # string (version of the schema the object should have)
spec:                                                                 # github.com/openshift/origin/pkg/deploy/api/v1beta1.DeploymentConfigRollbackSpec
  from:                                                               # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta3.ObjectReference
    kind:                                                             # string (kind of the referent)
    namespace:                                                        # string (namespace of the referent)
    name:                                                             # string (name of the referent)
    uid:                                                              # github.com/GoogleCloudPlatform/kubernetes/pkg/types.UID (uid of the referent)
    apiVersion:                                                       # string (API version of the referent)
    resourceVersion:                                                  # string (specific resourceVersion to which this reference is made, if any: https://github.com/GoogleCloudPlatform/kubernetes/blob/master/docs/api-conventions.md#concurrency-control-and-consistency)
    fieldPath:                                                        # string (if referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2])
  includeTriggers:                                                    # bool
  includeTemplate:                                                    # bool
  includeReplicationMeta:                                             # bool
  includeStrategy:                                                    # bool


DeploymentList
==============

A DeploymentList is a collection of deployments.
DEPRECATED: Like Deployment, this is no longer used.

kind: DeploymentList                                                  # string (kind of object, in CamelCase; cannot be updated)
apiVersion: v1beta1                                                   # string (version of the schema the object should have)
metadata:                                                             # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta3.ListMeta
  selfLink:                                                           # string (URL for the object; populated by the system, read-only)
  resourceVersion:                                                    # string (string that identifies the internal version of this object that can be used by clients to determine when objects have changed; populated by the system, read-only; value must be treated as opaque by clients and passed unmodified back to the server: https://github.com/GoogleCloudPlatform/kubernetes/blob/master/docs/api-conventions.md#concurrency-control-and-consistency)
items:                                                                # []github.com/openshift/origin/pkg/deploy/api/v1beta1.Deployment
- kind:                                                               # string (kind of object, in CamelCase; cannot be updated)
  apiVersion:                                                         # string (version of the schema the object should have)
  metadata:                                                           # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta3.ObjectMeta
    name:                                                             # string (string that identifies an object. Must be unique within a namespace; cannot be updated)
    generateName:                                                     # string (an optional prefix to use to generate a unique name; has the same validation rules as name; optional, and is applied only name if is not specified)
    namespace:                                                        # string (namespace of the object; cannot be updated)
    selfLink:                                                         # string (URL for the object; populated by the system, read-only)
    uid:                                                              # github.com/GoogleCloudPlatform/kubernetes/pkg/types.UID (unique UUID across space and time; populated by the system; read-only)
    resourceVersion:                                                  # string (string that identifies the internal version of this object that can be used by clients to determine when objects have changed; populated by the system, read-only; value must be treated as opaque by clients and passed unmodified back to the server: https://github.com/GoogleCloudPlatform/kubernetes/blob/master/docs/api-conventions.md#concurrency-control-and-consistency)
    creationTimestamp:                                                # github.com/GoogleCloudPlatform/kubernetes/pkg/util.Time (RFC 3339 date and time at which the object was created; populated by the system, read-only; null for lists)
    deletionTimestamp:                                                # *github.com/GoogleCloudPlatform/kubernetes/pkg/util.Time (RFC 3339 date and time at which the object will be deleted; populated by the system when a graceful deletion is requested, read-only; if not set, graceful deletion of the object has not been requested)
    labels:                                                           # map[string]string (map of string keys and values that can be used to organize and categorize objects; may match selectors of replication controllers and services)
      [string]:                                                       # string
    annotations:                                                      # map[string]string (map of string keys and values that can be used by external tooling to store and retrieve arbitrary metadata about objects)
      [string]:                                                       # string
  strategy:                                                           # github.com/openshift/origin/pkg/deploy/api/v1beta1.DeploymentStrategy
    type: Custom|Recreate                                             # github.com/openshift/origin/pkg/deploy/api/v1beta1.DeploymentStrategyType
    customParams:                                                     # *github.com/openshift/origin/pkg/deploy/api/v1beta1.CustomDeploymentStrategyParams
      image:                                                          # string
      environment:                                                    # []github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta3.EnvVar
      - name:                                                         # string (name of the environment variable; must be a C_IDENTIFIER)
        value:                                                        # string (value of the environment variable; defaults to empty string)
      command:                                                        # []string
      - [string]                                                      # 
    recreateParams:                                                   # *github.com/openshift/origin/pkg/deploy/api/v1beta1.RecreateDeploymentStrategyParams
      pre:                                                            # *github.com/openshift/origin/pkg/deploy/api/v1beta1.LifecycleHook
        failurePolicy: Abort|Ignore|Retry                             # github.com/openshift/origin/pkg/deploy/api/v1beta1.LifecycleHookFailurePolicy
        execNewPod:                                                   # *github.com/openshift/origin/pkg/deploy/api/v1beta1.ExecNewPodHook
          command:                                                    # []string
          - [string]                                                  # 
          env:                                                        # []github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta3.EnvVar
          - name:                                                     # string (name of the environment variable; must be a C_IDENTIFIER)
            value:                                                    # string (value of the environment variable; defaults to empty string)
          containerName:                                              # string
      post:                                                           # *github.com/openshift/origin/pkg/deploy/api/v1beta1.LifecycleHook
        failurePolicy: Abort|Ignore|Retry                             # github.com/openshift/origin/pkg/deploy/api/v1beta1.LifecycleHookFailurePolicy
        execNewPod:                                                   # *github.com/openshift/origin/pkg/deploy/api/v1beta1.ExecNewPodHook
          command:                                                    # []string
          - [string]                                                  # 
          env:                                                        # []github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta3.EnvVar
          - name:                                                     # string (name of the environment variable; must be a C_IDENTIFIER)
            value:                                                    # string (value of the environment variable; defaults to empty string)
          containerName:                                              # string
  controllerTemplate:                                                 # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ReplicationControllerState
    replicas:                                                         # int (number of replicas (desired or observed, as appropriate))
    replicaSelector:                                                  # map[string]string (label keys and values that must match in order to be controlled by this replication controller)
      [string]:                                                       # string
    podTemplate:                                                      # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.PodTemplate (template for pods to be created by this replication controller when the observed number of replicas is less than the desired number of replicas)
      desiredState:                                                   # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.PodState (specification of the desired state of pods created from this template)
        manifest:                                                     # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ContainerManifest (manifest of containers and volumes comprising the pod)
          version:                                                    # string (manifest version; must be v1beta1)
          id:                                                         # string (manifest name; must be a DNS_SUBDOMAIN; cannot be updated)
          uuid:                                                       # github.com/GoogleCloudPlatform/kubernetes/pkg/types.UID (manifest UUID, populated by the system, read-only)
          volumes:                                                    # []github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.Volume (list of volumes that can be mounted by containers belonging to the pod)
          - name:                                                     # string (volume name; must be a DNS_LABEL and unique within the pod)
            source:                                                   # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.VolumeSource (location and type of volume to mount; at most one of HostDir, EmptyDir, GCEPersistentDisk, or GitRepo; default is EmptyDir)
              hostDir:                                                # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.HostPathVolumeSource (pre-existing host file or directory; generally for privileged system daemons or other agents tied to the host)
                path:                                                 # string (path of the directory on the host)
              emptyDir:                                               # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.EmptyDirVolumeSource (temporary directory that shares a pod's lifetime)
                medium: |Memory                                       # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.StorageType (type of storage used to back the volume; must be an empty string (default) or Memory)
              persistentDisk:                                         # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.GCEPersistentDiskVolumeSource (GCE disk resource attached to the host machine on demand)
                pdName:                                               # string (unique name of the PD resource in GCE)
                fsType:                                               # string (file system type to mount, such as ext4, xfs, ntfs)
                partition:                                            # int (partition on the disk to mount (e.g., '1' for /dev/sda1); if omitted the plain device name (e.g., /dev/sda) will be mounted)
                readOnly:                                             # bool (read-only if true, read-write otherwise (false or unspecified))
              gitRepo:                                                # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.GitRepoVolumeSource (git repository at a particular revision)
                repository:                                           # string (repository URL)
                revision:                                             # string (commit hash for the specified revision)
              secret:                                                 # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.SecretVolumeSource (secret to populate volume with)
                target:                                               # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ObjectReference (target is a reference to a secret)
                  kind:                                               # string (kind of the referent)
                  namespace:                                          # string (namespace of the referent)
                  name:                                               # string (id of the referent)
                  uid:                                                # github.com/GoogleCloudPlatform/kubernetes/pkg/types.UID (uid of the referent)
                  apiVersion:                                         # string (API version of the referent)
                  resourceVersion:                                    # string (specific resourceVersion to which this reference is made, if any: https://github.com/GoogleCloudPlatform/kubernetes/blob/master/docs/api-conventions.md#concurrency-control-and-consistency)
                  fieldPath:                                          # string (if referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2])
              nfs:                                                    # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.NFSVolumeSource (NFS volume that will be mounted in the host machine )
                server:                                               # string (the hostname or IP address of the NFS server)
                path:                                                 # string (the path that is exported by the NFS server)
                readOnly:                                             # bool (forces the NFS export to be mounted with read-only permissions)
              iscsi:                                                  # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ISCSIVolumeSource (iSCSI disk attached to host machine on demand)
                targetPortal:                                         # string (iSCSI target portal)
                iqn:                                                  # string (iSCSI Qualified Name)
                lun:                                                  # int (iscsi target lun number)
                fsType:                                               # string (file system type to mount, such as ext4, xfs, ntfs)
                readOnly:                                             # bool (read-only if true, read-write otherwise (false or unspecified))
              glusterfs:                                              # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.GlusterfsVolumeSource (Glusterfs volume that will be mounted on the host machine )
                endpoints:                                            # string (gluster hosts endpoints name)
                path:                                                 # string (path to gluster volume)
                readOnly:                                             # bool (Glusterfs volume to be mounted with read-only permissions)
          containers:                                                 # []github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.Container (list of containers belonging to the pod; containers cannot currently be added or removed)
          - name:                                                     # string (name of the container; must be a DNS_LABEL and unique within the pod; cannot be updated)
            image:                                                    # string (Docker image name)
            entrypoint:                                               # []string (entrypoint array; not executed within a shell; the image's entrypoint is used if this is not provided; cannot be updated)
            - [string]                                                # 
            command:                                                  # []string (command argv array; not executed within a shell; the image's cmd is used if this is not provided; cannot be updated)
            - [string]                                                # 
            workingDir:                                               # string (container's working directory; defaults to image's default; cannot be updated)
            ports:                                                    # []github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ContainerPort (list of ports to expose from the container; cannot be updated)
            - name:                                                   # string (name for the port that can be referred to by services; must be a DNS_LABEL and unique without the pod)
              hostPort:                                               # int (number of port to expose on the host; most containers do not need this)
              containerPort:                                          # int (number of port to expose on the pod's IP address)
              protocol: TCP|UDP                                       # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.Protocol (protocol for port; must be UDP or TCP; TCP if unspecified)
              hostIP:                                                 # string (host IP to bind the port to)
            env:                                                      # []github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.EnvVar (list of environment variables to set in the container; cannot be updated)
            - name:                                                   # string (name of the environment variable; must be a C_IDENTIFIER)
              key:                                                    # string (name of the environment variable; must be a C_IDENTIFIER; deprecated - use name instead)
              value:                                                  # string (value of the environment variable; defaults to empty string)
            resources:                                                # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ResourceRequirements (Compute Resources required by this container; cannot be updated)
              limits:                                                 # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ResourceList (Maximum amount of compute resources allowed)
                [github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ResourceName]: # github.com/GoogleCloudPlatform/kubernetes/pkg/util.IntOrString
              requests:                                               # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ResourceList (Minimum amount of resources requested)
                [github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ResourceName]: # github.com/GoogleCloudPlatform/kubernetes/pkg/util.IntOrString
            cpu:                                                      # int (CPU share in thousandths of a core; cannot be updated)
            memory:                                                   # int64 (memory limit in bytes; defaults to unlimited; cannot be updated)
            volumeMounts:                                             # []github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.VolumeMount (pod volumes to mount into the container's filesystem; cannot be updated)
            - name:                                                   # string (name of the volume to mount)
              readOnly:                                               # bool (mounted read-only if true, read-write otherwise (false or unspecified))
              mountPath:                                              # string (path within the container at which the volume should be mounted; overrides path)
              path:                                                   # string (path within the container at which the volume should be mounted; deprecated)
              mountType:                                              # string (LOCAL or HOST; defaults to LOCAL; deprecated)
            livenessProbe:                                            # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.LivenessProbe (periodic probe of container liveness; container will be restarted if the probe fails; cannot be updated)
              httpGet:                                                # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.HTTPGetAction (parameters for HTTP-based liveness probe)
                path:                                                 # string (path to access on the HTTP server)
                port:                                                 # github.com/GoogleCloudPlatform/kubernetes/pkg/util.IntOrString (number or name of the port to access on the container)
                host:                                                 # string (hostname to connect to; defaults to pod IP)
              tcpSocket:                                              # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.TCPSocketAction (parameters for TCP-based liveness probe)
                port:                                                 # github.com/GoogleCloudPlatform/kubernetes/pkg/util.IntOrString (number of name of the port to access on the container)
              exec:                                                   # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ExecAction (parameters for exec-based liveness probe)
                command:                                              # []string (command line to execute inside the container; working directory for the command is root ('/') in the container's file system; the command is exec'd, not run inside a shell; exit status of 0 is treated as live/healthy and non-zero is unhealthy)
                - [string]                                            # 
              initialDelaySeconds:                                    # int64 (number of seconds after the container has started before liveness probes are initiated)
              timeoutSeconds:                                         # int64 (number of seconds after which liveness probes timeout; defaults to 1 second)
            readinessProbe:                                           # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.LivenessProbe (periodic probe of container service readiness; container will be removed from service endpoints if the probe fails; cannot be updated)
              httpGet:                                                # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.HTTPGetAction (parameters for HTTP-based liveness probe)
                path:                                                 # string (path to access on the HTTP server)
                port:                                                 # github.com/GoogleCloudPlatform/kubernetes/pkg/util.IntOrString (number or name of the port to access on the container)
                host:                                                 # string (hostname to connect to; defaults to pod IP)
              tcpSocket:                                              # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.TCPSocketAction (parameters for TCP-based liveness probe)
                port:                                                 # github.com/GoogleCloudPlatform/kubernetes/pkg/util.IntOrString (number of name of the port to access on the container)
              exec:                                                   # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ExecAction (parameters for exec-based liveness probe)
                command:                                              # []string (command line to execute inside the container; working directory for the command is root ('/') in the container's file system; the command is exec'd, not run inside a shell; exit status of 0 is treated as live/healthy and non-zero is unhealthy)
                - [string]                                            # 
              initialDelaySeconds:                                    # int64 (number of seconds after the container has started before liveness probes are initiated)
              timeoutSeconds:                                         # int64 (number of seconds after which liveness probes timeout; defaults to 1 second)
            lifecycle:                                                # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.Lifecycle (actions that the management system should take in response to container lifecycle events; cannot be updated)
              postStart:                                              # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.Handler (called immediately after a container is started; if the handler fails, the container is terminated and restarted according to its restart policy; other management of the container blocks until the hook completes)
                exec:                                                 # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ExecAction (exec-based handler)
                  command:                                            # []string (command line to execute inside the container; working directory for the command is root ('/') in the container's file system; the command is exec'd, not run inside a shell; exit status of 0 is treated as live/healthy and non-zero is unhealthy)
                  - [string]                                          # 
                httpGet:                                              # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.HTTPGetAction (HTTP-based handler)
                  path:                                               # string (path to access on the HTTP server)
                  port:                                               # github.com/GoogleCloudPlatform/kubernetes/pkg/util.IntOrString (number or name of the port to access on the container)
                  host:                                               # string (hostname to connect to; defaults to pod IP)
                tcpSocket:                                            # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.TCPSocketAction (TCP-based handler; TCP hooks not yet supported)
                  port:                                               # github.com/GoogleCloudPlatform/kubernetes/pkg/util.IntOrString (number of name of the port to access on the container)
              preStop:                                                # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.Handler (called before a container is terminated; the container is terminated after the handler completes; other management of the container blocks until the hook completes)
                exec:                                                 # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ExecAction (exec-based handler)
                  command:                                            # []string (command line to execute inside the container; working directory for the command is root ('/') in the container's file system; the command is exec'd, not run inside a shell; exit status of 0 is treated as live/healthy and non-zero is unhealthy)
                  - [string]                                          # 
                httpGet:                                              # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.HTTPGetAction (HTTP-based handler)
                  path:                                               # string (path to access on the HTTP server)
                  port:                                               # github.com/GoogleCloudPlatform/kubernetes/pkg/util.IntOrString (number or name of the port to access on the container)
                  host:                                               # string (hostname to connect to; defaults to pod IP)
                tcpSocket:                                            # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.TCPSocketAction (TCP-based handler; TCP hooks not yet supported)
                  port:                                               # github.com/GoogleCloudPlatform/kubernetes/pkg/util.IntOrString (number of name of the port to access on the container)
            terminationMessagePath:                                   # string (path at which the file to which the container's termination message will be written is mounted into the container's filesystem; message written is intended to be brief final status, such as an assertion failure message; defaults to /dev/termination-log; cannot be updated)
            privileged:                                               # bool (whether or not the container is granted privileged status; defaults to false; cannot be updated)
            imagePullPolicy: PullAlways|PullIfNotPresent|PullNever    # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.PullPolicy (image pull policy; one of PullAlways, PullNever, PullIfNotPresent; defaults to PullAlways if :latest tag is specified, or PullIfNotPresent otherwise; cannot be updated)
            capabilities:                                             # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.Capabilities (capabilities for container; cannot be updated)
              add:                                                    # []github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.CapabilityType (added capabilities)
              - [github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.CapabilityType] # 
              drop:                                                   # []github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.CapabilityType (droped capabilities)
              - [github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.CapabilityType] # 
          restartPolicy:                                              # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.RestartPolicy (restart policy for all containers within the pod; one of RestartPolicyAlways, RestartPolicyOnFailure, RestartPolicyNever)
            always:                                                   # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.RestartPolicyAlways (always restart the container after termination)
            onFailure:                                                # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.RestartPolicyOnFailure (restart the container if it fails for any reason, but not if it succeeds (exit 0))
            never:                                                    # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.RestartPolicyNever (never restart the container)
          dnsPolicy: ClusterFirst|Default                             # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.DNSPolicy (DNS policy for containers within the pod; one of 'ClusterFirst' or 'Default')
          hostNetwork:                                                # bool (host networking requested for this pod)
        status: Running|Succeeded|Terminated|Unknown|Waiting          # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.PodStatus (current condition of the pod, Waiting, Running, or Terminated)
        Condition:                                                    # []github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.PodCondition (current service state of pod)
        - kind: Ready                                                 # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.PodConditionKind (kind of the condition, currently only Ready)
          status: Full|None|Unknown                                   # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ConditionStatus (status of the condition, one of Full, None, Unknown)
        message:                                                      # string (human readable message indicating details about why the pod is in this condition)
        host:                                                         # string (host to which the pod is assigned; empty if not yet scheduled; cannot be updated)
        hostIP:                                                       # string (IP address of the host to which the pod is assigned; empty if not yet scheduled)
        podIP:                                                        # string (IP address allocated to the pod; routable at least within the cluster; empty if not yet allocated)
        info:                                                         # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.PodInfo (map of container name to container status)
          [string]:                                                   # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ContainerStatus
      nodeSelector:                                                   # map[string]string (a selector which must be true for the pod to fit on a node)
        [string]:                                                     # string
      labels:                                                         # map[string]string (map of string keys and values that can be used to organize and categorize the pods created from the template; must match the selector of the replication controller to which the template belongs; may match selectors of services)
        [string]:                                                     # string
      annotations:                                                    # map[string]string (map of string keys and values that can be used by external tooling to store and retrieve arbitrary metadata about pods created from the template)
        [string]:                                                     # string
  status: Complete|Failed|New|Pending|Running                         # github.com/openshift/origin/pkg/deploy/api/v1beta1.DeploymentStatus
  details:                                                            # *github.com/openshift/origin/pkg/deploy/api/v1beta1.DeploymentDetails
    message:                                                          # string
    causes:                                                           # []*github.com/openshift/origin/pkg/deploy/api/v1beta1.DeploymentCause
    - [*github.com/openshift/origin/pkg/deploy/api/v1beta1.DeploymentCause] # 


Image
=====

Image is an immutable representation of a Docker image and metadata at a point in time.

kind: Image                                                           # string (kind of object, in CamelCase; cannot be updated)
apiVersion: v1beta1                                                   # string (version of the schema the object should have)
metadata:                                                             # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta3.ObjectMeta
  name:                                                               # string (string that identifies an object. Must be unique within a namespace; cannot be updated)
  generateName:                                                       # string (an optional prefix to use to generate a unique name; has the same validation rules as name; optional, and is applied only name if is not specified)
  namespace:                                                          # string (namespace of the object; cannot be updated)
  selfLink:                                                           # string (URL for the object; populated by the system, read-only)
  uid:                                                                # github.com/GoogleCloudPlatform/kubernetes/pkg/types.UID (unique UUID across space and time; populated by the system; read-only)
  resourceVersion:                                                    # string (string that identifies the internal version of this object that can be used by clients to determine when objects have changed; populated by the system, read-only; value must be treated as opaque by clients and passed unmodified back to the server: https://github.com/GoogleCloudPlatform/kubernetes/blob/master/docs/api-conventions.md#concurrency-control-and-consistency)
  creationTimestamp:                                                  # github.com/GoogleCloudPlatform/kubernetes/pkg/util.Time (RFC 3339 date and time at which the object was created; populated by the system, read-only; null for lists)
  deletionTimestamp:                                                  # *github.com/GoogleCloudPlatform/kubernetes/pkg/util.Time (RFC 3339 date and time at which the object will be deleted; populated by the system when a graceful deletion is requested, read-only; if not set, graceful deletion of the object has not been requested)
  labels:                                                             # map[string]string (map of string keys and values that can be used to organize and categorize objects; may match selectors of replication controllers and services)
    [string]:                                                         # string
  annotations:                                                        # map[string]string (map of string keys and values that can be used by external tooling to store and retrieve arbitrary metadata about objects)
    [string]:                                                         # string
dockerImageReference:                                                 # string
dockerImageMetadata:                                                  # github.com/GoogleCloudPlatform/kubernetes/pkg/runtime.RawExtension
- [byte]                                                              # 
dockerImageMetadataVersion:                                           # string
dockerImageManifest:                                                  # string


ImageList
=========

ImageList is a list of Image objects.

kind: ImageList                                                       # string (kind of object, in CamelCase; cannot be updated)
apiVersion: v1beta1                                                   # string (version of the schema the object should have)
metadata:                                                             # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta3.ListMeta
  selfLink:                                                           # string (URL for the object; populated by the system, read-only)
  resourceVersion:                                                    # string (string that identifies the internal version of this object that can be used by clients to determine when objects have changed; populated by the system, read-only; value must be treated as opaque by clients and passed unmodified back to the server: https://github.com/GoogleCloudPlatform/kubernetes/blob/master/docs/api-conventions.md#concurrency-control-and-consistency)
items:                                                                # []github.com/openshift/origin/pkg/image/api/v1beta1.Image
- kind:                                                               # string (kind of object, in CamelCase; cannot be updated)
  apiVersion:                                                         # string (version of the schema the object should have)
  metadata:                                                           # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta3.ObjectMeta
    name:                                                             # string (string that identifies an object. Must be unique within a namespace; cannot be updated)
    generateName:                                                     # string (an optional prefix to use to generate a unique name; has the same validation rules as name; optional, and is applied only name if is not specified)
    namespace:                                                        # string (namespace of the object; cannot be updated)
    selfLink:                                                         # string (URL for the object; populated by the system, read-only)
    uid:                                                              # github.com/GoogleCloudPlatform/kubernetes/pkg/types.UID (unique UUID across space and time; populated by the system; read-only)
    resourceVersion:                                                  # string (string that identifies the internal version of this object that can be used by clients to determine when objects have changed; populated by the system, read-only; value must be treated as opaque by clients and passed unmodified back to the server: https://github.com/GoogleCloudPlatform/kubernetes/blob/master/docs/api-conventions.md#concurrency-control-and-consistency)
    creationTimestamp:                                                # github.com/GoogleCloudPlatform/kubernetes/pkg/util.Time (RFC 3339 date and time at which the object was created; populated by the system, read-only; null for lists)
    deletionTimestamp:                                                # *github.com/GoogleCloudPlatform/kubernetes/pkg/util.Time (RFC 3339 date and time at which the object will be deleted; populated by the system when a graceful deletion is requested, read-only; if not set, graceful deletion of the object has not been requested)
    labels:                                                           # map[string]string (map of string keys and values that can be used to organize and categorize objects; may match selectors of replication controllers and services)
      [string]:                                                       # string
    annotations:                                                      # map[string]string (map of string keys and values that can be used by external tooling to store and retrieve arbitrary metadata about objects)
      [string]:                                                       # string
  dockerImageReference:                                               # string
  dockerImageMetadata:                                                # github.com/GoogleCloudPlatform/kubernetes/pkg/runtime.RawExtension
  - [byte]                                                            # 
  dockerImageMetadataVersion:                                         # string
  dockerImageManifest:                                                # string


ImageRepository
===============

ImageRepository stores a mapping of tags to images, metadata overrides that are applied
when images are tagged in a repository, and an optional reference to a Docker image
repository on a registry.

ImageRepository is DEPRECATED; use ImageStream instead.

kind: ImageRepository                                                 # string (kind of object, in CamelCase; cannot be updated)
apiVersion: v1beta1                                                   # string (version of the schema the object should have)
metadata:                                                             # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta3.ObjectMeta
  name:                                                               # string (string that identifies an object. Must be unique within a namespace; cannot be updated)
  generateName:                                                       # string (an optional prefix to use to generate a unique name; has the same validation rules as name; optional, and is applied only name if is not specified)
  namespace:                                                          # string (namespace of the object; cannot be updated)
  selfLink:                                                           # string (URL for the object; populated by the system, read-only)
  uid:                                                                # github.com/GoogleCloudPlatform/kubernetes/pkg/types.UID (unique UUID across space and time; populated by the system; read-only)
  resourceVersion:                                                    # string (string that identifies the internal version of this object that can be used by clients to determine when objects have changed; populated by the system, read-only; value must be treated as opaque by clients and passed unmodified back to the server: https://github.com/GoogleCloudPlatform/kubernetes/blob/master/docs/api-conventions.md#concurrency-control-and-consistency)
  creationTimestamp:                                                  # github.com/GoogleCloudPlatform/kubernetes/pkg/util.Time (RFC 3339 date and time at which the object was created; populated by the system, read-only; null for lists)
  deletionTimestamp:                                                  # *github.com/GoogleCloudPlatform/kubernetes/pkg/util.Time (RFC 3339 date and time at which the object will be deleted; populated by the system when a graceful deletion is requested, read-only; if not set, graceful deletion of the object has not been requested)
  labels:                                                             # map[string]string (map of string keys and values that can be used to organize and categorize objects; may match selectors of replication controllers and services)
    [string]:                                                         # string
  annotations:                                                        # map[string]string (map of string keys and values that can be used by external tooling to store and retrieve arbitrary metadata about objects)
    [string]:                                                         # string
dockerImageRepository:                                                # string
tags:                                                                 # map[string]string
  [string]:                                                           # string
status:                                                               # github.com/openshift/origin/pkg/image/api/v1beta1.ImageRepositoryStatus
  dockerImageRepository:                                              # string
  tags:                                                               # []github.com/openshift/origin/pkg/image/api/v1beta1.NamedTagEventList
  - tag:                                                              # string
    items:                                                            # []github.com/openshift/origin/pkg/image/api/v1beta1.TagEvent
    - created:                                                        # github.com/GoogleCloudPlatform/kubernetes/pkg/util.Time
      dockerImageReference:                                           # string
      image:                                                          # string


ImageRepositoryList
===================

ImageRepositoryList is a list of ImageRepository objects.

ImageRepositoryList is DEPRECATED; use ImageStreamList instead.

kind: ImageRepositoryList                                             # string (kind of object, in CamelCase; cannot be updated)
apiVersion: v1beta1                                                   # string (version of the schema the object should have)
metadata:                                                             # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta3.ListMeta
  selfLink:                                                           # string (URL for the object; populated by the system, read-only)
  resourceVersion:                                                    # string (string that identifies the internal version of this object that can be used by clients to determine when objects have changed; populated by the system, read-only; value must be treated as opaque by clients and passed unmodified back to the server: https://github.com/GoogleCloudPlatform/kubernetes/blob/master/docs/api-conventions.md#concurrency-control-and-consistency)
items:                                                                # []github.com/openshift/origin/pkg/image/api/v1beta1.ImageRepository
- kind:                                                               # string (kind of object, in CamelCase; cannot be updated)
  apiVersion:                                                         # string (version of the schema the object should have)
  metadata:                                                           # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta3.ObjectMeta
    name:                                                             # string (string that identifies an object. Must be unique within a namespace; cannot be updated)
    generateName:                                                     # string (an optional prefix to use to generate a unique name; has the same validation rules as name; optional, and is applied only name if is not specified)
    namespace:                                                        # string (namespace of the object; cannot be updated)
    selfLink:                                                         # string (URL for the object; populated by the system, read-only)
    uid:                                                              # github.com/GoogleCloudPlatform/kubernetes/pkg/types.UID (unique UUID across space and time; populated by the system; read-only)
    resourceVersion:                                                  # string (string that identifies the internal version of this object that can be used by clients to determine when objects have changed; populated by the system, read-only; value must be treated as opaque by clients and passed unmodified back to the server: https://github.com/GoogleCloudPlatform/kubernetes/blob/master/docs/api-conventions.md#concurrency-control-and-consistency)
    creationTimestamp:                                                # github.com/GoogleCloudPlatform/kubernetes/pkg/util.Time (RFC 3339 date and time at which the object was created; populated by the system, read-only; null for lists)
    deletionTimestamp:                                                # *github.com/GoogleCloudPlatform/kubernetes/pkg/util.Time (RFC 3339 date and time at which the object will be deleted; populated by the system when a graceful deletion is requested, read-only; if not set, graceful deletion of the object has not been requested)
    labels:                                                           # map[string]string (map of string keys and values that can be used to organize and categorize objects; may match selectors of replication controllers and services)
      [string]:                                                       # string
    annotations:                                                      # map[string]string (map of string keys and values that can be used by external tooling to store and retrieve arbitrary metadata about objects)
      [string]:                                                       # string
  dockerImageRepository:                                              # string
  tags:                                                               # map[string]string
    [string]:                                                         # string
  status:                                                             # github.com/openshift/origin/pkg/image/api/v1beta1.ImageRepositoryStatus
    dockerImageRepository:                                            # string
    tags:                                                             # []github.com/openshift/origin/pkg/image/api/v1beta1.NamedTagEventList
    - tag:                                                            # string
      items:                                                          # []github.com/openshift/origin/pkg/image/api/v1beta1.TagEvent
      - created:                                                      # github.com/GoogleCloudPlatform/kubernetes/pkg/util.Time
        dockerImageReference:                                         # string
        image:                                                        # string


ImageRepositoryMapping
======================

ImageRepositoryMapping represents a mapping from a single tag to a Docker image as
well as the reference to the Docker image repository the image came from.

ImageRepositoryMapping is DEPRECATED; use ImageStreamMapping instead.

kind: ImageRepositoryMapping                                          # string (kind of object, in CamelCase; cannot be updated)
apiVersion: v1beta1                                                   # string (version of the schema the object should have)
metadata:                                                             # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta3.ObjectMeta
  name:                                                               # string (string that identifies an object. Must be unique within a namespace; cannot be updated)
  generateName:                                                       # string (an optional prefix to use to generate a unique name; has the same validation rules as name; optional, and is applied only name if is not specified)
  namespace:                                                          # string (namespace of the object; cannot be updated)
  selfLink:                                                           # string (URL for the object; populated by the system, read-only)
  uid:                                                                # github.com/GoogleCloudPlatform/kubernetes/pkg/types.UID (unique UUID across space and time; populated by the system; read-only)
  resourceVersion:                                                    # string (string that identifies the internal version of this object that can be used by clients to determine when objects have changed; populated by the system, read-only; value must be treated as opaque by clients and passed unmodified back to the server: https://github.com/GoogleCloudPlatform/kubernetes/blob/master/docs/api-conventions.md#concurrency-control-and-consistency)
  creationTimestamp:                                                  # github.com/GoogleCloudPlatform/kubernetes/pkg/util.Time (RFC 3339 date and time at which the object was created; populated by the system, read-only; null for lists)
  deletionTimestamp:                                                  # *github.com/GoogleCloudPlatform/kubernetes/pkg/util.Time (RFC 3339 date and time at which the object will be deleted; populated by the system when a graceful deletion is requested, read-only; if not set, graceful deletion of the object has not been requested)
  labels:                                                             # map[string]string (map of string keys and values that can be used to organize and categorize objects; may match selectors of replication controllers and services)
    [string]:                                                         # string
  annotations:                                                        # map[string]string (map of string keys and values that can be used by external tooling to store and retrieve arbitrary metadata about objects)
    [string]:                                                         # string
dockerImageRepository:                                                # string
image:                                                                # github.com/openshift/origin/pkg/image/api/v1beta1.Image
  kind:                                                               # string (kind of object, in CamelCase; cannot be updated)
  apiVersion:                                                         # string (version of the schema the object should have)
  metadata:                                                           # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta3.ObjectMeta
    name:                                                             # string (string that identifies an object. Must be unique within a namespace; cannot be updated)
    generateName:                                                     # string (an optional prefix to use to generate a unique name; has the same validation rules as name; optional, and is applied only name if is not specified)
    namespace:                                                        # string (namespace of the object; cannot be updated)
    selfLink:                                                         # string (URL for the object; populated by the system, read-only)
    uid:                                                              # github.com/GoogleCloudPlatform/kubernetes/pkg/types.UID (unique UUID across space and time; populated by the system; read-only)
    resourceVersion:                                                  # string (string that identifies the internal version of this object that can be used by clients to determine when objects have changed; populated by the system, read-only; value must be treated as opaque by clients and passed unmodified back to the server: https://github.com/GoogleCloudPlatform/kubernetes/blob/master/docs/api-conventions.md#concurrency-control-and-consistency)
    creationTimestamp:                                                # github.com/GoogleCloudPlatform/kubernetes/pkg/util.Time (RFC 3339 date and time at which the object was created; populated by the system, read-only; null for lists)
    deletionTimestamp:                                                # *github.com/GoogleCloudPlatform/kubernetes/pkg/util.Time (RFC 3339 date and time at which the object will be deleted; populated by the system when a graceful deletion is requested, read-only; if not set, graceful deletion of the object has not been requested)
    labels:                                                           # map[string]string (map of string keys and values that can be used to organize and categorize objects; may match selectors of replication controllers and services)
      [string]:                                                       # string
    annotations:                                                      # map[string]string (map of string keys and values that can be used by external tooling to store and retrieve arbitrary metadata about objects)
      [string]:                                                       # string
  dockerImageReference:                                               # string
  dockerImageMetadata:                                                # github.com/GoogleCloudPlatform/kubernetes/pkg/runtime.RawExtension
  - [byte]                                                            # 
  dockerImageMetadataVersion:                                         # string
  dockerImageManifest:                                                # string
tag:                                                                  # string


ImageStream
===========

ImageStream stores a mapping of tags to images, metadata overrides that are applied
when images are tagged in a stream, and an optional reference to a Docker image
repository on a registry.

kind: ImageStream                                                     # string (kind of object, in CamelCase; cannot be updated)
apiVersion: v1beta1                                                   # string (version of the schema the object should have)
metadata:                                                             # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta3.ObjectMeta
  name:                                                               # string (string that identifies an object. Must be unique within a namespace; cannot be updated)
  generateName:                                                       # string (an optional prefix to use to generate a unique name; has the same validation rules as name; optional, and is applied only name if is not specified)
  namespace:                                                          # string (namespace of the object; cannot be updated)
  selfLink:                                                           # string (URL for the object; populated by the system, read-only)
  uid:                                                                # github.com/GoogleCloudPlatform/kubernetes/pkg/types.UID (unique UUID across space and time; populated by the system; read-only)
  resourceVersion:                                                    # string (string that identifies the internal version of this object that can be used by clients to determine when objects have changed; populated by the system, read-only; value must be treated as opaque by clients and passed unmodified back to the server: https://github.com/GoogleCloudPlatform/kubernetes/blob/master/docs/api-conventions.md#concurrency-control-and-consistency)
  creationTimestamp:                                                  # github.com/GoogleCloudPlatform/kubernetes/pkg/util.Time (RFC 3339 date and time at which the object was created; populated by the system, read-only; null for lists)
  deletionTimestamp:                                                  # *github.com/GoogleCloudPlatform/kubernetes/pkg/util.Time (RFC 3339 date and time at which the object will be deleted; populated by the system when a graceful deletion is requested, read-only; if not set, graceful deletion of the object has not been requested)
  labels:                                                             # map[string]string (map of string keys and values that can be used to organize and categorize objects; may match selectors of replication controllers and services)
    [string]:                                                         # string
  annotations:                                                        # map[string]string (map of string keys and values that can be used by external tooling to store and retrieve arbitrary metadata about objects)
    [string]:                                                         # string
spec:                                                                 # github.com/openshift/origin/pkg/image/api/v1beta1.ImageStreamSpec
  dockerImageRepository:                                              # string
  tags:                                                               # []github.com/openshift/origin/pkg/image/api/v1beta1.NamedTagReference
  - name:                                                             # string
    annotations:                                                      # map[string]string
      [string]:                                                       # string
    dockerImageReference:                                             # string
    from:                                                             # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta3.ObjectReference
      kind:                                                           # string (kind of the referent)
      namespace:                                                      # string (namespace of the referent)
      name:                                                           # string (name of the referent)
      uid:                                                            # github.com/GoogleCloudPlatform/kubernetes/pkg/types.UID (uid of the referent)
      apiVersion:                                                     # string (API version of the referent)
      resourceVersion:                                                # string (specific resourceVersion to which this reference is made, if any: https://github.com/GoogleCloudPlatform/kubernetes/blob/master/docs/api-conventions.md#concurrency-control-and-consistency)
      fieldPath:                                                      # string (if referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2])
status:                                                               # github.com/openshift/origin/pkg/image/api/v1beta1.ImageStreamStatus
  dockerImageRepository:                                              # string
  tags:                                                               # []github.com/openshift/origin/pkg/image/api/v1beta1.NamedTagEventList
  - tag:                                                              # string
    items:                                                            # []github.com/openshift/origin/pkg/image/api/v1beta1.TagEvent
    - created:                                                        # github.com/GoogleCloudPlatform/kubernetes/pkg/util.Time
      dockerImageReference:                                           # string
      image:                                                          # string


ImageStreamList
===============

ImageStreamList is a list of ImageStream objects.

kind: ImageStreamList                                                 # string (kind of object, in CamelCase; cannot be updated)
apiVersion: v1beta1                                                   # string (version of the schema the object should have)
metadata:                                                             # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta3.ListMeta
  selfLink:                                                           # string (URL for the object; populated by the system, read-only)
  resourceVersion:                                                    # string (string that identifies the internal version of this object that can be used by clients to determine when objects have changed; populated by the system, read-only; value must be treated as opaque by clients and passed unmodified back to the server: https://github.com/GoogleCloudPlatform/kubernetes/blob/master/docs/api-conventions.md#concurrency-control-and-consistency)
items:                                                                # []github.com/openshift/origin/pkg/image/api/v1beta1.ImageStream
- kind:                                                               # string (kind of object, in CamelCase; cannot be updated)
  apiVersion:                                                         # string (version of the schema the object should have)
  metadata:                                                           # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta3.ObjectMeta
    name:                                                             # string (string that identifies an object. Must be unique within a namespace; cannot be updated)
    generateName:                                                     # string (an optional prefix to use to generate a unique name; has the same validation rules as name; optional, and is applied only name if is not specified)
    namespace:                                                        # string (namespace of the object; cannot be updated)
    selfLink:                                                         # string (URL for the object; populated by the system, read-only)
    uid:                                                              # github.com/GoogleCloudPlatform/kubernetes/pkg/types.UID (unique UUID across space and time; populated by the system; read-only)
    resourceVersion:                                                  # string (string that identifies the internal version of this object that can be used by clients to determine when objects have changed; populated by the system, read-only; value must be treated as opaque by clients and passed unmodified back to the server: https://github.com/GoogleCloudPlatform/kubernetes/blob/master/docs/api-conventions.md#concurrency-control-and-consistency)
    creationTimestamp:                                                # github.com/GoogleCloudPlatform/kubernetes/pkg/util.Time (RFC 3339 date and time at which the object was created; populated by the system, read-only; null for lists)
    deletionTimestamp:                                                # *github.com/GoogleCloudPlatform/kubernetes/pkg/util.Time (RFC 3339 date and time at which the object will be deleted; populated by the system when a graceful deletion is requested, read-only; if not set, graceful deletion of the object has not been requested)
    labels:                                                           # map[string]string (map of string keys and values that can be used to organize and categorize objects; may match selectors of replication controllers and services)
      [string]:                                                       # string
    annotations:                                                      # map[string]string (map of string keys and values that can be used by external tooling to store and retrieve arbitrary metadata about objects)
      [string]:                                                       # string
  spec:                                                               # github.com/openshift/origin/pkg/image/api/v1beta1.ImageStreamSpec
    dockerImageRepository:                                            # string
    tags:                                                             # []github.com/openshift/origin/pkg/image/api/v1beta1.NamedTagReference
    - name:                                                           # string
      annotations:                                                    # map[string]string
        [string]:                                                     # string
      dockerImageReference:                                           # string
      from:                                                           # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta3.ObjectReference
        kind:                                                         # string (kind of the referent)
        namespace:                                                    # string (namespace of the referent)
        name:                                                         # string (name of the referent)
        uid:                                                          # github.com/GoogleCloudPlatform/kubernetes/pkg/types.UID (uid of the referent)
        apiVersion:                                                   # string (API version of the referent)
        resourceVersion:                                              # string (specific resourceVersion to which this reference is made, if any: https://github.com/GoogleCloudPlatform/kubernetes/blob/master/docs/api-conventions.md#concurrency-control-and-consistency)
        fieldPath:                                                    # string (if referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2])
  status:                                                             # github.com/openshift/origin/pkg/image/api/v1beta1.ImageStreamStatus
    dockerImageRepository:                                            # string
    tags:                                                             # []github.com/openshift/origin/pkg/image/api/v1beta1.NamedTagEventList
    - tag:                                                            # string
      items:                                                          # []github.com/openshift/origin/pkg/image/api/v1beta1.TagEvent
      - created:                                                      # github.com/GoogleCloudPlatform/kubernetes/pkg/util.Time
        dockerImageReference:                                         # string
        image:                                                        # string


ImageStreamMapping
==================

ImageStreamMapping represents a mapping from a single tag to a Docker image as
well as the reference to the Docker image repository the image came from.

kind: ImageStreamMapping                                              # string (kind of object, in CamelCase; cannot be updated)
apiVersion: v1beta1                                                   # string (version of the schema the object should have)
metadata:                                                             # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta3.ObjectMeta
  name:                                                               # string (string that identifies an object. Must be unique within a namespace; cannot be updated)
  generateName:                                                       # string (an optional prefix to use to generate a unique name; has the same validation rules as name; optional, and is applied only name if is not specified)
  namespace:                                                          # string (namespace of the object; cannot be updated)
  selfLink:                                                           # string (URL for the object; populated by the system, read-only)
  uid:                                                                # github.com/GoogleCloudPlatform/kubernetes/pkg/types.UID (unique UUID across space and time; populated by the system; read-only)
  resourceVersion:                                                    # string (string that identifies the internal version of this object that can be used by clients to determine when objects have changed; populated by the system, read-only; value must be treated as opaque by clients and passed unmodified back to the server: https://github.com/GoogleCloudPlatform/kubernetes/blob/master/docs/api-conventions.md#concurrency-control-and-consistency)
  creationTimestamp:                                                  # github.com/GoogleCloudPlatform/kubernetes/pkg/util.Time (RFC 3339 date and time at which the object was created; populated by the system, read-only; null for lists)
  deletionTimestamp:                                                  # *github.com/GoogleCloudPlatform/kubernetes/pkg/util.Time (RFC 3339 date and time at which the object will be deleted; populated by the system when a graceful deletion is requested, read-only; if not set, graceful deletion of the object has not been requested)
  labels:                                                             # map[string]string (map of string keys and values that can be used to organize and categorize objects; may match selectors of replication controllers and services)
    [string]:                                                         # string
  annotations:                                                        # map[string]string (map of string keys and values that can be used by external tooling to store and retrieve arbitrary metadata about objects)
    [string]:                                                         # string
dockerImageRepository:                                                # string
image:                                                                # github.com/openshift/origin/pkg/image/api/v1beta1.Image
  kind:                                                               # string (kind of object, in CamelCase; cannot be updated)
  apiVersion:                                                         # string (version of the schema the object should have)
  metadata:                                                           # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta3.ObjectMeta
    name:                                                             # string (string that identifies an object. Must be unique within a namespace; cannot be updated)
    generateName:                                                     # string (an optional prefix to use to generate a unique name; has the same validation rules as name; optional, and is applied only name if is not specified)
    namespace:                                                        # string (namespace of the object; cannot be updated)
    selfLink:                                                         # string (URL for the object; populated by the system, read-only)
    uid:                                                              # github.com/GoogleCloudPlatform/kubernetes/pkg/types.UID (unique UUID across space and time; populated by the system; read-only)
    resourceVersion:                                                  # string (string that identifies the internal version of this object that can be used by clients to determine when objects have changed; populated by the system, read-only; value must be treated as opaque by clients and passed unmodified back to the server: https://github.com/GoogleCloudPlatform/kubernetes/blob/master/docs/api-conventions.md#concurrency-control-and-consistency)
    creationTimestamp:                                                # github.com/GoogleCloudPlatform/kubernetes/pkg/util.Time (RFC 3339 date and time at which the object was created; populated by the system, read-only; null for lists)
    deletionTimestamp:                                                # *github.com/GoogleCloudPlatform/kubernetes/pkg/util.Time (RFC 3339 date and time at which the object will be deleted; populated by the system when a graceful deletion is requested, read-only; if not set, graceful deletion of the object has not been requested)
    labels:                                                           # map[string]string (map of string keys and values that can be used to organize and categorize objects; may match selectors of replication controllers and services)
      [string]:                                                       # string
    annotations:                                                      # map[string]string (map of string keys and values that can be used by external tooling to store and retrieve arbitrary metadata about objects)
      [string]:                                                       # string
  dockerImageReference:                                               # string
  dockerImageMetadata:                                                # github.com/GoogleCloudPlatform/kubernetes/pkg/runtime.RawExtension
  - [byte]                                                            # 
  dockerImageMetadataVersion:                                         # string
  dockerImageManifest:                                                # string
tag:                                                                  # string


OAuthAccessToken
================


kind: OAuthAccessToken                                                # string (kind of object, in CamelCase; cannot be updated)
apiVersion: v1beta1                                                   # string (version of the schema the object should have)
metadata:                                                             # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta3.ObjectMeta
  name:                                                               # string (string that identifies an object. Must be unique within a namespace; cannot be updated)
  generateName:                                                       # string (an optional prefix to use to generate a unique name; has the same validation rules as name; optional, and is applied only name if is not specified)
  namespace:                                                          # string (namespace of the object; cannot be updated)
  selfLink:                                                           # string (URL for the object; populated by the system, read-only)
  uid:                                                                # github.com/GoogleCloudPlatform/kubernetes/pkg/types.UID (unique UUID across space and time; populated by the system; read-only)
  resourceVersion:                                                    # string (string that identifies the internal version of this object that can be used by clients to determine when objects have changed; populated by the system, read-only; value must be treated as opaque by clients and passed unmodified back to the server: https://github.com/GoogleCloudPlatform/kubernetes/blob/master/docs/api-conventions.md#concurrency-control-and-consistency)
  creationTimestamp:                                                  # github.com/GoogleCloudPlatform/kubernetes/pkg/util.Time (RFC 3339 date and time at which the object was created; populated by the system, read-only; null for lists)
  deletionTimestamp:                                                  # *github.com/GoogleCloudPlatform/kubernetes/pkg/util.Time (RFC 3339 date and time at which the object will be deleted; populated by the system when a graceful deletion is requested, read-only; if not set, graceful deletion of the object has not been requested)
  labels:                                                             # map[string]string (map of string keys and values that can be used to organize and categorize objects; may match selectors of replication controllers and services)
    [string]:                                                         # string
  annotations:                                                        # map[string]string (map of string keys and values that can be used by external tooling to store and retrieve arbitrary metadata about objects)
    [string]:                                                         # string
clientName:                                                           # string
expiresIn:                                                            # int64
scopes:                                                               # []string
- [string]                                                            # 
redirectURI:                                                          # string
userName:                                                             # string
userUID:                                                              # string
authorizeToken:                                                       # string
refreshToken:                                                         # string


OAuthAccessTokenList
====================


kind: OAuthAccessTokenList                                            # string (kind of object, in CamelCase; cannot be updated)
apiVersion: v1beta1                                                   # string (version of the schema the object should have)
metadata:                                                             # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta3.ListMeta
  selfLink:                                                           # string (URL for the object; populated by the system, read-only)
  resourceVersion:                                                    # string (string that identifies the internal version of this object that can be used by clients to determine when objects have changed; populated by the system, read-only; value must be treated as opaque by clients and passed unmodified back to the server: https://github.com/GoogleCloudPlatform/kubernetes/blob/master/docs/api-conventions.md#concurrency-control-and-consistency)
items:                                                                # []github.com/openshift/origin/pkg/oauth/api/v1beta1.OAuthAccessToken
- kind:                                                               # string (kind of object, in CamelCase; cannot be updated)
  apiVersion:                                                         # string (version of the schema the object should have)
  metadata:                                                           # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta3.ObjectMeta
    name:                                                             # string (string that identifies an object. Must be unique within a namespace; cannot be updated)
    generateName:                                                     # string (an optional prefix to use to generate a unique name; has the same validation rules as name; optional, and is applied only name if is not specified)
    namespace:                                                        # string (namespace of the object; cannot be updated)
    selfLink:                                                         # string (URL for the object; populated by the system, read-only)
    uid:                                                              # github.com/GoogleCloudPlatform/kubernetes/pkg/types.UID (unique UUID across space and time; populated by the system; read-only)
    resourceVersion:                                                  # string (string that identifies the internal version of this object that can be used by clients to determine when objects have changed; populated by the system, read-only; value must be treated as opaque by clients and passed unmodified back to the server: https://github.com/GoogleCloudPlatform/kubernetes/blob/master/docs/api-conventions.md#concurrency-control-and-consistency)
    creationTimestamp:                                                # github.com/GoogleCloudPlatform/kubernetes/pkg/util.Time (RFC 3339 date and time at which the object was created; populated by the system, read-only; null for lists)
    deletionTimestamp:                                                # *github.com/GoogleCloudPlatform/kubernetes/pkg/util.Time (RFC 3339 date and time at which the object will be deleted; populated by the system when a graceful deletion is requested, read-only; if not set, graceful deletion of the object has not been requested)
    labels:                                                           # map[string]string (map of string keys and values that can be used to organize and categorize objects; may match selectors of replication controllers and services)
      [string]:                                                       # string
    annotations:                                                      # map[string]string (map of string keys and values that can be used by external tooling to store and retrieve arbitrary metadata about objects)
      [string]:                                                       # string
  clientName:                                                         # string
  expiresIn:                                                          # int64
  scopes:                                                             # []string
  - [string]                                                          # 
  redirectURI:                                                        # string
  userName:                                                           # string
  userUID:                                                            # string
  authorizeToken:                                                     # string
  refreshToken:                                                       # string


OAuthAuthorizeToken
===================


kind: OAuthAuthorizeToken                                             # string (kind of object, in CamelCase; cannot be updated)
apiVersion: v1beta1                                                   # string (version of the schema the object should have)
metadata:                                                             # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta3.ObjectMeta
  name:                                                               # string (string that identifies an object. Must be unique within a namespace; cannot be updated)
  generateName:                                                       # string (an optional prefix to use to generate a unique name; has the same validation rules as name; optional, and is applied only name if is not specified)
  namespace:                                                          # string (namespace of the object; cannot be updated)
  selfLink:                                                           # string (URL for the object; populated by the system, read-only)
  uid:                                                                # github.com/GoogleCloudPlatform/kubernetes/pkg/types.UID (unique UUID across space and time; populated by the system; read-only)
  resourceVersion:                                                    # string (string that identifies the internal version of this object that can be used by clients to determine when objects have changed; populated by the system, read-only; value must be treated as opaque by clients and passed unmodified back to the server: https://github.com/GoogleCloudPlatform/kubernetes/blob/master/docs/api-conventions.md#concurrency-control-and-consistency)
  creationTimestamp:                                                  # github.com/GoogleCloudPlatform/kubernetes/pkg/util.Time (RFC 3339 date and time at which the object was created; populated by the system, read-only; null for lists)
  deletionTimestamp:                                                  # *github.com/GoogleCloudPlatform/kubernetes/pkg/util.Time (RFC 3339 date and time at which the object will be deleted; populated by the system when a graceful deletion is requested, read-only; if not set, graceful deletion of the object has not been requested)
  labels:                                                             # map[string]string (map of string keys and values that can be used to organize and categorize objects; may match selectors of replication controllers and services)
    [string]:                                                         # string
  annotations:                                                        # map[string]string (map of string keys and values that can be used by external tooling to store and retrieve arbitrary metadata about objects)
    [string]:                                                         # string
clientName:                                                           # string
expiresIn:                                                            # int64
scopes:                                                               # []string
- [string]                                                            # 
redirectURI:                                                          # string
state:                                                                # string
userName:                                                             # string
userUID:                                                              # string


OAuthAuthorizeTokenList
=======================


kind: OAuthAuthorizeTokenList                                         # string (kind of object, in CamelCase; cannot be updated)
apiVersion: v1beta1                                                   # string (version of the schema the object should have)
metadata:                                                             # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta3.ListMeta
  selfLink:                                                           # string (URL for the object; populated by the system, read-only)
  resourceVersion:                                                    # string (string that identifies the internal version of this object that can be used by clients to determine when objects have changed; populated by the system, read-only; value must be treated as opaque by clients and passed unmodified back to the server: https://github.com/GoogleCloudPlatform/kubernetes/blob/master/docs/api-conventions.md#concurrency-control-and-consistency)
items:                                                                # []github.com/openshift/origin/pkg/oauth/api/v1beta1.OAuthAuthorizeToken
- kind:                                                               # string (kind of object, in CamelCase; cannot be updated)
  apiVersion:                                                         # string (version of the schema the object should have)
  metadata:                                                           # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta3.ObjectMeta
    name:                                                             # string (string that identifies an object. Must be unique within a namespace; cannot be updated)
    generateName:                                                     # string (an optional prefix to use to generate a unique name; has the same validation rules as name; optional, and is applied only name if is not specified)
    namespace:                                                        # string (namespace of the object; cannot be updated)
    selfLink:                                                         # string (URL for the object; populated by the system, read-only)
    uid:                                                              # github.com/GoogleCloudPlatform/kubernetes/pkg/types.UID (unique UUID across space and time; populated by the system; read-only)
    resourceVersion:                                                  # string (string that identifies the internal version of this object that can be used by clients to determine when objects have changed; populated by the system, read-only; value must be treated as opaque by clients and passed unmodified back to the server: https://github.com/GoogleCloudPlatform/kubernetes/blob/master/docs/api-conventions.md#concurrency-control-and-consistency)
    creationTimestamp:                                                # github.com/GoogleCloudPlatform/kubernetes/pkg/util.Time (RFC 3339 date and time at which the object was created; populated by the system, read-only; null for lists)
    deletionTimestamp:                                                # *github.com/GoogleCloudPlatform/kubernetes/pkg/util.Time (RFC 3339 date and time at which the object will be deleted; populated by the system when a graceful deletion is requested, read-only; if not set, graceful deletion of the object has not been requested)
    labels:                                                           # map[string]string (map of string keys and values that can be used to organize and categorize objects; may match selectors of replication controllers and services)
      [string]:                                                       # string
    annotations:                                                      # map[string]string (map of string keys and values that can be used by external tooling to store and retrieve arbitrary metadata about objects)
      [string]:                                                       # string
  clientName:                                                         # string
  expiresIn:                                                          # int64
  scopes:                                                             # []string
  - [string]                                                          # 
  redirectURI:                                                        # string
  state:                                                              # string
  userName:                                                           # string
  userUID:                                                            # string


OAuthClient
===========


kind: OAuthClient                                                     # string (kind of object, in CamelCase; cannot be updated)
apiVersion: v1beta1                                                   # string (version of the schema the object should have)
metadata:                                                             # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta3.ObjectMeta
  name:                                                               # string (string that identifies an object. Must be unique within a namespace; cannot be updated)
  generateName:                                                       # string (an optional prefix to use to generate a unique name; has the same validation rules as name; optional, and is applied only name if is not specified)
  namespace:                                                          # string (namespace of the object; cannot be updated)
  selfLink:                                                           # string (URL for the object; populated by the system, read-only)
  uid:                                                                # github.com/GoogleCloudPlatform/kubernetes/pkg/types.UID (unique UUID across space and time; populated by the system; read-only)
  resourceVersion:                                                    # string (string that identifies the internal version of this object that can be used by clients to determine when objects have changed; populated by the system, read-only; value must be treated as opaque by clients and passed unmodified back to the server: https://github.com/GoogleCloudPlatform/kubernetes/blob/master/docs/api-conventions.md#concurrency-control-and-consistency)
  creationTimestamp:                                                  # github.com/GoogleCloudPlatform/kubernetes/pkg/util.Time (RFC 3339 date and time at which the object was created; populated by the system, read-only; null for lists)
  deletionTimestamp:                                                  # *github.com/GoogleCloudPlatform/kubernetes/pkg/util.Time (RFC 3339 date and time at which the object will be deleted; populated by the system when a graceful deletion is requested, read-only; if not set, graceful deletion of the object has not been requested)
  labels:                                                             # map[string]string (map of string keys and values that can be used to organize and categorize objects; may match selectors of replication controllers and services)
    [string]:                                                         # string
  annotations:                                                        # map[string]string (map of string keys and values that can be used by external tooling to store and retrieve arbitrary metadata about objects)
    [string]:                                                         # string
secret:                                                               # string
respondWithChallenges:                                                # bool
redirectURIs:                                                         # []string
- [string]                                                            # 


OAuthClientAuthorization
========================


kind: OAuthClientAuthorization                                        # string (kind of object, in CamelCase; cannot be updated)
apiVersion: v1beta1                                                   # string (version of the schema the object should have)
metadata:                                                             # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta3.ObjectMeta
  name:                                                               # string (string that identifies an object. Must be unique within a namespace; cannot be updated)
  generateName:                                                       # string (an optional prefix to use to generate a unique name; has the same validation rules as name; optional, and is applied only name if is not specified)
  namespace:                                                          # string (namespace of the object; cannot be updated)
  selfLink:                                                           # string (URL for the object; populated by the system, read-only)
  uid:                                                                # github.com/GoogleCloudPlatform/kubernetes/pkg/types.UID (unique UUID across space and time; populated by the system; read-only)
  resourceVersion:                                                    # string (string that identifies the internal version of this object that can be used by clients to determine when objects have changed; populated by the system, read-only; value must be treated as opaque by clients and passed unmodified back to the server: https://github.com/GoogleCloudPlatform/kubernetes/blob/master/docs/api-conventions.md#concurrency-control-and-consistency)
  creationTimestamp:                                                  # github.com/GoogleCloudPlatform/kubernetes/pkg/util.Time (RFC 3339 date and time at which the object was created; populated by the system, read-only; null for lists)
  deletionTimestamp:                                                  # *github.com/GoogleCloudPlatform/kubernetes/pkg/util.Time (RFC 3339 date and time at which the object will be deleted; populated by the system when a graceful deletion is requested, read-only; if not set, graceful deletion of the object has not been requested)
  labels:                                                             # map[string]string (map of string keys and values that can be used to organize and categorize objects; may match selectors of replication controllers and services)
    [string]:                                                         # string
  annotations:                                                        # map[string]string (map of string keys and values that can be used by external tooling to store and retrieve arbitrary metadata about objects)
    [string]:                                                         # string
clientName:                                                           # string
userName:                                                             # string
userUID:                                                              # string
scopes:                                                               # []string
- [string]                                                            # 


OAuthClientAuthorizationList
============================


kind: OAuthClientAuthorizationList                                    # string (kind of object, in CamelCase; cannot be updated)
apiVersion: v1beta1                                                   # string (version of the schema the object should have)
metadata:                                                             # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta3.ListMeta
  selfLink:                                                           # string (URL for the object; populated by the system, read-only)
  resourceVersion:                                                    # string (string that identifies the internal version of this object that can be used by clients to determine when objects have changed; populated by the system, read-only; value must be treated as opaque by clients and passed unmodified back to the server: https://github.com/GoogleCloudPlatform/kubernetes/blob/master/docs/api-conventions.md#concurrency-control-and-consistency)
items:                                                                # []github.com/openshift/origin/pkg/oauth/api/v1beta1.OAuthClientAuthorization
- kind:                                                               # string (kind of object, in CamelCase; cannot be updated)
  apiVersion:                                                         # string (version of the schema the object should have)
  metadata:                                                           # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta3.ObjectMeta
    name:                                                             # string (string that identifies an object. Must be unique within a namespace; cannot be updated)
    generateName:                                                     # string (an optional prefix to use to generate a unique name; has the same validation rules as name; optional, and is applied only name if is not specified)
    namespace:                                                        # string (namespace of the object; cannot be updated)
    selfLink:                                                         # string (URL for the object; populated by the system, read-only)
    uid:                                                              # github.com/GoogleCloudPlatform/kubernetes/pkg/types.UID (unique UUID across space and time; populated by the system; read-only)
    resourceVersion:                                                  # string (string that identifies the internal version of this object that can be used by clients to determine when objects have changed; populated by the system, read-only; value must be treated as opaque by clients and passed unmodified back to the server: https://github.com/GoogleCloudPlatform/kubernetes/blob/master/docs/api-conventions.md#concurrency-control-and-consistency)
    creationTimestamp:                                                # github.com/GoogleCloudPlatform/kubernetes/pkg/util.Time (RFC 3339 date and time at which the object was created; populated by the system, read-only; null for lists)
    deletionTimestamp:                                                # *github.com/GoogleCloudPlatform/kubernetes/pkg/util.Time (RFC 3339 date and time at which the object will be deleted; populated by the system when a graceful deletion is requested, read-only; if not set, graceful deletion of the object has not been requested)
    labels:                                                           # map[string]string (map of string keys and values that can be used to organize and categorize objects; may match selectors of replication controllers and services)
      [string]:                                                       # string
    annotations:                                                      # map[string]string (map of string keys and values that can be used by external tooling to store and retrieve arbitrary metadata about objects)
      [string]:                                                       # string
  clientName:                                                         # string
  userName:                                                           # string
  userUID:                                                            # string
  scopes:                                                             # []string
  - [string]                                                          # 


OAuthClientList
===============


kind: OAuthClientList                                                 # string (kind of object, in CamelCase; cannot be updated)
apiVersion: v1beta1                                                   # string (version of the schema the object should have)
metadata:                                                             # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta3.ListMeta
  selfLink:                                                           # string (URL for the object; populated by the system, read-only)
  resourceVersion:                                                    # string (string that identifies the internal version of this object that can be used by clients to determine when objects have changed; populated by the system, read-only; value must be treated as opaque by clients and passed unmodified back to the server: https://github.com/GoogleCloudPlatform/kubernetes/blob/master/docs/api-conventions.md#concurrency-control-and-consistency)
items:                                                                # []github.com/openshift/origin/pkg/oauth/api/v1beta1.OAuthClient
- kind:                                                               # string (kind of object, in CamelCase; cannot be updated)
  apiVersion:                                                         # string (version of the schema the object should have)
  metadata:                                                           # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta3.ObjectMeta
    name:                                                             # string (string that identifies an object. Must be unique within a namespace; cannot be updated)
    generateName:                                                     # string (an optional prefix to use to generate a unique name; has the same validation rules as name; optional, and is applied only name if is not specified)
    namespace:                                                        # string (namespace of the object; cannot be updated)
    selfLink:                                                         # string (URL for the object; populated by the system, read-only)
    uid:                                                              # github.com/GoogleCloudPlatform/kubernetes/pkg/types.UID (unique UUID across space and time; populated by the system; read-only)
    resourceVersion:                                                  # string (string that identifies the internal version of this object that can be used by clients to determine when objects have changed; populated by the system, read-only; value must be treated as opaque by clients and passed unmodified back to the server: https://github.com/GoogleCloudPlatform/kubernetes/blob/master/docs/api-conventions.md#concurrency-control-and-consistency)
    creationTimestamp:                                                # github.com/GoogleCloudPlatform/kubernetes/pkg/util.Time (RFC 3339 date and time at which the object was created; populated by the system, read-only; null for lists)
    deletionTimestamp:                                                # *github.com/GoogleCloudPlatform/kubernetes/pkg/util.Time (RFC 3339 date and time at which the object will be deleted; populated by the system when a graceful deletion is requested, read-only; if not set, graceful deletion of the object has not been requested)
    labels:                                                           # map[string]string (map of string keys and values that can be used to organize and categorize objects; may match selectors of replication controllers and services)
      [string]:                                                       # string
    annotations:                                                      # map[string]string (map of string keys and values that can be used by external tooling to store and retrieve arbitrary metadata about objects)
      [string]:                                                       # string
  secret:                                                             # string
  respondWithChallenges:                                              # bool
  redirectURIs:                                                       # []string
  - [string]                                                          # 


Project
=======

Project is a logical top-level container for a set of origin resources

kind: Project                                                         # string (kind of object, in CamelCase; cannot be updated)
apiVersion: v1beta1                                                   # string (version of the schema the object should have)
metadata:                                                             # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta3.ObjectMeta
  name:                                                               # string (string that identifies an object. Must be unique within a namespace; cannot be updated)
  generateName:                                                       # string (an optional prefix to use to generate a unique name; has the same validation rules as name; optional, and is applied only name if is not specified)
  namespace:                                                          # string (namespace of the object; cannot be updated)
  selfLink:                                                           # string (URL for the object; populated by the system, read-only)
  uid:                                                                # github.com/GoogleCloudPlatform/kubernetes/pkg/types.UID (unique UUID across space and time; populated by the system; read-only)
  resourceVersion:                                                    # string (string that identifies the internal version of this object that can be used by clients to determine when objects have changed; populated by the system, read-only; value must be treated as opaque by clients and passed unmodified back to the server: https://github.com/GoogleCloudPlatform/kubernetes/blob/master/docs/api-conventions.md#concurrency-control-and-consistency)
  creationTimestamp:                                                  # github.com/GoogleCloudPlatform/kubernetes/pkg/util.Time (RFC 3339 date and time at which the object was created; populated by the system, read-only; null for lists)
  deletionTimestamp:                                                  # *github.com/GoogleCloudPlatform/kubernetes/pkg/util.Time (RFC 3339 date and time at which the object will be deleted; populated by the system when a graceful deletion is requested, read-only; if not set, graceful deletion of the object has not been requested)
  labels:                                                             # map[string]string (map of string keys and values that can be used to organize and categorize objects; may match selectors of replication controllers and services)
    [string]:                                                         # string
  annotations:                                                        # map[string]string (map of string keys and values that can be used by external tooling to store and retrieve arbitrary metadata about objects)
    [string]:                                                         # string
displayName:                                                          # string
spec:                                                                 # github.com/openshift/origin/pkg/project/api/v1beta1.ProjectSpec (spec defines the behavior of the Project)
  finalizers:                                                         # []github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta3.FinalizerName (an opaque list of values that must be empty to permanently remove object from storage)
  - [github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta3.FinalizerName] # 
status:                                                               # github.com/openshift/origin/pkg/project/api/v1beta1.ProjectStatus (status describes the current status of a Project; read-only)
  phase: Active|Terminating                                           # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta3.NamespacePhase (phase is the current lifecycle phase of the project)


ProjectList
===========

ProjectList is a list of Project objects.

kind: ProjectList                                                     # string (kind of object, in CamelCase; cannot be updated)
apiVersion: v1beta1                                                   # string (version of the schema the object should have)
metadata:                                                             # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta3.ListMeta
  selfLink:                                                           # string (URL for the object; populated by the system, read-only)
  resourceVersion:                                                    # string (string that identifies the internal version of this object that can be used by clients to determine when objects have changed; populated by the system, read-only; value must be treated as opaque by clients and passed unmodified back to the server: https://github.com/GoogleCloudPlatform/kubernetes/blob/master/docs/api-conventions.md#concurrency-control-and-consistency)
items:                                                                # []github.com/openshift/origin/pkg/project/api/v1beta1.Project
- kind:                                                               # string (kind of object, in CamelCase; cannot be updated)
  apiVersion:                                                         # string (version of the schema the object should have)
  metadata:                                                           # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta3.ObjectMeta
    name:                                                             # string (string that identifies an object. Must be unique within a namespace; cannot be updated)
    generateName:                                                     # string (an optional prefix to use to generate a unique name; has the same validation rules as name; optional, and is applied only name if is not specified)
    namespace:                                                        # string (namespace of the object; cannot be updated)
    selfLink:                                                         # string (URL for the object; populated by the system, read-only)
    uid:                                                              # github.com/GoogleCloudPlatform/kubernetes/pkg/types.UID (unique UUID across space and time; populated by the system; read-only)
    resourceVersion:                                                  # string (string that identifies the internal version of this object that can be used by clients to determine when objects have changed; populated by the system, read-only; value must be treated as opaque by clients and passed unmodified back to the server: https://github.com/GoogleCloudPlatform/kubernetes/blob/master/docs/api-conventions.md#concurrency-control-and-consistency)
    creationTimestamp:                                                # github.com/GoogleCloudPlatform/kubernetes/pkg/util.Time (RFC 3339 date and time at which the object was created; populated by the system, read-only; null for lists)
    deletionTimestamp:                                                # *github.com/GoogleCloudPlatform/kubernetes/pkg/util.Time (RFC 3339 date and time at which the object will be deleted; populated by the system when a graceful deletion is requested, read-only; if not set, graceful deletion of the object has not been requested)
    labels:                                                           # map[string]string (map of string keys and values that can be used to organize and categorize objects; may match selectors of replication controllers and services)
      [string]:                                                       # string
    annotations:                                                      # map[string]string (map of string keys and values that can be used by external tooling to store and retrieve arbitrary metadata about objects)
      [string]:                                                       # string
  displayName:                                                        # string
  spec:                                                               # github.com/openshift/origin/pkg/project/api/v1beta1.ProjectSpec (spec defines the behavior of the Project)
    finalizers:                                                       # []github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta3.FinalizerName (an opaque list of values that must be empty to permanently remove object from storage)
    - [github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta3.FinalizerName] # 
  status:                                                             # github.com/openshift/origin/pkg/project/api/v1beta1.ProjectStatus (status describes the current status of a Project; read-only)
    phase: Active|Terminating                                         # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta3.NamespacePhase (phase is the current lifecycle phase of the project)


ProjectRequest
==============


kind: ProjectRequest                                                  # string (kind of object, in CamelCase; cannot be updated)
apiVersion: v1beta1                                                   # string (version of the schema the object should have)
metadata:                                                             # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta3.ObjectMeta
  name:                                                               # string (string that identifies an object. Must be unique within a namespace; cannot be updated)
  generateName:                                                       # string (an optional prefix to use to generate a unique name; has the same validation rules as name; optional, and is applied only name if is not specified)
  namespace:                                                          # string (namespace of the object; cannot be updated)
  selfLink:                                                           # string (URL for the object; populated by the system, read-only)
  uid:                                                                # github.com/GoogleCloudPlatform/kubernetes/pkg/types.UID (unique UUID across space and time; populated by the system; read-only)
  resourceVersion:                                                    # string (string that identifies the internal version of this object that can be used by clients to determine when objects have changed; populated by the system, read-only; value must be treated as opaque by clients and passed unmodified back to the server: https://github.com/GoogleCloudPlatform/kubernetes/blob/master/docs/api-conventions.md#concurrency-control-and-consistency)
  creationTimestamp:                                                  # github.com/GoogleCloudPlatform/kubernetes/pkg/util.Time (RFC 3339 date and time at which the object was created; populated by the system, read-only; null for lists)
  deletionTimestamp:                                                  # *github.com/GoogleCloudPlatform/kubernetes/pkg/util.Time (RFC 3339 date and time at which the object will be deleted; populated by the system when a graceful deletion is requested, read-only; if not set, graceful deletion of the object has not been requested)
  labels:                                                             # map[string]string (map of string keys and values that can be used to organize and categorize objects; may match selectors of replication controllers and services)
    [string]:                                                         # string
  annotations:                                                        # map[string]string (map of string keys and values that can be used by external tooling to store and retrieve arbitrary metadata about objects)
    [string]:                                                         # string
displayName:                                                          # string


Route
=====

Route encapsulates the inputs needed to connect an alias to endpoints.

kind: Route                                                           # string
apiVersion: v1beta1                                                   # string
metadata:                                                             # github.com/GoogleCloudPlatform/kubernetes/pkg/api.ObjectMeta
  name:                                                               # string
  generateName:                                                       # string
  namespace:                                                          # string
  selfLink:                                                           # string
  uid:                                                                # github.com/GoogleCloudPlatform/kubernetes/pkg/types.UID
  resourceVersion:                                                    # string
  creationTimestamp:                                                  # github.com/GoogleCloudPlatform/kubernetes/pkg/util.Time
  deletionTimestamp:                                                  # *github.com/GoogleCloudPlatform/kubernetes/pkg/util.Time
  labels:                                                             # map[string]string
    [string]:                                                         # string
  annotations:                                                        # map[string]string
    [string]:                                                         # string
host:                                                                 # string
path:                                                                 # string
serviceName:                                                          # string
tls:                                                                  # *github.com/openshift/origin/pkg/route/api/v1beta1.TLSConfig
  termination: edge|passthrough|reencrypt                             # github.com/openshift/origin/pkg/route/api/v1beta1.TLSTerminationType
  certificate:                                                        # string
  key:                                                                # string
  caCertificate:                                                      # string
  destinationCACertificate:                                           # string


RouteList
=========

RouteList is a collection of Routes.

kind: RouteList                                                       # string
apiVersion: v1beta1                                                   # string
metadata:                                                             # github.com/GoogleCloudPlatform/kubernetes/pkg/api.ListMeta
  selfLink:                                                           # string
  resourceVersion:                                                    # string
items:                                                                # []github.com/openshift/origin/pkg/route/api/v1beta1.Route
- kind:                                                               # string
  apiVersion:                                                         # string
  metadata:                                                           # github.com/GoogleCloudPlatform/kubernetes/pkg/api.ObjectMeta
    name:                                                             # string
    generateName:                                                     # string
    namespace:                                                        # string
    selfLink:                                                         # string
    uid:                                                              # github.com/GoogleCloudPlatform/kubernetes/pkg/types.UID
    resourceVersion:                                                  # string
    creationTimestamp:                                                # github.com/GoogleCloudPlatform/kubernetes/pkg/util.Time
    deletionTimestamp:                                                # *github.com/GoogleCloudPlatform/kubernetes/pkg/util.Time
    labels:                                                           # map[string]string
      [string]:                                                       # string
    annotations:                                                      # map[string]string
      [string]:                                                       # string
  host:                                                               # string
  path:                                                               # string
  serviceName:                                                        # string
  tls:                                                                # *github.com/openshift/origin/pkg/route/api/v1beta1.TLSConfig
    termination: edge|passthrough|reencrypt                           # github.com/openshift/origin/pkg/route/api/v1beta1.TLSTerminationType
    certificate:                                                      # string
    key:                                                              # string
    caCertificate:                                                    # string
    destinationCACertificate:                                         # string


Template
========

Template contains the inputs needed to produce a Config.

kind: Template                                                        # string (kind of object, in CamelCase; cannot be updated)
apiVersion: v1beta1                                                   # string (version of the schema the object should have)
metadata:                                                             # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta3.ObjectMeta
  name:                                                               # string (string that identifies an object. Must be unique within a namespace; cannot be updated)
  generateName:                                                       # string (an optional prefix to use to generate a unique name; has the same validation rules as name; optional, and is applied only name if is not specified)
  namespace:                                                          # string (namespace of the object; cannot be updated)
  selfLink:                                                           # string (URL for the object; populated by the system, read-only)
  uid:                                                                # github.com/GoogleCloudPlatform/kubernetes/pkg/types.UID (unique UUID across space and time; populated by the system; read-only)
  resourceVersion:                                                    # string (string that identifies the internal version of this object that can be used by clients to determine when objects have changed; populated by the system, read-only; value must be treated as opaque by clients and passed unmodified back to the server: https://github.com/GoogleCloudPlatform/kubernetes/blob/master/docs/api-conventions.md#concurrency-control-and-consistency)
  creationTimestamp:                                                  # github.com/GoogleCloudPlatform/kubernetes/pkg/util.Time (RFC 3339 date and time at which the object was created; populated by the system, read-only; null for lists)
  deletionTimestamp:                                                  # *github.com/GoogleCloudPlatform/kubernetes/pkg/util.Time (RFC 3339 date and time at which the object will be deleted; populated by the system when a graceful deletion is requested, read-only; if not set, graceful deletion of the object has not been requested)
  labels:                                                             # map[string]string (map of string keys and values that can be used to organize and categorize objects; may match selectors of replication controllers and services)
    [string]:                                                         # string
  annotations:                                                        # map[string]string (map of string keys and values that can be used by external tooling to store and retrieve arbitrary metadata about objects)
    [string]:                                                         # string
items:                                                                # []github.com/GoogleCloudPlatform/kubernetes/pkg/runtime.RawExtension
- - [byte]                                                            # 
parameters:                                                           # []github.com/openshift/origin/pkg/template/api/v1beta1.Parameter
- name:                                                               # string
  description:                                                        # string
  value:                                                              # string
  generate:                                                           # string
  from:                                                               # string
labels:                                                               # map[string]string
  [string]:                                                           # string


TemplateList
============

TemplateList is a list of Template objects.

kind: TemplateList                                                    # string (kind of object, in CamelCase; cannot be updated)
apiVersion: v1beta1                                                   # string (version of the schema the object should have)
metadata:                                                             # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta3.ListMeta
  selfLink:                                                           # string (URL for the object; populated by the system, read-only)
  resourceVersion:                                                    # string (string that identifies the internal version of this object that can be used by clients to determine when objects have changed; populated by the system, read-only; value must be treated as opaque by clients and passed unmodified back to the server: https://github.com/GoogleCloudPlatform/kubernetes/blob/master/docs/api-conventions.md#concurrency-control-and-consistency)
items:                                                                # []github.com/openshift/origin/pkg/template/api/v1beta1.Template
- kind:                                                               # string (kind of object, in CamelCase; cannot be updated)
  apiVersion:                                                         # string (version of the schema the object should have)
  metadata:                                                           # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta3.ObjectMeta
    name:                                                             # string (string that identifies an object. Must be unique within a namespace; cannot be updated)
    generateName:                                                     # string (an optional prefix to use to generate a unique name; has the same validation rules as name; optional, and is applied only name if is not specified)
    namespace:                                                        # string (namespace of the object; cannot be updated)
    selfLink:                                                         # string (URL for the object; populated by the system, read-only)
    uid:                                                              # github.com/GoogleCloudPlatform/kubernetes/pkg/types.UID (unique UUID across space and time; populated by the system; read-only)
    resourceVersion:                                                  # string (string that identifies the internal version of this object that can be used by clients to determine when objects have changed; populated by the system, read-only; value must be treated as opaque by clients and passed unmodified back to the server: https://github.com/GoogleCloudPlatform/kubernetes/blob/master/docs/api-conventions.md#concurrency-control-and-consistency)
    creationTimestamp:                                                # github.com/GoogleCloudPlatform/kubernetes/pkg/util.Time (RFC 3339 date and time at which the object was created; populated by the system, read-only; null for lists)
    deletionTimestamp:                                                # *github.com/GoogleCloudPlatform/kubernetes/pkg/util.Time (RFC 3339 date and time at which the object will be deleted; populated by the system when a graceful deletion is requested, read-only; if not set, graceful deletion of the object has not been requested)
    labels:                                                           # map[string]string (map of string keys and values that can be used to organize and categorize objects; may match selectors of replication controllers and services)
      [string]:                                                       # string
    annotations:                                                      # map[string]string (map of string keys and values that can be used by external tooling to store and retrieve arbitrary metadata about objects)
      [string]:                                                       # string
  items:                                                              # []github.com/GoogleCloudPlatform/kubernetes/pkg/runtime.RawExtension
  - - [byte]                                                          # 
  parameters:                                                         # []github.com/openshift/origin/pkg/template/api/v1beta1.Parameter
  - name:                                                             # string
    description:                                                      # string
    value:                                                            # string
    generate:                                                         # string
    from:                                                             # string
  labels:                                                             # map[string]string
    [string]:                                                         # string


Identity
========


kind: Identity                                                        # string (kind of object, in CamelCase; cannot be updated)
apiVersion: v1beta1                                                   # string (version of the schema the object should have)
metadata:                                                             # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta3.ObjectMeta
  name:                                                               # string (string that identifies an object. Must be unique within a namespace; cannot be updated)
  generateName:                                                       # string (an optional prefix to use to generate a unique name; has the same validation rules as name; optional, and is applied only name if is not specified)
  namespace:                                                          # string (namespace of the object; cannot be updated)
  selfLink:                                                           # string (URL for the object; populated by the system, read-only)
  uid:                                                                # github.com/GoogleCloudPlatform/kubernetes/pkg/types.UID (unique UUID across space and time; populated by the system; read-only)
  resourceVersion:                                                    # string (string that identifies the internal version of this object that can be used by clients to determine when objects have changed; populated by the system, read-only; value must be treated as opaque by clients and passed unmodified back to the server: https://github.com/GoogleCloudPlatform/kubernetes/blob/master/docs/api-conventions.md#concurrency-control-and-consistency)
  creationTimestamp:                                                  # github.com/GoogleCloudPlatform/kubernetes/pkg/util.Time (RFC 3339 date and time at which the object was created; populated by the system, read-only; null for lists)
  deletionTimestamp:                                                  # *github.com/GoogleCloudPlatform/kubernetes/pkg/util.Time (RFC 3339 date and time at which the object will be deleted; populated by the system when a graceful deletion is requested, read-only; if not set, graceful deletion of the object has not been requested)
  labels:                                                             # map[string]string (map of string keys and values that can be used to organize and categorize objects; may match selectors of replication controllers and services)
    [string]:                                                         # string
  annotations:                                                        # map[string]string (map of string keys and values that can be used by external tooling to store and retrieve arbitrary metadata about objects)
    [string]:                                                         # string
providerName:                                                         # string
providerUserName:                                                     # string
user:                                                                 # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta3.ObjectReference
  kind:                                                               # string (kind of the referent)
  namespace:                                                          # string (namespace of the referent)
  name:                                                               # string (name of the referent)
  uid:                                                                # github.com/GoogleCloudPlatform/kubernetes/pkg/types.UID (uid of the referent)
  apiVersion:                                                         # string (API version of the referent)
  resourceVersion:                                                    # string (specific resourceVersion to which this reference is made, if any: https://github.com/GoogleCloudPlatform/kubernetes/blob/master/docs/api-conventions.md#concurrency-control-and-consistency)
  fieldPath:                                                          # string (if referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2])
extra:                                                                # map[string]string
  [string]:                                                           # string


IdentityList
============


kind: IdentityList                                                    # string (kind of object, in CamelCase; cannot be updated)
apiVersion: v1beta1                                                   # string (version of the schema the object should have)
metadata:                                                             # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta3.ListMeta
  selfLink:                                                           # string (URL for the object; populated by the system, read-only)
  resourceVersion:                                                    # string (string that identifies the internal version of this object that can be used by clients to determine when objects have changed; populated by the system, read-only; value must be treated as opaque by clients and passed unmodified back to the server: https://github.com/GoogleCloudPlatform/kubernetes/blob/master/docs/api-conventions.md#concurrency-control-and-consistency)
items:                                                                # []github.com/openshift/origin/pkg/user/api/v1beta1.Identity
- kind:                                                               # string (kind of object, in CamelCase; cannot be updated)
  apiVersion:                                                         # string (version of the schema the object should have)
  metadata:                                                           # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta3.ObjectMeta
    name:                                                             # string (string that identifies an object. Must be unique within a namespace; cannot be updated)
    generateName:                                                     # string (an optional prefix to use to generate a unique name; has the same validation rules as name; optional, and is applied only name if is not specified)
    namespace:                                                        # string (namespace of the object; cannot be updated)
    selfLink:                                                         # string (URL for the object; populated by the system, read-only)
    uid:                                                              # github.com/GoogleCloudPlatform/kubernetes/pkg/types.UID (unique UUID across space and time; populated by the system; read-only)
    resourceVersion:                                                  # string (string that identifies the internal version of this object that can be used by clients to determine when objects have changed; populated by the system, read-only; value must be treated as opaque by clients and passed unmodified back to the server: https://github.com/GoogleCloudPlatform/kubernetes/blob/master/docs/api-conventions.md#concurrency-control-and-consistency)
    creationTimestamp:                                                # github.com/GoogleCloudPlatform/kubernetes/pkg/util.Time (RFC 3339 date and time at which the object was created; populated by the system, read-only; null for lists)
    deletionTimestamp:                                                # *github.com/GoogleCloudPlatform/kubernetes/pkg/util.Time (RFC 3339 date and time at which the object will be deleted; populated by the system when a graceful deletion is requested, read-only; if not set, graceful deletion of the object has not been requested)
    labels:                                                           # map[string]string (map of string keys and values that can be used to organize and categorize objects; may match selectors of replication controllers and services)
      [string]:                                                       # string
    annotations:                                                      # map[string]string (map of string keys and values that can be used by external tooling to store and retrieve arbitrary metadata about objects)
      [string]:                                                       # string
  providerName:                                                       # string
  providerUserName:                                                   # string
  user:                                                               # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta3.ObjectReference
    kind:                                                             # string (kind of the referent)
    namespace:                                                        # string (namespace of the referent)
    name:                                                             # string (name of the referent)
    uid:                                                              # github.com/GoogleCloudPlatform/kubernetes/pkg/types.UID (uid of the referent)
    apiVersion:                                                       # string (API version of the referent)
    resourceVersion:                                                  # string (specific resourceVersion to which this reference is made, if any: https://github.com/GoogleCloudPlatform/kubernetes/blob/master/docs/api-conventions.md#concurrency-control-and-consistency)
    fieldPath:                                                        # string (if referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2])
  extra:                                                              # map[string]string
    [string]:                                                         # string


User
====


kind: User                                                            # string (kind of object, in CamelCase; cannot be updated)
apiVersion: v1beta1                                                   # string (version of the schema the object should have)
metadata:                                                             # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta3.ObjectMeta
  name:                                                               # string (string that identifies an object. Must be unique within a namespace; cannot be updated)
  generateName:                                                       # string (an optional prefix to use to generate a unique name; has the same validation rules as name; optional, and is applied only name if is not specified)
  namespace:                                                          # string (namespace of the object; cannot be updated)
  selfLink:                                                           # string (URL for the object; populated by the system, read-only)
  uid:                                                                # github.com/GoogleCloudPlatform/kubernetes/pkg/types.UID (unique UUID across space and time; populated by the system; read-only)
  resourceVersion:                                                    # string (string that identifies the internal version of this object that can be used by clients to determine when objects have changed; populated by the system, read-only; value must be treated as opaque by clients and passed unmodified back to the server: https://github.com/GoogleCloudPlatform/kubernetes/blob/master/docs/api-conventions.md#concurrency-control-and-consistency)
  creationTimestamp:                                                  # github.com/GoogleCloudPlatform/kubernetes/pkg/util.Time (RFC 3339 date and time at which the object was created; populated by the system, read-only; null for lists)
  deletionTimestamp:                                                  # *github.com/GoogleCloudPlatform/kubernetes/pkg/util.Time (RFC 3339 date and time at which the object will be deleted; populated by the system when a graceful deletion is requested, read-only; if not set, graceful deletion of the object has not been requested)
  labels:                                                             # map[string]string (map of string keys and values that can be used to organize and categorize objects; may match selectors of replication controllers and services)
    [string]:                                                         # string
  annotations:                                                        # map[string]string (map of string keys and values that can be used by external tooling to store and retrieve arbitrary metadata about objects)
    [string]:                                                         # string
fullName:                                                             # string
identities:                                                           # []string
- [string]                                                            # 


UserIdentityMapping
===================


kind: UserIdentityMapping                                             # string (kind of object, in CamelCase; cannot be updated)
apiVersion: v1beta1                                                   # string (version of the schema the object should have)
metadata:                                                             # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta3.ObjectMeta
  name:                                                               # string (string that identifies an object. Must be unique within a namespace; cannot be updated)
  generateName:                                                       # string (an optional prefix to use to generate a unique name; has the same validation rules as name; optional, and is applied only name if is not specified)
  namespace:                                                          # string (namespace of the object; cannot be updated)
  selfLink:                                                           # string (URL for the object; populated by the system, read-only)
  uid:                                                                # github.com/GoogleCloudPlatform/kubernetes/pkg/types.UID (unique UUID across space and time; populated by the system; read-only)
  resourceVersion:                                                    # string (string that identifies the internal version of this object that can be used by clients to determine when objects have changed; populated by the system, read-only; value must be treated as opaque by clients and passed unmodified back to the server: https://github.com/GoogleCloudPlatform/kubernetes/blob/master/docs/api-conventions.md#concurrency-control-and-consistency)
  creationTimestamp:                                                  # github.com/GoogleCloudPlatform/kubernetes/pkg/util.Time (RFC 3339 date and time at which the object was created; populated by the system, read-only; null for lists)
  deletionTimestamp:                                                  # *github.com/GoogleCloudPlatform/kubernetes/pkg/util.Time (RFC 3339 date and time at which the object will be deleted; populated by the system when a graceful deletion is requested, read-only; if not set, graceful deletion of the object has not been requested)
  labels:                                                             # map[string]string (map of string keys and values that can be used to organize and categorize objects; may match selectors of replication controllers and services)
    [string]:                                                         # string
  annotations:                                                        # map[string]string (map of string keys and values that can be used by external tooling to store and retrieve arbitrary metadata about objects)
    [string]:                                                         # string
identity:                                                             # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta3.ObjectReference
  kind:                                                               # string (kind of the referent)
  namespace:                                                          # string (namespace of the referent)
  name:                                                               # string (name of the referent)
  uid:                                                                # github.com/GoogleCloudPlatform/kubernetes/pkg/types.UID (uid of the referent)
  apiVersion:                                                         # string (API version of the referent)
  resourceVersion:                                                    # string (specific resourceVersion to which this reference is made, if any: https://github.com/GoogleCloudPlatform/kubernetes/blob/master/docs/api-conventions.md#concurrency-control-and-consistency)
  fieldPath:                                                          # string (if referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2])
user:                                                                 # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta3.ObjectReference
  kind:                                                               # string (kind of the referent)
  namespace:                                                          # string (namespace of the referent)
  name:                                                               # string (name of the referent)
  uid:                                                                # github.com/GoogleCloudPlatform/kubernetes/pkg/types.UID (uid of the referent)
  apiVersion:                                                         # string (API version of the referent)
  resourceVersion:                                                    # string (specific resourceVersion to which this reference is made, if any: https://github.com/GoogleCloudPlatform/kubernetes/blob/master/docs/api-conventions.md#concurrency-control-and-consistency)
  fieldPath:                                                          # string (if referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2])


UserList
========


kind: UserList                                                        # string (kind of object, in CamelCase; cannot be updated)
apiVersion: v1beta1                                                   # string (version of the schema the object should have)
metadata:                                                             # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta3.ListMeta
  selfLink:                                                           # string (URL for the object; populated by the system, read-only)
  resourceVersion:                                                    # string (string that identifies the internal version of this object that can be used by clients to determine when objects have changed; populated by the system, read-only; value must be treated as opaque by clients and passed unmodified back to the server: https://github.com/GoogleCloudPlatform/kubernetes/blob/master/docs/api-conventions.md#concurrency-control-and-consistency)
items:                                                                # []github.com/openshift/origin/pkg/user/api/v1beta1.User
- kind:                                                               # string (kind of object, in CamelCase; cannot be updated)
  apiVersion:                                                         # string (version of the schema the object should have)
  metadata:                                                           # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta3.ObjectMeta
    name:                                                             # string (string that identifies an object. Must be unique within a namespace; cannot be updated)
    generateName:                                                     # string (an optional prefix to use to generate a unique name; has the same validation rules as name; optional, and is applied only name if is not specified)
    namespace:                                                        # string (namespace of the object; cannot be updated)
    selfLink:                                                         # string (URL for the object; populated by the system, read-only)
    uid:                                                              # github.com/GoogleCloudPlatform/kubernetes/pkg/types.UID (unique UUID across space and time; populated by the system; read-only)
    resourceVersion:                                                  # string (string that identifies the internal version of this object that can be used by clients to determine when objects have changed; populated by the system, read-only; value must be treated as opaque by clients and passed unmodified back to the server: https://github.com/GoogleCloudPlatform/kubernetes/blob/master/docs/api-conventions.md#concurrency-control-and-consistency)
    creationTimestamp:                                                # github.com/GoogleCloudPlatform/kubernetes/pkg/util.Time (RFC 3339 date and time at which the object was created; populated by the system, read-only; null for lists)
    deletionTimestamp:                                                # *github.com/GoogleCloudPlatform/kubernetes/pkg/util.Time (RFC 3339 date and time at which the object will be deleted; populated by the system when a graceful deletion is requested, read-only; if not set, graceful deletion of the object has not been requested)
    labels:                                                           # map[string]string (map of string keys and values that can be used to organize and categorize objects; may match selectors of replication controllers and services)
      [string]:                                                       # string
    annotations:                                                      # map[string]string (map of string keys and values that can be used by external tooling to store and retrieve arbitrary metadata about objects)
      [string]:                                                       # string
  fullName:                                                           # string
  identities:                                                         # []string
  - [string]                                                          # 


