ClusterPolicy
=============

ClusterPolicy is a object that holds all the ClusterRoles for a particular namespace.  There is at most
one ClusterPolicy document per namespace.

kind: ClusterPolicy                                                   # string
apiVersion: v1                                                        # string
metadata:                                                             # k8s.io/kubernetes/pkg/api/v1.ObjectMeta
  name:                                                               # string
  generateName:                                                       # string
  namespace:                                                          # string
  selfLink:                                                           # string
  uid:                                                                # k8s.io/kubernetes/pkg/types.UID
  resourceVersion:                                                    # string
  generation:                                                         # int64
  creationTimestamp:                                                  # k8s.io/kubernetes/pkg/api/unversioned.Time
  deletionTimestamp:                                                  # k8s.io/kubernetes/pkg/api/unversioned.Time
  deletionGracePeriodSeconds:                                         # int64
  labels:                                                             # map[string]string
    [string]:                                                         # string
  annotations:                                                        # map[string]string
    [string]:                                                         # string
lastModified:                                                         # k8s.io/kubernetes/pkg/api/unversioned.Time (last time any part of the object was created, updated, or deleted)
roles:                                                                # []github.com/openshift/origin/pkg/authorization/api/v1.NamedClusterRole (all the roles held by this policy, mapped by role name)
- name:                                                               # string (name of the cluster role)
  role:                                                               # github.com/openshift/origin/pkg/authorization/api/v1.ClusterRole (the cluster role)
    kind:                                                             # string
    apiVersion:                                                       # string
    metadata:                                                         # k8s.io/kubernetes/pkg/api/v1.ObjectMeta
      name:                                                           # string
      generateName:                                                   # string
      namespace:                                                      # string
      selfLink:                                                       # string
      uid:                                                            # k8s.io/kubernetes/pkg/types.UID
      resourceVersion:                                                # string
      generation:                                                     # int64
      creationTimestamp:                                              # k8s.io/kubernetes/pkg/api/unversioned.Time
      deletionTimestamp:                                              # k8s.io/kubernetes/pkg/api/unversioned.Time
      deletionGracePeriodSeconds:                                     # int64
      labels:                                                         # map[string]string
        [string]:                                                     # string
      annotations:                                                    # map[string]string
        [string]:                                                     # string
    rules:                                                            # []github.com/openshift/origin/pkg/authorization/api/v1.PolicyRule (list of policy rules)
    - verbs:                                                          # []string (list of verbs that apply to ALL the resourceKinds and attributeRestrictions contained in this rule.  The verb * represents all kinds.)
      - [string]                                                      #
      attributeRestrictions:                                          # k8s.io/kubernetes/pkg/runtime.RawExtension (vary depending on what the authorizer supports.  If the authorizer does not recognize how to handle the specified value, it should report an error.)
      apiGroups:                                                      # []string (list of API groups this rule applies to.  * represents all API groups.)
      - [string]                                                      #
      resources:                                                      # []string (list of resources this rule applies to.  * represents all resources.)
      - [string]                                                      #
      resourceNames:                                                  # []string (optional white list of names that the rule applies to.  An empty set means that everything is allowed.)
      - [string]                                                      #
      nonResourceURLs:                                                # []string (set of partial urls that a user should have access to. *s are allowed, but only as the full, final step in the path.)
      - [string]                                                      #

ClusterPolicyBinding
====================

ClusterPolicyBinding is a object that holds all the ClusterRoleBindings for a particular namespace.  There is
one ClusterPolicyBinding document per referenced ClusterPolicy namespace

kind: ClusterPolicyBinding                                            # string
apiVersion: v1                                                        # string
metadata:                                                             # k8s.io/kubernetes/pkg/api/v1.ObjectMeta
  name:                                                               # string
  generateName:                                                       # string
  namespace:                                                          # string
  selfLink:                                                           # string
  uid:                                                                # k8s.io/kubernetes/pkg/types.UID
  resourceVersion:                                                    # string
  generation:                                                         # int64
  creationTimestamp:                                                  # k8s.io/kubernetes/pkg/api/unversioned.Time
  deletionTimestamp:                                                  # k8s.io/kubernetes/pkg/api/unversioned.Time
  deletionGracePeriodSeconds:                                         # int64
  labels:                                                             # map[string]string
    [string]:                                                         # string
  annotations:                                                        # map[string]string
    [string]:                                                         # string
lastModified:                                                         # k8s.io/kubernetes/pkg/api/unversioned.Time (last time any part of the object was created, updated, or deleted)
policyRef:                                                            # k8s.io/kubernetes/pkg/api/v1.ObjectReference (reference to the cluster policy that this cluster policy binding's role bindings may reference)
  kind:                                                               # string
  namespace:                                                          # string
  name:                                                               # string
  uid:                                                                # k8s.io/kubernetes/pkg/types.UID
  apiVersion:                                                         # string
  resourceVersion:                                                    # string
  fieldPath:                                                          # string
roleBindings:                                                         # []github.com/openshift/origin/pkg/authorization/api/v1.NamedClusterRoleBinding (all the role bindings held by this policy, mapped by role name)
- name:                                                               # string (name of the cluster role binding)
  roleBinding:                                                        # github.com/openshift/origin/pkg/authorization/api/v1.ClusterRoleBinding (the cluster role binding)
    kind:                                                             # string
    apiVersion:                                                       # string
    metadata:                                                         # k8s.io/kubernetes/pkg/api/v1.ObjectMeta
      name:                                                           # string
      generateName:                                                   # string
      namespace:                                                      # string
      selfLink:                                                       # string
      uid:                                                            # k8s.io/kubernetes/pkg/types.UID
      resourceVersion:                                                # string
      generation:                                                     # int64
      creationTimestamp:                                              # k8s.io/kubernetes/pkg/api/unversioned.Time
      deletionTimestamp:                                              # k8s.io/kubernetes/pkg/api/unversioned.Time
      deletionGracePeriodSeconds:                                     # int64
      labels:                                                         # map[string]string
        [string]:                                                     # string
      annotations:                                                    # map[string]string
        [string]:                                                     # string
    userNames:                                                        # []string (all user names directly bound to the role)
    - [string]                                                        #
    groupNames:                                                       # []string (all the groups directly bound to the role)
    - [string]                                                        #
    subjects:                                                         # []k8s.io/kubernetes/pkg/api/v1.ObjectReference (references to subjects bound to the role.  Only User, Group, SystemUser, SystemGroup, and ServiceAccount are allowed.)
    - kind:                                                           # string
      namespace:                                                      # string
      name:                                                           # string
      uid:                                                            # k8s.io/kubernetes/pkg/types.UID
      apiVersion:                                                     # string
      resourceVersion:                                                # string
      fieldPath:                                                      # string
    roleRef:                                                          # k8s.io/kubernetes/pkg/api/v1.ObjectReference (reference to the policy role)
      kind:                                                           # string
      namespace:                                                      # string
      name:                                                           # string
      uid:                                                            # k8s.io/kubernetes/pkg/types.UID
      apiVersion:                                                     # string
      resourceVersion:                                                # string
      fieldPath:                                                      # string

ClusterPolicyBindingList
========================

ClusterPolicyBindingList is a collection of ClusterPolicyBindings

kind: ClusterPolicyBindingList                                        # string
apiVersion: v1                                                        # string
metadata:                                                             # k8s.io/kubernetes/pkg/api/unversioned.ListMeta
  selfLink:                                                           # string
  resourceVersion:                                                    # string
items:                                                                # []github.com/openshift/origin/pkg/authorization/api/v1.ClusterPolicyBinding (list of cluster policy bindings)
- kind:                                                               # string
  apiVersion:                                                         # string
  metadata:                                                           # k8s.io/kubernetes/pkg/api/v1.ObjectMeta
    name:                                                             # string
    generateName:                                                     # string
    namespace:                                                        # string
    selfLink:                                                         # string
    uid:                                                              # k8s.io/kubernetes/pkg/types.UID
    resourceVersion:                                                  # string
    generation:                                                       # int64
    creationTimestamp:                                                # k8s.io/kubernetes/pkg/api/unversioned.Time
    deletionTimestamp:                                                # k8s.io/kubernetes/pkg/api/unversioned.Time
    deletionGracePeriodSeconds:                                       # int64
    labels:                                                           # map[string]string
      [string]:                                                       # string
    annotations:                                                      # map[string]string
      [string]:                                                       # string
  lastModified:                                                       # k8s.io/kubernetes/pkg/api/unversioned.Time (last time any part of the object was created, updated, or deleted)
  policyRef:                                                          # k8s.io/kubernetes/pkg/api/v1.ObjectReference (reference to the cluster policy that this cluster policy binding's role bindings may reference)
    kind:                                                             # string
    namespace:                                                        # string
    name:                                                             # string
    uid:                                                              # k8s.io/kubernetes/pkg/types.UID
    apiVersion:                                                       # string
    resourceVersion:                                                  # string
    fieldPath:                                                        # string
  roleBindings:                                                       # []github.com/openshift/origin/pkg/authorization/api/v1.NamedClusterRoleBinding (all the role bindings held by this policy, mapped by role name)
  - name:                                                             # string (name of the cluster role binding)
    roleBinding:                                                      # github.com/openshift/origin/pkg/authorization/api/v1.ClusterRoleBinding (the cluster role binding)
      kind:                                                           # string
      apiVersion:                                                     # string
      metadata:                                                       # k8s.io/kubernetes/pkg/api/v1.ObjectMeta
        name:                                                         # string
        generateName:                                                 # string
        namespace:                                                    # string
        selfLink:                                                     # string
        uid:                                                          # k8s.io/kubernetes/pkg/types.UID
        resourceVersion:                                              # string
        generation:                                                   # int64
        creationTimestamp:                                            # k8s.io/kubernetes/pkg/api/unversioned.Time
        deletionTimestamp:                                            # k8s.io/kubernetes/pkg/api/unversioned.Time
        deletionGracePeriodSeconds:                                   # int64
        labels:                                                       # map[string]string
          [string]:                                                   # string
        annotations:                                                  # map[string]string
          [string]:                                                   # string
      userNames:                                                      # []string (all user names directly bound to the role)
      - [string]                                                      #
      groupNames:                                                     # []string (all the groups directly bound to the role)
      - [string]                                                      #
      subjects:                                                       # []k8s.io/kubernetes/pkg/api/v1.ObjectReference (references to subjects bound to the role.  Only User, Group, SystemUser, SystemGroup, and ServiceAccount are allowed.)
      - kind:                                                         # string
        namespace:                                                    # string
        name:                                                         # string
        uid:                                                          # k8s.io/kubernetes/pkg/types.UID
        apiVersion:                                                   # string
        resourceVersion:                                              # string
        fieldPath:                                                    # string
      roleRef:                                                        # k8s.io/kubernetes/pkg/api/v1.ObjectReference (reference to the policy role)
        kind:                                                         # string
        namespace:                                                    # string
        name:                                                         # string
        uid:                                                          # k8s.io/kubernetes/pkg/types.UID
        apiVersion:                                                   # string
        resourceVersion:                                              # string
        fieldPath:                                                    # string

ClusterPolicyList
=================

ClusterPolicyList is a collection of ClusterPolicies

kind: ClusterPolicyList                                               # string
apiVersion: v1                                                        # string
metadata:                                                             # k8s.io/kubernetes/pkg/api/unversioned.ListMeta
  selfLink:                                                           # string
  resourceVersion:                                                    # string
items:                                                                # []github.com/openshift/origin/pkg/authorization/api/v1.ClusterPolicy (list of cluster policies)
- kind:                                                               # string
  apiVersion:                                                         # string
  metadata:                                                           # k8s.io/kubernetes/pkg/api/v1.ObjectMeta
    name:                                                             # string
    generateName:                                                     # string
    namespace:                                                        # string
    selfLink:                                                         # string
    uid:                                                              # k8s.io/kubernetes/pkg/types.UID
    resourceVersion:                                                  # string
    generation:                                                       # int64
    creationTimestamp:                                                # k8s.io/kubernetes/pkg/api/unversioned.Time
    deletionTimestamp:                                                # k8s.io/kubernetes/pkg/api/unversioned.Time
    deletionGracePeriodSeconds:                                       # int64
    labels:                                                           # map[string]string
      [string]:                                                       # string
    annotations:                                                      # map[string]string
      [string]:                                                       # string
  lastModified:                                                       # k8s.io/kubernetes/pkg/api/unversioned.Time (last time any part of the object was created, updated, or deleted)
  roles:                                                              # []github.com/openshift/origin/pkg/authorization/api/v1.NamedClusterRole (all the roles held by this policy, mapped by role name)
  - name:                                                             # string (name of the cluster role)
    role:                                                             # github.com/openshift/origin/pkg/authorization/api/v1.ClusterRole (the cluster role)
      kind:                                                           # string
      apiVersion:                                                     # string
      metadata:                                                       # k8s.io/kubernetes/pkg/api/v1.ObjectMeta
        name:                                                         # string
        generateName:                                                 # string
        namespace:                                                    # string
        selfLink:                                                     # string
        uid:                                                          # k8s.io/kubernetes/pkg/types.UID
        resourceVersion:                                              # string
        generation:                                                   # int64
        creationTimestamp:                                            # k8s.io/kubernetes/pkg/api/unversioned.Time
        deletionTimestamp:                                            # k8s.io/kubernetes/pkg/api/unversioned.Time
        deletionGracePeriodSeconds:                                   # int64
        labels:                                                       # map[string]string
          [string]:                                                   # string
        annotations:                                                  # map[string]string
          [string]:                                                   # string
      rules:                                                          # []github.com/openshift/origin/pkg/authorization/api/v1.PolicyRule (list of policy rules)
      - verbs:                                                        # []string (list of verbs that apply to ALL the resourceKinds and attributeRestrictions contained in this rule.  The verb * represents all kinds.)
        - [string]                                                    #
        attributeRestrictions:                                        # k8s.io/kubernetes/pkg/runtime.RawExtension (vary depending on what the authorizer supports.  If the authorizer does not recognize how to handle the specified value, it should report an error.)
        apiGroups:                                                    # []string (list of API groups this rule applies to.  * represents all API groups.)
        - [string]                                                    #
        resources:                                                    # []string (list of resources this rule applies to.  * represents all resources.)
        - [string]                                                    #
        resourceNames:                                                # []string (optional white list of names that the rule applies to.  An empty set means that everything is allowed.)
        - [string]                                                    #
        nonResourceURLs:                                              # []string (set of partial urls that a user should have access to. *s are allowed, but only as the full, final step in the path.)
        - [string]                                                    #

ClusterRole
===========

ClusterRole is a logical grouping of PolicyRules that can be referenced as a unit by ClusterRoleBindings.

kind: ClusterRole                                                     # string
apiVersion: v1                                                        # string
metadata:                                                             # k8s.io/kubernetes/pkg/api/v1.ObjectMeta
  name:                                                               # string
  generateName:                                                       # string
  namespace:                                                          # string
  selfLink:                                                           # string
  uid:                                                                # k8s.io/kubernetes/pkg/types.UID
  resourceVersion:                                                    # string
  generation:                                                         # int64
  creationTimestamp:                                                  # k8s.io/kubernetes/pkg/api/unversioned.Time
  deletionTimestamp:                                                  # k8s.io/kubernetes/pkg/api/unversioned.Time
  deletionGracePeriodSeconds:                                         # int64
  labels:                                                             # map[string]string
    [string]:                                                         # string
  annotations:                                                        # map[string]string
    [string]:                                                         # string
rules:                                                                # []github.com/openshift/origin/pkg/authorization/api/v1.PolicyRule (list of policy rules)
- verbs:                                                              # []string (list of verbs that apply to ALL the resourceKinds and attributeRestrictions contained in this rule.  The verb * represents all kinds.)
  - [string]                                                          #
  attributeRestrictions:                                              # k8s.io/kubernetes/pkg/runtime.RawExtension (vary depending on what the authorizer supports.  If the authorizer does not recognize how to handle the specified value, it should report an error.)
  apiGroups:                                                          # []string (list of API groups this rule applies to.  * represents all API groups.)
  - [string]                                                          #
  resources:                                                          # []string (list of resources this rule applies to.  * represents all resources.)
  - [string]                                                          #
  resourceNames:                                                      # []string (optional white list of names that the rule applies to.  An empty set means that everything is allowed.)
  - [string]                                                          #
  nonResourceURLs:                                                    # []string (set of partial urls that a user should have access to. *s are allowed, but only as the full, final step in the path.)
  - [string]                                                          #

ClusterRoleBinding
==================

ClusterRoleBinding references a ClusterRole, but not contain it.  It can reference any ClusterRole in the same namespace or in the global namespace.
It adds who information via Users and Groups and namespace information by which namespace it exists in.  ClusterRoleBindings in a given
namespace only have effect in that namespace (excepting the master namespace which has power in all namespaces).

kind: ClusterRoleBinding                                              # string
apiVersion: v1                                                        # string
metadata:                                                             # k8s.io/kubernetes/pkg/api/v1.ObjectMeta
  name:                                                               # string
  generateName:                                                       # string
  namespace:                                                          # string
  selfLink:                                                           # string
  uid:                                                                # k8s.io/kubernetes/pkg/types.UID
  resourceVersion:                                                    # string
  generation:                                                         # int64
  creationTimestamp:                                                  # k8s.io/kubernetes/pkg/api/unversioned.Time
  deletionTimestamp:                                                  # k8s.io/kubernetes/pkg/api/unversioned.Time
  deletionGracePeriodSeconds:                                         # int64
  labels:                                                             # map[string]string
    [string]:                                                         # string
  annotations:                                                        # map[string]string
    [string]:                                                         # string
userNames:                                                            # []string (all user names directly bound to the role)
- [string]                                                            #
groupNames:                                                           # []string (all the groups directly bound to the role)
- [string]                                                            #
subjects:                                                             # []k8s.io/kubernetes/pkg/api/v1.ObjectReference (references to subjects bound to the role.  Only User, Group, SystemUser, SystemGroup, and ServiceAccount are allowed.)
- kind:                                                               # string
  namespace:                                                          # string
  name:                                                               # string
  uid:                                                                # k8s.io/kubernetes/pkg/types.UID
  apiVersion:                                                         # string
  resourceVersion:                                                    # string
  fieldPath:                                                          # string
roleRef:                                                              # k8s.io/kubernetes/pkg/api/v1.ObjectReference (reference to the policy role)
  kind:                                                               # string
  namespace:                                                          # string
  name:                                                               # string
  uid:                                                                # k8s.io/kubernetes/pkg/types.UID
  apiVersion:                                                         # string
  resourceVersion:                                                    # string
  fieldPath:                                                          # string

ClusterRoleBindingList
======================

ClusterRoleBindingList is a collection of ClusterRoleBindings

kind: ClusterRoleBindingList                                          # string
apiVersion: v1                                                        # string
metadata:                                                             # k8s.io/kubernetes/pkg/api/unversioned.ListMeta
  selfLink:                                                           # string
  resourceVersion:                                                    # string
items:                                                                # []github.com/openshift/origin/pkg/authorization/api/v1.ClusterRoleBinding (list of cluster role bindings)
- kind:                                                               # string
  apiVersion:                                                         # string
  metadata:                                                           # k8s.io/kubernetes/pkg/api/v1.ObjectMeta
    name:                                                             # string
    generateName:                                                     # string
    namespace:                                                        # string
    selfLink:                                                         # string
    uid:                                                              # k8s.io/kubernetes/pkg/types.UID
    resourceVersion:                                                  # string
    generation:                                                       # int64
    creationTimestamp:                                                # k8s.io/kubernetes/pkg/api/unversioned.Time
    deletionTimestamp:                                                # k8s.io/kubernetes/pkg/api/unversioned.Time
    deletionGracePeriodSeconds:                                       # int64
    labels:                                                           # map[string]string
      [string]:                                                       # string
    annotations:                                                      # map[string]string
      [string]:                                                       # string
  userNames:                                                          # []string (all user names directly bound to the role)
  - [string]                                                          #
  groupNames:                                                         # []string (all the groups directly bound to the role)
  - [string]                                                          #
  subjects:                                                           # []k8s.io/kubernetes/pkg/api/v1.ObjectReference (references to subjects bound to the role.  Only User, Group, SystemUser, SystemGroup, and ServiceAccount are allowed.)
  - kind:                                                             # string
    namespace:                                                        # string
    name:                                                             # string
    uid:                                                              # k8s.io/kubernetes/pkg/types.UID
    apiVersion:                                                       # string
    resourceVersion:                                                  # string
    fieldPath:                                                        # string
  roleRef:                                                            # k8s.io/kubernetes/pkg/api/v1.ObjectReference (reference to the policy role)
    kind:                                                             # string
    namespace:                                                        # string
    name:                                                             # string
    uid:                                                              # k8s.io/kubernetes/pkg/types.UID
    apiVersion:                                                       # string
    resourceVersion:                                                  # string
    fieldPath:                                                        # string

ClusterRoleList
===============

ClusterRoleList is a collection of ClusterRoles

kind: ClusterRoleList                                                 # string
apiVersion: v1                                                        # string
metadata:                                                             # k8s.io/kubernetes/pkg/api/unversioned.ListMeta
  selfLink:                                                           # string
  resourceVersion:                                                    # string
items:                                                                # []github.com/openshift/origin/pkg/authorization/api/v1.ClusterRole (list of cluster roles)
- kind:                                                               # string
  apiVersion:                                                         # string
  metadata:                                                           # k8s.io/kubernetes/pkg/api/v1.ObjectMeta
    name:                                                             # string
    generateName:                                                     # string
    namespace:                                                        # string
    selfLink:                                                         # string
    uid:                                                              # k8s.io/kubernetes/pkg/types.UID
    resourceVersion:                                                  # string
    generation:                                                       # int64
    creationTimestamp:                                                # k8s.io/kubernetes/pkg/api/unversioned.Time
    deletionTimestamp:                                                # k8s.io/kubernetes/pkg/api/unversioned.Time
    deletionGracePeriodSeconds:                                       # int64
    labels:                                                           # map[string]string
      [string]:                                                       # string
    annotations:                                                      # map[string]string
      [string]:                                                       # string
  rules:                                                              # []github.com/openshift/origin/pkg/authorization/api/v1.PolicyRule (list of policy rules)
  - verbs:                                                            # []string (list of verbs that apply to ALL the resourceKinds and attributeRestrictions contained in this rule.  The verb * represents all kinds.)
    - [string]                                                        #
    attributeRestrictions:                                            # k8s.io/kubernetes/pkg/runtime.RawExtension (vary depending on what the authorizer supports.  If the authorizer does not recognize how to handle the specified value, it should report an error.)
    apiGroups:                                                        # []string (list of API groups this rule applies to.  * represents all API groups.)
    - [string]                                                        #
    resources:                                                        # []string (list of resources this rule applies to.  * represents all resources.)
    - [string]                                                        #
    resourceNames:                                                    # []string (optional white list of names that the rule applies to.  An empty set means that everything is allowed.)
    - [string]                                                        #
    nonResourceURLs:                                                  # []string (set of partial urls that a user should have access to. *s are allowed, but only as the full, final step in the path.)
    - [string]                                                        #

IsPersonalSubjectAccessReview
=============================

IsPersonalSubjectAccessReview is a marker for PolicyRule.AttributeRestrictions that denotes that subjectaccessreviews on self should be allowed

kind: IsPersonalSubjectAccessReview                                   # string
apiVersion: v1                                                        # string

LocalResourceAccessReview
=========================

LocalResourceAccessReview is a means to request a list of which users and groups are authorized to perform the action specified by spec in a particular namespace

kind: LocalResourceAccessReview                                       # string
apiVersion: v1                                                        # string
namespace:                                                            # string (namespace of the action being requested)
verb:                                                                 # string (one of get, list, watch, create, update, delete)
resource:                                                             # string (one of the existing resource types)
resourceName:                                                         # string (name of the resource being requested for a get or delete)
content:                                                              # k8s.io/kubernetes/pkg/runtime.RawExtension (actual content of the request for create and update)

LocalSubjectAccessReview
========================

LocalSubjectAccessReview is an object for requesting information about whether a user or group can perform an action in a particular namespace

kind: LocalSubjectAccessReview                                        # string
apiVersion: v1                                                        # string
namespace:                                                            # string (namespace of the action being requested)
verb:                                                                 # string (one of get, list, watch, create, update, delete)
resource:                                                             # string (one of the existing resource types)
resourceName:                                                         # string (name of the resource being requested for a get or delete)
content:                                                              # k8s.io/kubernetes/pkg/runtime.RawExtension (actual content of the request for create and update)
user:                                                                 # string (optional, if both user and groups are empty, the current authenticated user is used)
groups:                                                               # []string (optional, list of groups to which the user belongs)
- [string]                                                            #

Policy
======

Policy is a object that holds all the Roles for a particular namespace.  There is at most
one Policy document per namespace.

kind: Policy                                                          # string
apiVersion: v1                                                        # string
metadata:                                                             # k8s.io/kubernetes/pkg/api/v1.ObjectMeta
  name:                                                               # string
  generateName:                                                       # string
  namespace:                                                          # string
  selfLink:                                                           # string
  uid:                                                                # k8s.io/kubernetes/pkg/types.UID
  resourceVersion:                                                    # string
  generation:                                                         # int64
  creationTimestamp:                                                  # k8s.io/kubernetes/pkg/api/unversioned.Time
  deletionTimestamp:                                                  # k8s.io/kubernetes/pkg/api/unversioned.Time
  deletionGracePeriodSeconds:                                         # int64
  labels:                                                             # map[string]string
    [string]:                                                         # string
  annotations:                                                        # map[string]string
    [string]:                                                         # string
lastModified:                                                         # k8s.io/kubernetes/pkg/api/unversioned.Time (last time that any part of the policy was created, updated, or deleted)
roles:                                                                # []github.com/openshift/origin/pkg/authorization/api/v1.NamedRole (roles held by this policy)
- name:                                                               # string (name of the role)
  role:                                                               # github.com/openshift/origin/pkg/authorization/api/v1.Role (the role)
    kind:                                                             # string
    apiVersion:                                                       # string
    metadata:                                                         # k8s.io/kubernetes/pkg/api/v1.ObjectMeta
      name:                                                           # string
      generateName:                                                   # string
      namespace:                                                      # string
      selfLink:                                                       # string
      uid:                                                            # k8s.io/kubernetes/pkg/types.UID
      resourceVersion:                                                # string
      generation:                                                     # int64
      creationTimestamp:                                              # k8s.io/kubernetes/pkg/api/unversioned.Time
      deletionTimestamp:                                              # k8s.io/kubernetes/pkg/api/unversioned.Time
      deletionGracePeriodSeconds:                                     # int64
      labels:                                                         # map[string]string
        [string]:                                                     # string
      annotations:                                                    # map[string]string
        [string]:                                                     # string
    rules:                                                            # []github.com/openshift/origin/pkg/authorization/api/v1.PolicyRule (all the rules for this role)
    - verbs:                                                          # []string (list of verbs that apply to ALL the resourceKinds and attributeRestrictions contained in this rule.  The verb * represents all kinds.)
      - [string]                                                      #
      attributeRestrictions:                                          # k8s.io/kubernetes/pkg/runtime.RawExtension (vary depending on what the authorizer supports.  If the authorizer does not recognize how to handle the specified value, it should report an error.)
      apiGroups:                                                      # []string (list of API groups this rule applies to.  * represents all API groups.)
      - [string]                                                      #
      resources:                                                      # []string (list of resources this rule applies to.  * represents all resources.)
      - [string]                                                      #
      resourceNames:                                                  # []string (optional white list of names that the rule applies to.  An empty set means that everything is allowed.)
      - [string]                                                      #
      nonResourceURLs:                                                # []string (set of partial urls that a user should have access to. *s are allowed, but only as the full, final step in the path.)
      - [string]                                                      #

PolicyBinding
=============

PolicyBinding is a object that holds all the RoleBindings for a particular namespace.  There is
one PolicyBinding document per referenced Policy namespace

kind: PolicyBinding                                                   # string
apiVersion: v1                                                        # string
metadata:                                                             # k8s.io/kubernetes/pkg/api/v1.ObjectMeta
  name:                                                               # string
  generateName:                                                       # string
  namespace:                                                          # string
  selfLink:                                                           # string
  uid:                                                                # k8s.io/kubernetes/pkg/types.UID
  resourceVersion:                                                    # string
  generation:                                                         # int64
  creationTimestamp:                                                  # k8s.io/kubernetes/pkg/api/unversioned.Time
  deletionTimestamp:                                                  # k8s.io/kubernetes/pkg/api/unversioned.Time
  deletionGracePeriodSeconds:                                         # int64
  labels:                                                             # map[string]string
    [string]:                                                         # string
  annotations:                                                        # map[string]string
    [string]:                                                         # string
lastModified:                                                         # k8s.io/kubernetes/pkg/api/unversioned.Time (last time that any part of the object was created, updated, or deleted)
policyRef:                                                            # k8s.io/kubernetes/pkg/api/v1.ObjectReference (reference to the policy that contains all the Roles that this object's roleBindings may reference)
  kind:                                                               # string
  namespace:                                                          # string
  name:                                                               # string
  uid:                                                                # k8s.io/kubernetes/pkg/types.UID
  apiVersion:                                                         # string
  resourceVersion:                                                    # string
  fieldPath:                                                          # string
roleBindings:                                                         # []github.com/openshift/origin/pkg/authorization/api/v1.NamedRoleBinding (all roleBindings held by this policyBinding)
- name:                                                               # string (name of the roleBinding)
  roleBinding:                                                        # github.com/openshift/origin/pkg/authorization/api/v1.RoleBinding (the roleBinding)
    kind:                                                             # string
    apiVersion:                                                       # string
    metadata:                                                         # k8s.io/kubernetes/pkg/api/v1.ObjectMeta
      name:                                                           # string
      generateName:                                                   # string
      namespace:                                                      # string
      selfLink:                                                       # string
      uid:                                                            # k8s.io/kubernetes/pkg/types.UID
      resourceVersion:                                                # string
      generation:                                                     # int64
      creationTimestamp:                                              # k8s.io/kubernetes/pkg/api/unversioned.Time
      deletionTimestamp:                                              # k8s.io/kubernetes/pkg/api/unversioned.Time
      deletionGracePeriodSeconds:                                     # int64
      labels:                                                         # map[string]string
        [string]:                                                     # string
      annotations:                                                    # map[string]string
        [string]:                                                     # string
    userNames:                                                        # []string (all the usernames directly bound to the role)
    - [string]                                                        #
    groupNames:                                                       # []string (all the groups directly bound to the role)
    - [string]                                                        #
    subjects:                                                         # []k8s.io/kubernetes/pkg/api/v1.ObjectReference (references to subjects bound to the role.  Only User, Group, SystemUser, SystemGroup, and ServiceAccount are allowed.)
    - kind:                                                           # string
      namespace:                                                      # string
      name:                                                           # string
      uid:                                                            # k8s.io/kubernetes/pkg/types.UID
      apiVersion:                                                     # string
      resourceVersion:                                                # string
      fieldPath:                                                      # string
    roleRef:                                                          # k8s.io/kubernetes/pkg/api/v1.ObjectReference (a reference to a role)
      kind:                                                           # string
      namespace:                                                      # string
      name:                                                           # string
      uid:                                                            # k8s.io/kubernetes/pkg/types.UID
      apiVersion:                                                     # string
      resourceVersion:                                                # string
      fieldPath:                                                      # string

PolicyBindingList
=================

PolicyBindingList is a collection of PolicyBindings

kind: PolicyBindingList                                               # string
apiVersion: v1                                                        # string
metadata:                                                             # k8s.io/kubernetes/pkg/api/unversioned.ListMeta
  selfLink:                                                           # string
  resourceVersion:                                                    # string
items:                                                                # []github.com/openshift/origin/pkg/authorization/api/v1.PolicyBinding (list of policy bindings)
- kind:                                                               # string
  apiVersion:                                                         # string
  metadata:                                                           # k8s.io/kubernetes/pkg/api/v1.ObjectMeta
    name:                                                             # string
    generateName:                                                     # string
    namespace:                                                        # string
    selfLink:                                                         # string
    uid:                                                              # k8s.io/kubernetes/pkg/types.UID
    resourceVersion:                                                  # string
    generation:                                                       # int64
    creationTimestamp:                                                # k8s.io/kubernetes/pkg/api/unversioned.Time
    deletionTimestamp:                                                # k8s.io/kubernetes/pkg/api/unversioned.Time
    deletionGracePeriodSeconds:                                       # int64
    labels:                                                           # map[string]string
      [string]:                                                       # string
    annotations:                                                      # map[string]string
      [string]:                                                       # string
  lastModified:                                                       # k8s.io/kubernetes/pkg/api/unversioned.Time (last time that any part of the object was created, updated, or deleted)
  policyRef:                                                          # k8s.io/kubernetes/pkg/api/v1.ObjectReference (reference to the policy that contains all the Roles that this object's roleBindings may reference)
    kind:                                                             # string
    namespace:                                                        # string
    name:                                                             # string
    uid:                                                              # k8s.io/kubernetes/pkg/types.UID
    apiVersion:                                                       # string
    resourceVersion:                                                  # string
    fieldPath:                                                        # string
  roleBindings:                                                       # []github.com/openshift/origin/pkg/authorization/api/v1.NamedRoleBinding (all roleBindings held by this policyBinding)
  - name:                                                             # string (name of the roleBinding)
    roleBinding:                                                      # github.com/openshift/origin/pkg/authorization/api/v1.RoleBinding (the roleBinding)
      kind:                                                           # string
      apiVersion:                                                     # string
      metadata:                                                       # k8s.io/kubernetes/pkg/api/v1.ObjectMeta
        name:                                                         # string
        generateName:                                                 # string
        namespace:                                                    # string
        selfLink:                                                     # string
        uid:                                                          # k8s.io/kubernetes/pkg/types.UID
        resourceVersion:                                              # string
        generation:                                                   # int64
        creationTimestamp:                                            # k8s.io/kubernetes/pkg/api/unversioned.Time
        deletionTimestamp:                                            # k8s.io/kubernetes/pkg/api/unversioned.Time
        deletionGracePeriodSeconds:                                   # int64
        labels:                                                       # map[string]string
          [string]:                                                   # string
        annotations:                                                  # map[string]string
          [string]:                                                   # string
      userNames:                                                      # []string (all the usernames directly bound to the role)
      - [string]                                                      #
      groupNames:                                                     # []string (all the groups directly bound to the role)
      - [string]                                                      #
      subjects:                                                       # []k8s.io/kubernetes/pkg/api/v1.ObjectReference (references to subjects bound to the role.  Only User, Group, SystemUser, SystemGroup, and ServiceAccount are allowed.)
      - kind:                                                         # string
        namespace:                                                    # string
        name:                                                         # string
        uid:                                                          # k8s.io/kubernetes/pkg/types.UID
        apiVersion:                                                   # string
        resourceVersion:                                              # string
        fieldPath:                                                    # string
      roleRef:                                                        # k8s.io/kubernetes/pkg/api/v1.ObjectReference (a reference to a role)
        kind:                                                         # string
        namespace:                                                    # string
        name:                                                         # string
        uid:                                                          # k8s.io/kubernetes/pkg/types.UID
        apiVersion:                                                   # string
        resourceVersion:                                              # string
        fieldPath:                                                    # string

PolicyList
==========

PolicyList is a collection of Policies

kind: PolicyList                                                      # string
apiVersion: v1                                                        # string
metadata:                                                             # k8s.io/kubernetes/pkg/api/unversioned.ListMeta
  selfLink:                                                           # string
  resourceVersion:                                                    # string
items:                                                                # []github.com/openshift/origin/pkg/authorization/api/v1.Policy (list of policies)
- kind:                                                               # string
  apiVersion:                                                         # string
  metadata:                                                           # k8s.io/kubernetes/pkg/api/v1.ObjectMeta
    name:                                                             # string
    generateName:                                                     # string
    namespace:                                                        # string
    selfLink:                                                         # string
    uid:                                                              # k8s.io/kubernetes/pkg/types.UID
    resourceVersion:                                                  # string
    generation:                                                       # int64
    creationTimestamp:                                                # k8s.io/kubernetes/pkg/api/unversioned.Time
    deletionTimestamp:                                                # k8s.io/kubernetes/pkg/api/unversioned.Time
    deletionGracePeriodSeconds:                                       # int64
    labels:                                                           # map[string]string
      [string]:                                                       # string
    annotations:                                                      # map[string]string
      [string]:                                                       # string
  lastModified:                                                       # k8s.io/kubernetes/pkg/api/unversioned.Time (last time that any part of the policy was created, updated, or deleted)
  roles:                                                              # []github.com/openshift/origin/pkg/authorization/api/v1.NamedRole (roles held by this policy)
  - name:                                                             # string (name of the role)
    role:                                                             # github.com/openshift/origin/pkg/authorization/api/v1.Role (the role)
      kind:                                                           # string
      apiVersion:                                                     # string
      metadata:                                                       # k8s.io/kubernetes/pkg/api/v1.ObjectMeta
        name:                                                         # string
        generateName:                                                 # string
        namespace:                                                    # string
        selfLink:                                                     # string
        uid:                                                          # k8s.io/kubernetes/pkg/types.UID
        resourceVersion:                                              # string
        generation:                                                   # int64
        creationTimestamp:                                            # k8s.io/kubernetes/pkg/api/unversioned.Time
        deletionTimestamp:                                            # k8s.io/kubernetes/pkg/api/unversioned.Time
        deletionGracePeriodSeconds:                                   # int64
        labels:                                                       # map[string]string
          [string]:                                                   # string
        annotations:                                                  # map[string]string
          [string]:                                                   # string
      rules:                                                          # []github.com/openshift/origin/pkg/authorization/api/v1.PolicyRule (all the rules for this role)
      - verbs:                                                        # []string (list of verbs that apply to ALL the resourceKinds and attributeRestrictions contained in this rule.  The verb * represents all kinds.)
        - [string]                                                    #
        attributeRestrictions:                                        # k8s.io/kubernetes/pkg/runtime.RawExtension (vary depending on what the authorizer supports.  If the authorizer does not recognize how to handle the specified value, it should report an error.)
        apiGroups:                                                    # []string (list of API groups this rule applies to.  * represents all API groups.)
        - [string]                                                    #
        resources:                                                    # []string (list of resources this rule applies to.  * represents all resources.)
        - [string]                                                    #
        resourceNames:                                                # []string (optional white list of names that the rule applies to.  An empty set means that everything is allowed.)
        - [string]                                                    #
        nonResourceURLs:                                              # []string (set of partial urls that a user should have access to. *s are allowed, but only as the full, final step in the path.)
        - [string]                                                    #

ResourceAccessReview
====================

ResourceAccessReview is a means to request a list of which users and groups are authorized to perform the
action specified by spec

kind: ResourceAccessReview                                            # string
apiVersion: v1                                                        # string
namespace:                                                            # string (namespace of the action being requested)
verb:                                                                 # string (one of get, list, watch, create, update, delete)
resource:                                                             # string (one of the existing resource types)
resourceName:                                                         # string (name of the resource being requested for a get or delete)
content:                                                              # k8s.io/kubernetes/pkg/runtime.RawExtension (actual content of the request for create and update)

ResourceAccessReviewResponse
============================

ResourceAccessReviewResponse describes who can perform the action

kind: ResourceAccessReviewResponse                                    # string
apiVersion: v1                                                        # string
namespace:                                                            # string (namespace used for the access review)
users:                                                                # []string (list of users who can perform the action)
- [string]                                                            #
groups:                                                               # []string (list of groups who can perform the action)
- [string]                                                            #

Role
====

Role is a logical grouping of PolicyRules that can be referenced as a unit by RoleBindings.

kind: Role                                                            # string
apiVersion: v1                                                        # string
metadata:                                                             # k8s.io/kubernetes/pkg/api/v1.ObjectMeta
  name:                                                               # string
  generateName:                                                       # string
  namespace:                                                          # string
  selfLink:                                                           # string
  uid:                                                                # k8s.io/kubernetes/pkg/types.UID
  resourceVersion:                                                    # string
  generation:                                                         # int64
  creationTimestamp:                                                  # k8s.io/kubernetes/pkg/api/unversioned.Time
  deletionTimestamp:                                                  # k8s.io/kubernetes/pkg/api/unversioned.Time
  deletionGracePeriodSeconds:                                         # int64
  labels:                                                             # map[string]string
    [string]:                                                         # string
  annotations:                                                        # map[string]string
    [string]:                                                         # string
rules:                                                                # []github.com/openshift/origin/pkg/authorization/api/v1.PolicyRule (all the rules for this role)
- verbs:                                                              # []string (list of verbs that apply to ALL the resourceKinds and attributeRestrictions contained in this rule.  The verb * represents all kinds.)
  - [string]                                                          #
  attributeRestrictions:                                              # k8s.io/kubernetes/pkg/runtime.RawExtension (vary depending on what the authorizer supports.  If the authorizer does not recognize how to handle the specified value, it should report an error.)
  apiGroups:                                                          # []string (list of API groups this rule applies to.  * represents all API groups.)
  - [string]                                                          #
  resources:                                                          # []string (list of resources this rule applies to.  * represents all resources.)
  - [string]                                                          #
  resourceNames:                                                      # []string (optional white list of names that the rule applies to.  An empty set means that everything is allowed.)
  - [string]                                                          #
  nonResourceURLs:                                                    # []string (set of partial urls that a user should have access to. *s are allowed, but only as the full, final step in the path.)
  - [string]                                                          #

RoleBinding
===========

RoleBinding references a Role, but not contain it.  It can reference any Role in the same namespace or in the global namespace.
It adds who information via Users and Groups and namespace information by which namespace it exists in.  RoleBindings in a given
namespace only have effect in that namespace (excepting the master namespace which has power in all namespaces).

kind: RoleBinding                                                     # string
apiVersion: v1                                                        # string
metadata:                                                             # k8s.io/kubernetes/pkg/api/v1.ObjectMeta
  name:                                                               # string
  generateName:                                                       # string
  namespace:                                                          # string
  selfLink:                                                           # string
  uid:                                                                # k8s.io/kubernetes/pkg/types.UID
  resourceVersion:                                                    # string
  generation:                                                         # int64
  creationTimestamp:                                                  # k8s.io/kubernetes/pkg/api/unversioned.Time
  deletionTimestamp:                                                  # k8s.io/kubernetes/pkg/api/unversioned.Time
  deletionGracePeriodSeconds:                                         # int64
  labels:                                                             # map[string]string
    [string]:                                                         # string
  annotations:                                                        # map[string]string
    [string]:                                                         # string
userNames:                                                            # []string (all the usernames directly bound to the role)
- [string]                                                            #
groupNames:                                                           # []string (all the groups directly bound to the role)
- [string]                                                            #
subjects:                                                             # []k8s.io/kubernetes/pkg/api/v1.ObjectReference (references to subjects bound to the role.  Only User, Group, SystemUser, SystemGroup, and ServiceAccount are allowed.)
- kind:                                                               # string
  namespace:                                                          # string
  name:                                                               # string
  uid:                                                                # k8s.io/kubernetes/pkg/types.UID
  apiVersion:                                                         # string
  resourceVersion:                                                    # string
  fieldPath:                                                          # string
roleRef:                                                              # k8s.io/kubernetes/pkg/api/v1.ObjectReference (a reference to a role)
  kind:                                                               # string
  namespace:                                                          # string
  name:                                                               # string
  uid:                                                                # k8s.io/kubernetes/pkg/types.UID
  apiVersion:                                                         # string
  resourceVersion:                                                    # string
  fieldPath:                                                          # string

RoleBindingList
===============

RoleBindingList is a collection of RoleBindings

kind: RoleBindingList                                                 # string
apiVersion: v1                                                        # string
metadata:                                                             # k8s.io/kubernetes/pkg/api/unversioned.ListMeta
  selfLink:                                                           # string
  resourceVersion:                                                    # string
items:                                                                # []github.com/openshift/origin/pkg/authorization/api/v1.RoleBinding (list of role bindings)
- kind:                                                               # string
  apiVersion:                                                         # string
  metadata:                                                           # k8s.io/kubernetes/pkg/api/v1.ObjectMeta
    name:                                                             # string
    generateName:                                                     # string
    namespace:                                                        # string
    selfLink:                                                         # string
    uid:                                                              # k8s.io/kubernetes/pkg/types.UID
    resourceVersion:                                                  # string
    generation:                                                       # int64
    creationTimestamp:                                                # k8s.io/kubernetes/pkg/api/unversioned.Time
    deletionTimestamp:                                                # k8s.io/kubernetes/pkg/api/unversioned.Time
    deletionGracePeriodSeconds:                                       # int64
    labels:                                                           # map[string]string
      [string]:                                                       # string
    annotations:                                                      # map[string]string
      [string]:                                                       # string
  userNames:                                                          # []string (all the usernames directly bound to the role)
  - [string]                                                          #
  groupNames:                                                         # []string (all the groups directly bound to the role)
  - [string]                                                          #
  subjects:                                                           # []k8s.io/kubernetes/pkg/api/v1.ObjectReference (references to subjects bound to the role.  Only User, Group, SystemUser, SystemGroup, and ServiceAccount are allowed.)
  - kind:                                                             # string
    namespace:                                                        # string
    name:                                                             # string
    uid:                                                              # k8s.io/kubernetes/pkg/types.UID
    apiVersion:                                                       # string
    resourceVersion:                                                  # string
    fieldPath:                                                        # string
  roleRef:                                                            # k8s.io/kubernetes/pkg/api/v1.ObjectReference (a reference to a role)
    kind:                                                             # string
    namespace:                                                        # string
    name:                                                             # string
    uid:                                                              # k8s.io/kubernetes/pkg/types.UID
    apiVersion:                                                       # string
    resourceVersion:                                                  # string
    fieldPath:                                                        # string

RoleList
========

RoleList is a collection of Roles

kind: RoleList                                                        # string
apiVersion: v1                                                        # string
metadata:                                                             # k8s.io/kubernetes/pkg/api/unversioned.ListMeta
  selfLink:                                                           # string
  resourceVersion:                                                    # string
items:                                                                # []github.com/openshift/origin/pkg/authorization/api/v1.Role (list of roles)
- kind:                                                               # string
  apiVersion:                                                         # string
  metadata:                                                           # k8s.io/kubernetes/pkg/api/v1.ObjectMeta
    name:                                                             # string
    generateName:                                                     # string
    namespace:                                                        # string
    selfLink:                                                         # string
    uid:                                                              # k8s.io/kubernetes/pkg/types.UID
    resourceVersion:                                                  # string
    generation:                                                       # int64
    creationTimestamp:                                                # k8s.io/kubernetes/pkg/api/unversioned.Time
    deletionTimestamp:                                                # k8s.io/kubernetes/pkg/api/unversioned.Time
    deletionGracePeriodSeconds:                                       # int64
    labels:                                                           # map[string]string
      [string]:                                                       # string
    annotations:                                                      # map[string]string
      [string]:                                                       # string
  rules:                                                              # []github.com/openshift/origin/pkg/authorization/api/v1.PolicyRule (all the rules for this role)
  - verbs:                                                            # []string (list of verbs that apply to ALL the resourceKinds and attributeRestrictions contained in this rule.  The verb * represents all kinds.)
    - [string]                                                        #
    attributeRestrictions:                                            # k8s.io/kubernetes/pkg/runtime.RawExtension (vary depending on what the authorizer supports.  If the authorizer does not recognize how to handle the specified value, it should report an error.)
    apiGroups:                                                        # []string (list of API groups this rule applies to.  * represents all API groups.)
    - [string]                                                        #
    resources:                                                        # []string (list of resources this rule applies to.  * represents all resources.)
    - [string]                                                        #
    resourceNames:                                                    # []string (optional white list of names that the rule applies to.  An empty set means that everything is allowed.)
    - [string]                                                        #
    nonResourceURLs:                                                  # []string (set of partial urls that a user should have access to. *s are allowed, but only as the full, final step in the path.)
    - [string]                                                        #

SubjectAccessReview
===================

SubjectAccessReview is an object for requesting information about whether a user or group can perform an action

kind: SubjectAccessReview                                             # string
apiVersion: v1                                                        # string
namespace:                                                            # string (namespace of the action being requested)
verb:                                                                 # string (one of get, list, watch, create, update, delete)
resource:                                                             # string (one of the existing resource types)
resourceName:                                                         # string (name of the resource being requested for a get or delete)
content:                                                              # k8s.io/kubernetes/pkg/runtime.RawExtension (actual content of the request for create and update)
user:                                                                 # string (optional, if both user and groups are empty, the current authenticated user is used)
groups:                                                               # []string (optional, list of groups to which the user belongs)
- [string]                                                            #

SubjectAccessReviewResponse
===========================

SubjectAccessReviewResponse describes whether or not a user or group can perform an action

kind: SubjectAccessReviewResponse                                     # string
apiVersion: v1                                                        # string
namespace:                                                            # string (the namespace used for the access review)
allowed:                                                              # bool (true if the action would be allowed, false otherwise)
reason:                                                               # string (reason is optional, it indicates why a request was allowed or denied)

BinaryBuildRequestOptions
=========================


kind: BinaryBuildRequestOptions                                       # string
apiVersion: v1                                                        # string
metadata:                                                             # k8s.io/kubernetes/pkg/api/v1.ObjectMeta
  name:                                                               # string
  generateName:                                                       # string
  namespace:                                                          # string
  selfLink:                                                           # string
  uid:                                                                # k8s.io/kubernetes/pkg/types.UID
  resourceVersion:                                                    # string
  generation:                                                         # int64
  creationTimestamp:                                                  # k8s.io/kubernetes/pkg/api/unversioned.Time
  deletionTimestamp:                                                  # k8s.io/kubernetes/pkg/api/unversioned.Time
  deletionGracePeriodSeconds:                                         # int64
  labels:                                                             # map[string]string
    [string]:                                                         # string
  annotations:                                                        # map[string]string
    [string]:                                                         # string
asFile:                                                               # string (If set, the binary should be created as a file within the source rather than extracted as an archive)
revision.commit:                                                      # string (string identifying a specific commit)
revision.message:                                                     # string (description of a specific commit)
revision.authorName:                                                  # string (name of the user who authored the commit)
revision.authorEmail:                                                 # string (e-mail of the user who authored the commit)
revision.committerName:                                               # string (name of the user who added the commit)
revision.committerEmail:                                              # string (e-mail of the user who added the commit)

Build
=====

Build encapsulates the inputs needed to produce a new deployable image, as well as
the status of the execution and a reference to the Pod which executed the build.

kind: Build                                                           # string
apiVersion: v1                                                        # string
metadata:                                                             # k8s.io/kubernetes/pkg/api/v1.ObjectMeta
  name:                                                               # string
  generateName:                                                       # string
  namespace:                                                          # string
  selfLink:                                                           # string
  uid:                                                                # k8s.io/kubernetes/pkg/types.UID
  resourceVersion:                                                    # string
  generation:                                                         # int64
  creationTimestamp:                                                  # k8s.io/kubernetes/pkg/api/unversioned.Time
  deletionTimestamp:                                                  # k8s.io/kubernetes/pkg/api/unversioned.Time
  deletionGracePeriodSeconds:                                         # int64
  labels:                                                             # map[string]string
    [string]:                                                         # string
  annotations:                                                        # map[string]string
    [string]:                                                         # string
spec:                                                                 # github.com/openshift/origin/pkg/build/api/v1.BuildSpec (specification of the desired behavior for a build)
  serviceAccount:                                                     # string (the name of the service account to use to run pods created by the build, pod will be allowed to use secrets referenced by the service account)
  source:                                                             # github.com/openshift/origin/pkg/build/api/v1.BuildSource (describes the source control management system in use)
    type: Binary | Dockerfile | Git                                   # github.com/openshift/origin/pkg/build/api/v1.BuildSourceType (type of build input to accept)
    binary:                                                           # github.com/openshift/origin/pkg/build/api/v1.BinaryBuildSource (the binary will be provided by the builder as an archive or file to be placed within the input directory; allows Dockerfile to be optionally set; may not be set with git source type also set)
      asFile:                                                         # string (indicate the provided binary should be considered a single file placed within the root of the input; must be a valid filename with no path segments)
    dockerfile:                                                       # string (the contents of a Dockerfile to build; FROM may be overridden by your strategy source, and additional ENV from your strategy will be placed before the rest of the Dockerfile stanzas)
    git:                                                              # github.com/openshift/origin/pkg/build/api/v1.GitBuildSource (optional information about git build source)
      uri:                                                            # string (points to the source that will be built, structure of the source will depend on the type of build to run)
      ref:                                                            # string (identifies the branch/tag/ref to build)
      httpProxy:                                                      # string (specifies a http proxy to be used during git clone operations)
      httpsProxy:                                                     # string (specifies a https proxy to be used during git clone operations)
    contextDir:                                                       # string (specifies sub-directory where the source code for the application exists, allows for sources to be built from a directory other than the root of a repository)
    sourceSecret:                                                     # k8s.io/kubernetes/pkg/api/v1.LocalObjectReference (supported auth methods are: ssh-privatekey)
      name:                                                           # string
  revision:                                                           # github.com/openshift/origin/pkg/build/api/v1.SourceRevision (specific revision in the source repository)
    type: Binary | Dockerfile | Git                                   # github.com/openshift/origin/pkg/build/api/v1.BuildSourceType (type of the build source)
    git:                                                              # github.com/openshift/origin/pkg/build/api/v1.GitSourceRevision (information about git-based build source)
      commit:                                                         # string (hash identifying a specific commit)
      author:                                                         # github.com/openshift/origin/pkg/build/api/v1.SourceControlUser (author of a specific commit)
        name:                                                         # string (name of the source control user)
        email:                                                        # string (e-mail of the source control user)
      committer:                                                      # github.com/openshift/origin/pkg/build/api/v1.SourceControlUser (committer of a specific commit)
        name:                                                         # string (name of the source control user)
        email:                                                        # string (e-mail of the source control user)
      message:                                                        # string (description of a specific commit)
  strategy:                                                           # github.com/openshift/origin/pkg/build/api/v1.BuildStrategy (defines how to perform a build)
    type: Custom | Docker | Source                                    # github.com/openshift/origin/pkg/build/api/v1.BuildStrategyType (identifies the type of build strategy)
    dockerStrategy:                                                   # github.com/openshift/origin/pkg/build/api/v1.DockerBuildStrategy (holds parameters for the Docker build strategy)
      from:                                                           # k8s.io/kubernetes/pkg/api/v1.ObjectReference (reference to image stream, image stream tag, or image stream image from which docker image should be pulled, resulting image will be used in the FROM line for the Dockerfile for this build)
        kind:                                                         # string
        namespace:                                                    # string
        name:                                                         # string
        uid:                                                          # k8s.io/kubernetes/pkg/types.UID
        apiVersion:                                                   # string
        resourceVersion:                                              # string
        fieldPath:                                                    # string
      pullSecret:                                                     # k8s.io/kubernetes/pkg/api/v1.LocalObjectReference (supported type: dockercfg)
        name:                                                         # string
      noCache:                                                        # bool (if true, indicates that the Docker build must be executed with the --no-cache=true flag)
      env:                                                            # []k8s.io/kubernetes/pkg/api/v1.EnvVar (additional environment variables you want to pass into a builder container)
      - name:                                                         # string
        value:                                                        # string
        valueFrom:                                                    # k8s.io/kubernetes/pkg/api/v1.EnvVarSource
          fieldRef:                                                   # k8s.io/kubernetes/pkg/api/v1.ObjectFieldSelector
            apiVersion:                                               # string
            fieldPath:                                                # string
      forcePull:                                                      # bool (forces the source build to pull the image if true)
      dockerfilePath:                                                 # string (path of the Dockerfile to use for building the Docker image, relative to the contextDir, if set)
    sourceStrategy:                                                   # github.com/openshift/origin/pkg/build/api/v1.SourceBuildStrategy (holds parameters to the Source build strategy)
      from:                                                           # k8s.io/kubernetes/pkg/api/v1.ObjectReference (reference to an image stream, image stream tag, or image stream image from which the Docker image should be pulled)
        kind:                                                         # string
        namespace:                                                    # string
        name:                                                         # string
        uid:                                                          # k8s.io/kubernetes/pkg/types.UID
        apiVersion:                                                   # string
        resourceVersion:                                              # string
        fieldPath:                                                    # string
      pullSecret:                                                     # k8s.io/kubernetes/pkg/api/v1.LocalObjectReference (supported type: dockercfg)
        name:                                                         # string
      env:                                                            # []k8s.io/kubernetes/pkg/api/v1.EnvVar (additional environment variables you want to pass into a builder container)
      - name:                                                         # string
        value:                                                        # string
        valueFrom:                                                    # k8s.io/kubernetes/pkg/api/v1.EnvVarSource
          fieldRef:                                                   # k8s.io/kubernetes/pkg/api/v1.ObjectFieldSelector
            apiVersion:                                               # string
            fieldPath:                                                # string
      scripts:                                                        # string (location of the source scripts)
      incremental:                                                    # bool (forces the source build to do incremental builds if true)
      forcePull:                                                      # bool (forces the source build to pull the image if true)
    customStrategy:                                                   # github.com/openshift/origin/pkg/build/api/v1.CustomBuildStrategy (holds parameters to the Custom build strategy)
      from:                                                           # k8s.io/kubernetes/pkg/api/v1.ObjectReference (reference to an image stream, image stream tag, or image stream image from which the Docker image should be pulled)
        kind:                                                         # string
        namespace:                                                    # string
        name:                                                         # string
        uid:                                                          # k8s.io/kubernetes/pkg/types.UID
        apiVersion:                                                   # string
        resourceVersion:                                              # string
        fieldPath:                                                    # string
      pullSecret:                                                     # k8s.io/kubernetes/pkg/api/v1.LocalObjectReference (supported type: dockercfg)
        name:                                                         # string
      env:                                                            # []k8s.io/kubernetes/pkg/api/v1.EnvVar (additional environment variables you want to pass into a builder container)
      - name:                                                         # string
        value:                                                        # string
        valueFrom:                                                    # k8s.io/kubernetes/pkg/api/v1.EnvVarSource
          fieldRef:                                                   # k8s.io/kubernetes/pkg/api/v1.ObjectFieldSelector
            apiVersion:                                               # string
            fieldPath:                                                # string
      exposeDockerSocket:                                             # bool (allow running Docker commands (and build Docker images) from inside the container)
      forcePull:                                                      # bool (forces pulling of builder image from remote registry if true)
      secrets:                                                        # []github.com/openshift/origin/pkg/build/api/v1.SecretSpec (a list of secrets to include in the build pod in addition to pull, push and source secrets)
      - secretSource:                                                 # k8s.io/kubernetes/pkg/api/v1.LocalObjectReference (a reference to a secret)
          name:                                                       # string
        mountPath:                                                    # string (path within the container at which the secret should be mounted)
  output:                                                             # github.com/openshift/origin/pkg/build/api/v1.BuildOutput (describes the output of a build that a strategy should produce)
    to:                                                               # k8s.io/kubernetes/pkg/api/v1.ObjectReference (The optional image stream to push the output of this build.  The namespace may be empty, in which case, the image stream will be looked up based on the namespace of the build.)
      kind:                                                           # string
      namespace:                                                      # string
      name:                                                           # string
      uid:                                                            # k8s.io/kubernetes/pkg/types.UID
      apiVersion:                                                     # string
      resourceVersion:                                                # string
      fieldPath:                                                      # string
    pushSecret:                                                       # k8s.io/kubernetes/pkg/api/v1.LocalObjectReference (supported type: dockercfg)
      name:                                                           # string
  resources:                                                          # k8s.io/kubernetes/pkg/api/v1.ResourceRequirements (the desired compute resources the build should have)
    limits:                                                           # k8s.io/kubernetes/pkg/api/v1.ResourceList
      [k8s.io/kubernetes/pkg/api/v1.ResourceName]:                    # k8s.io/kubernetes/pkg/api/resource.Quantity
    requests:                                                         # k8s.io/kubernetes/pkg/api/v1.ResourceList
      [k8s.io/kubernetes/pkg/api/v1.ResourceName]:                    # k8s.io/kubernetes/pkg/api/resource.Quantity
  completionDeadlineSeconds:                                          # int64 (optional duration in seconds the build may be active on a node before the system will actively try to mark it failed and kill associated containers; value must be a positive integer)
status:                                                               # github.com/openshift/origin/pkg/build/api/v1.BuildStatus (most recently observed status of a build as populated by the system)
  phase: Cancelled | Complete | Error | Failed | New | Pending | Running # github.com/openshift/origin/pkg/build/api/v1.BuildPhase (observed point in the build lifecycle)
  cancelled:                                                          # bool (describes if a cancel event was triggered for the build)
  reason:                                                             # github.com/openshift/origin/pkg/build/api/v1.StatusReason (brief CamelCase string describing a failure, meant for machine parsing and tidy display in the CLI)
  message:                                                            # string (human-readable message indicating details about why the build has this status)
  startTimestamp:                                                     # k8s.io/kubernetes/pkg/api/unversioned.Time (server time when this build started running in a pod)
  completionTimestamp:                                                # k8s.io/kubernetes/pkg/api/unversioned.Time (server time when the pod running this build stopped running)
  duration: 1 | 1000 | 1000000 | 1000000000 | 3600000000000 | 60000000000 # time.Duration (amount of time the build has been running)
  outputDockerImageReference:                                         # string (reference to the Docker image built by this build, computed from build.spec.output.to, and can be used to push and pull the image)
  config:                                                             # k8s.io/kubernetes/pkg/api/v1.ObjectReference (reference to build config from which this build was derived)
    kind:                                                             # string
    namespace:                                                        # string
    name:                                                             # string
    uid:                                                              # k8s.io/kubernetes/pkg/types.UID
    apiVersion:                                                       # string
    resourceVersion:                                                  # string
    fieldPath:                                                        # string

BuildConfig
===========

BuildConfig is a template which can be used to create new builds.

kind: BuildConfig                                                     # string
apiVersion: v1                                                        # string
metadata:                                                             # k8s.io/kubernetes/pkg/api/v1.ObjectMeta
  name:                                                               # string
  generateName:                                                       # string
  namespace:                                                          # string
  selfLink:                                                           # string
  uid:                                                                # k8s.io/kubernetes/pkg/types.UID
  resourceVersion:                                                    # string
  generation:                                                         # int64
  creationTimestamp:                                                  # k8s.io/kubernetes/pkg/api/unversioned.Time
  deletionTimestamp:                                                  # k8s.io/kubernetes/pkg/api/unversioned.Time
  deletionGracePeriodSeconds:                                         # int64
  labels:                                                             # map[string]string
    [string]:                                                         # string
  annotations:                                                        # map[string]string
    [string]:                                                         # string
spec:                                                                 # github.com/openshift/origin/pkg/build/api/v1.BuildConfigSpec (holds all the input necessary to produce a new build, and the conditions when to trigger them)
  triggers:                                                           # []github.com/openshift/origin/pkg/build/api/v1.BuildTriggerPolicy (determines how new builds can be launched from a build config.  if no triggers are defined, a new build can only occur as a result of an explicit client build creation.)
  - type: ConfigChange | Generic | GitHub | ImageChange | generic | github | imageChange # github.com/openshift/origin/pkg/build/api/v1.BuildTriggerType (type of build trigger)
    github:                                                           # github.com/openshift/origin/pkg/build/api/v1.WebHookTrigger (parameters for a GitHub webhook type of trigger)
      secret:                                                         # string (secret used to validate requests)
    generic:                                                          # github.com/openshift/origin/pkg/build/api/v1.WebHookTrigger (parameters for a Generic webhook type of trigger)
      secret:                                                         # string (secret used to validate requests)
    imageChange:                                                      # github.com/openshift/origin/pkg/build/api/v1.ImageChangeTrigger (parameters for an ImageChange type of trigger)
      lastTriggeredImageID:                                           # string (used internally to save last used image ID for build)
      from:                                                           # k8s.io/kubernetes/pkg/api/v1.ObjectReference (reference to an ImageStreamTag that will trigger the build)
        kind:                                                         # string
        namespace:                                                    # string
        name:                                                         # string
        uid:                                                          # k8s.io/kubernetes/pkg/types.UID
        apiVersion:                                                   # string
        resourceVersion:                                              # string
        fieldPath:                                                    # string
  serviceAccount:                                                     # string (the name of the service account to use to run pods created by the build, pod will be allowed to use secrets referenced by the service account)
  source:                                                             # github.com/openshift/origin/pkg/build/api/v1.BuildSource (describes the source control management system in use)
    type: Binary | Dockerfile | Git                                   # github.com/openshift/origin/pkg/build/api/v1.BuildSourceType (type of build input to accept)
    binary:                                                           # github.com/openshift/origin/pkg/build/api/v1.BinaryBuildSource (the binary will be provided by the builder as an archive or file to be placed within the input directory; allows Dockerfile to be optionally set; may not be set with git source type also set)
      asFile:                                                         # string (indicate the provided binary should be considered a single file placed within the root of the input; must be a valid filename with no path segments)
    dockerfile:                                                       # string (the contents of a Dockerfile to build; FROM may be overridden by your strategy source, and additional ENV from your strategy will be placed before the rest of the Dockerfile stanzas)
    git:                                                              # github.com/openshift/origin/pkg/build/api/v1.GitBuildSource (optional information about git build source)
      uri:                                                            # string (points to the source that will be built, structure of the source will depend on the type of build to run)
      ref:                                                            # string (identifies the branch/tag/ref to build)
      httpProxy:                                                      # string (specifies a http proxy to be used during git clone operations)
      httpsProxy:                                                     # string (specifies a https proxy to be used during git clone operations)
    contextDir:                                                       # string (specifies sub-directory where the source code for the application exists, allows for sources to be built from a directory other than the root of a repository)
    sourceSecret:                                                     # k8s.io/kubernetes/pkg/api/v1.LocalObjectReference (supported auth methods are: ssh-privatekey)
      name:                                                           # string
  revision:                                                           # github.com/openshift/origin/pkg/build/api/v1.SourceRevision (specific revision in the source repository)
    type: Binary | Dockerfile | Git                                   # github.com/openshift/origin/pkg/build/api/v1.BuildSourceType (type of the build source)
    git:                                                              # github.com/openshift/origin/pkg/build/api/v1.GitSourceRevision (information about git-based build source)
      commit:                                                         # string (hash identifying a specific commit)
      author:                                                         # github.com/openshift/origin/pkg/build/api/v1.SourceControlUser (author of a specific commit)
        name:                                                         # string (name of the source control user)
        email:                                                        # string (e-mail of the source control user)
      committer:                                                      # github.com/openshift/origin/pkg/build/api/v1.SourceControlUser (committer of a specific commit)
        name:                                                         # string (name of the source control user)
        email:                                                        # string (e-mail of the source control user)
      message:                                                        # string (description of a specific commit)
  strategy:                                                           # github.com/openshift/origin/pkg/build/api/v1.BuildStrategy (defines how to perform a build)
    type: Custom | Docker | Source                                    # github.com/openshift/origin/pkg/build/api/v1.BuildStrategyType (identifies the type of build strategy)
    dockerStrategy:                                                   # github.com/openshift/origin/pkg/build/api/v1.DockerBuildStrategy (holds parameters for the Docker build strategy)
      from:                                                           # k8s.io/kubernetes/pkg/api/v1.ObjectReference (reference to image stream, image stream tag, or image stream image from which docker image should be pulled, resulting image will be used in the FROM line for the Dockerfile for this build)
        kind:                                                         # string
        namespace:                                                    # string
        name:                                                         # string
        uid:                                                          # k8s.io/kubernetes/pkg/types.UID
        apiVersion:                                                   # string
        resourceVersion:                                              # string
        fieldPath:                                                    # string
      pullSecret:                                                     # k8s.io/kubernetes/pkg/api/v1.LocalObjectReference (supported type: dockercfg)
        name:                                                         # string
      noCache:                                                        # bool (if true, indicates that the Docker build must be executed with the --no-cache=true flag)
      env:                                                            # []k8s.io/kubernetes/pkg/api/v1.EnvVar (additional environment variables you want to pass into a builder container)
      - name:                                                         # string
        value:                                                        # string
        valueFrom:                                                    # k8s.io/kubernetes/pkg/api/v1.EnvVarSource
          fieldRef:                                                   # k8s.io/kubernetes/pkg/api/v1.ObjectFieldSelector
            apiVersion:                                               # string
            fieldPath:                                                # string
      forcePull:                                                      # bool (forces the source build to pull the image if true)
      dockerfilePath:                                                 # string (path of the Dockerfile to use for building the Docker image, relative to the contextDir, if set)
    sourceStrategy:                                                   # github.com/openshift/origin/pkg/build/api/v1.SourceBuildStrategy (holds parameters to the Source build strategy)
      from:                                                           # k8s.io/kubernetes/pkg/api/v1.ObjectReference (reference to an image stream, image stream tag, or image stream image from which the Docker image should be pulled)
        kind:                                                         # string
        namespace:                                                    # string
        name:                                                         # string
        uid:                                                          # k8s.io/kubernetes/pkg/types.UID
        apiVersion:                                                   # string
        resourceVersion:                                              # string
        fieldPath:                                                    # string
      pullSecret:                                                     # k8s.io/kubernetes/pkg/api/v1.LocalObjectReference (supported type: dockercfg)
        name:                                                         # string
      env:                                                            # []k8s.io/kubernetes/pkg/api/v1.EnvVar (additional environment variables you want to pass into a builder container)
      - name:                                                         # string
        value:                                                        # string
        valueFrom:                                                    # k8s.io/kubernetes/pkg/api/v1.EnvVarSource
          fieldRef:                                                   # k8s.io/kubernetes/pkg/api/v1.ObjectFieldSelector
            apiVersion:                                               # string
            fieldPath:                                                # string
      scripts:                                                        # string (location of the source scripts)
      incremental:                                                    # bool (forces the source build to do incremental builds if true)
      forcePull:                                                      # bool (forces the source build to pull the image if true)
    customStrategy:                                                   # github.com/openshift/origin/pkg/build/api/v1.CustomBuildStrategy (holds parameters to the Custom build strategy)
      from:                                                           # k8s.io/kubernetes/pkg/api/v1.ObjectReference (reference to an image stream, image stream tag, or image stream image from which the Docker image should be pulled)
        kind:                                                         # string
        namespace:                                                    # string
        name:                                                         # string
        uid:                                                          # k8s.io/kubernetes/pkg/types.UID
        apiVersion:                                                   # string
        resourceVersion:                                              # string
        fieldPath:                                                    # string
      pullSecret:                                                     # k8s.io/kubernetes/pkg/api/v1.LocalObjectReference (supported type: dockercfg)
        name:                                                         # string
      env:                                                            # []k8s.io/kubernetes/pkg/api/v1.EnvVar (additional environment variables you want to pass into a builder container)
      - name:                                                         # string
        value:                                                        # string
        valueFrom:                                                    # k8s.io/kubernetes/pkg/api/v1.EnvVarSource
          fieldRef:                                                   # k8s.io/kubernetes/pkg/api/v1.ObjectFieldSelector
            apiVersion:                                               # string
            fieldPath:                                                # string
      exposeDockerSocket:                                             # bool (allow running Docker commands (and build Docker images) from inside the container)
      forcePull:                                                      # bool (forces pulling of builder image from remote registry if true)
      secrets:                                                        # []github.com/openshift/origin/pkg/build/api/v1.SecretSpec (a list of secrets to include in the build pod in addition to pull, push and source secrets)
      - secretSource:                                                 # k8s.io/kubernetes/pkg/api/v1.LocalObjectReference (a reference to a secret)
          name:                                                       # string
        mountPath:                                                    # string (path within the container at which the secret should be mounted)
  output:                                                             # github.com/openshift/origin/pkg/build/api/v1.BuildOutput (describes the output of a build that a strategy should produce)
    to:                                                               # k8s.io/kubernetes/pkg/api/v1.ObjectReference (The optional image stream to push the output of this build.  The namespace may be empty, in which case, the image stream will be looked up based on the namespace of the build.)
      kind:                                                           # string
      namespace:                                                      # string
      name:                                                           # string
      uid:                                                            # k8s.io/kubernetes/pkg/types.UID
      apiVersion:                                                     # string
      resourceVersion:                                                # string
      fieldPath:                                                      # string
    pushSecret:                                                       # k8s.io/kubernetes/pkg/api/v1.LocalObjectReference (supported type: dockercfg)
      name:                                                           # string
  resources:                                                          # k8s.io/kubernetes/pkg/api/v1.ResourceRequirements (the desired compute resources the build should have)
    limits:                                                           # k8s.io/kubernetes/pkg/api/v1.ResourceList
      [k8s.io/kubernetes/pkg/api/v1.ResourceName]:                    # k8s.io/kubernetes/pkg/api/resource.Quantity
    requests:                                                         # k8s.io/kubernetes/pkg/api/v1.ResourceList
      [k8s.io/kubernetes/pkg/api/v1.ResourceName]:                    # k8s.io/kubernetes/pkg/api/resource.Quantity
  completionDeadlineSeconds:                                          # int64 (optional duration in seconds the build may be active on a node before the system will actively try to mark it failed and kill associated containers; value must be a positive integer)
status:                                                               # github.com/openshift/origin/pkg/build/api/v1.BuildConfigStatus (holds any relevant information about a build config derived by the system)
  lastVersion:                                                        # int (used to inform about number of last triggered build)

BuildConfigList
===============

BuildConfigList is a collection of BuildConfigs.

kind: BuildConfigList                                                 # string
apiVersion: v1                                                        # string
metadata:                                                             # k8s.io/kubernetes/pkg/api/unversioned.ListMeta
  selfLink:                                                           # string
  resourceVersion:                                                    # string
items:                                                                # []github.com/openshift/origin/pkg/build/api/v1.BuildConfig (list of build configs)
- kind:                                                               # string
  apiVersion:                                                         # string
  metadata:                                                           # k8s.io/kubernetes/pkg/api/v1.ObjectMeta
    name:                                                             # string
    generateName:                                                     # string
    namespace:                                                        # string
    selfLink:                                                         # string
    uid:                                                              # k8s.io/kubernetes/pkg/types.UID
    resourceVersion:                                                  # string
    generation:                                                       # int64
    creationTimestamp:                                                # k8s.io/kubernetes/pkg/api/unversioned.Time
    deletionTimestamp:                                                # k8s.io/kubernetes/pkg/api/unversioned.Time
    deletionGracePeriodSeconds:                                       # int64
    labels:                                                           # map[string]string
      [string]:                                                       # string
    annotations:                                                      # map[string]string
      [string]:                                                       # string
  spec:                                                               # github.com/openshift/origin/pkg/build/api/v1.BuildConfigSpec (holds all the input necessary to produce a new build, and the conditions when to trigger them)
    triggers:                                                         # []github.com/openshift/origin/pkg/build/api/v1.BuildTriggerPolicy (determines how new builds can be launched from a build config.  if no triggers are defined, a new build can only occur as a result of an explicit client build creation.)
    - type: ConfigChange | Generic | GitHub | ImageChange | generic | github | imageChange # github.com/openshift/origin/pkg/build/api/v1.BuildTriggerType (type of build trigger)
      github:                                                         # github.com/openshift/origin/pkg/build/api/v1.WebHookTrigger (parameters for a GitHub webhook type of trigger)
        secret:                                                       # string (secret used to validate requests)
      generic:                                                        # github.com/openshift/origin/pkg/build/api/v1.WebHookTrigger (parameters for a Generic webhook type of trigger)
        secret:                                                       # string (secret used to validate requests)
      imageChange:                                                    # github.com/openshift/origin/pkg/build/api/v1.ImageChangeTrigger (parameters for an ImageChange type of trigger)
        lastTriggeredImageID:                                         # string (used internally to save last used image ID for build)
        from:                                                         # k8s.io/kubernetes/pkg/api/v1.ObjectReference (reference to an ImageStreamTag that will trigger the build)
          kind:                                                       # string
          namespace:                                                  # string
          name:                                                       # string
          uid:                                                        # k8s.io/kubernetes/pkg/types.UID
          apiVersion:                                                 # string
          resourceVersion:                                            # string
          fieldPath:                                                  # string
    serviceAccount:                                                   # string (the name of the service account to use to run pods created by the build, pod will be allowed to use secrets referenced by the service account)
    source:                                                           # github.com/openshift/origin/pkg/build/api/v1.BuildSource (describes the source control management system in use)
      type: Binary | Dockerfile | Git                                 # github.com/openshift/origin/pkg/build/api/v1.BuildSourceType (type of build input to accept)
      binary:                                                         # github.com/openshift/origin/pkg/build/api/v1.BinaryBuildSource (the binary will be provided by the builder as an archive or file to be placed within the input directory; allows Dockerfile to be optionally set; may not be set with git source type also set)
        asFile:                                                       # string (indicate the provided binary should be considered a single file placed within the root of the input; must be a valid filename with no path segments)
      dockerfile:                                                     # string (the contents of a Dockerfile to build; FROM may be overridden by your strategy source, and additional ENV from your strategy will be placed before the rest of the Dockerfile stanzas)
      git:                                                            # github.com/openshift/origin/pkg/build/api/v1.GitBuildSource (optional information about git build source)
        uri:                                                          # string (points to the source that will be built, structure of the source will depend on the type of build to run)
        ref:                                                          # string (identifies the branch/tag/ref to build)
        httpProxy:                                                    # string (specifies a http proxy to be used during git clone operations)
        httpsProxy:                                                   # string (specifies a https proxy to be used during git clone operations)
      contextDir:                                                     # string (specifies sub-directory where the source code for the application exists, allows for sources to be built from a directory other than the root of a repository)
      sourceSecret:                                                   # k8s.io/kubernetes/pkg/api/v1.LocalObjectReference (supported auth methods are: ssh-privatekey)
        name:                                                         # string
    revision:                                                         # github.com/openshift/origin/pkg/build/api/v1.SourceRevision (specific revision in the source repository)
      type: Binary | Dockerfile | Git                                 # github.com/openshift/origin/pkg/build/api/v1.BuildSourceType (type of the build source)
      git:                                                            # github.com/openshift/origin/pkg/build/api/v1.GitSourceRevision (information about git-based build source)
        commit:                                                       # string (hash identifying a specific commit)
        author:                                                       # github.com/openshift/origin/pkg/build/api/v1.SourceControlUser (author of a specific commit)
          name:                                                       # string (name of the source control user)
          email:                                                      # string (e-mail of the source control user)
        committer:                                                    # github.com/openshift/origin/pkg/build/api/v1.SourceControlUser (committer of a specific commit)
          name:                                                       # string (name of the source control user)
          email:                                                      # string (e-mail of the source control user)
        message:                                                      # string (description of a specific commit)
    strategy:                                                         # github.com/openshift/origin/pkg/build/api/v1.BuildStrategy (defines how to perform a build)
      type: Custom | Docker | Source                                  # github.com/openshift/origin/pkg/build/api/v1.BuildStrategyType (identifies the type of build strategy)
      dockerStrategy:                                                 # github.com/openshift/origin/pkg/build/api/v1.DockerBuildStrategy (holds parameters for the Docker build strategy)
        from:                                                         # k8s.io/kubernetes/pkg/api/v1.ObjectReference (reference to image stream, image stream tag, or image stream image from which docker image should be pulled, resulting image will be used in the FROM line for the Dockerfile for this build)
          kind:                                                       # string
          namespace:                                                  # string
          name:                                                       # string
          uid:                                                        # k8s.io/kubernetes/pkg/types.UID
          apiVersion:                                                 # string
          resourceVersion:                                            # string
          fieldPath:                                                  # string
        pullSecret:                                                   # k8s.io/kubernetes/pkg/api/v1.LocalObjectReference (supported type: dockercfg)
          name:                                                       # string
        noCache:                                                      # bool (if true, indicates that the Docker build must be executed with the --no-cache=true flag)
        env:                                                          # []k8s.io/kubernetes/pkg/api/v1.EnvVar (additional environment variables you want to pass into a builder container)
        - name:                                                       # string
          value:                                                      # string
          valueFrom:                                                  # k8s.io/kubernetes/pkg/api/v1.EnvVarSource
            fieldRef:                                                 # k8s.io/kubernetes/pkg/api/v1.ObjectFieldSelector
              apiVersion:                                             # string
              fieldPath:                                              # string
        forcePull:                                                    # bool (forces the source build to pull the image if true)
        dockerfilePath:                                               # string (path of the Dockerfile to use for building the Docker image, relative to the contextDir, if set)
      sourceStrategy:                                                 # github.com/openshift/origin/pkg/build/api/v1.SourceBuildStrategy (holds parameters to the Source build strategy)
        from:                                                         # k8s.io/kubernetes/pkg/api/v1.ObjectReference (reference to an image stream, image stream tag, or image stream image from which the Docker image should be pulled)
          kind:                                                       # string
          namespace:                                                  # string
          name:                                                       # string
          uid:                                                        # k8s.io/kubernetes/pkg/types.UID
          apiVersion:                                                 # string
          resourceVersion:                                            # string
          fieldPath:                                                  # string
        pullSecret:                                                   # k8s.io/kubernetes/pkg/api/v1.LocalObjectReference (supported type: dockercfg)
          name:                                                       # string
        env:                                                          # []k8s.io/kubernetes/pkg/api/v1.EnvVar (additional environment variables you want to pass into a builder container)
        - name:                                                       # string
          value:                                                      # string
          valueFrom:                                                  # k8s.io/kubernetes/pkg/api/v1.EnvVarSource
            fieldRef:                                                 # k8s.io/kubernetes/pkg/api/v1.ObjectFieldSelector
              apiVersion:                                             # string
              fieldPath:                                              # string
        scripts:                                                      # string (location of the source scripts)
        incremental:                                                  # bool (forces the source build to do incremental builds if true)
        forcePull:                                                    # bool (forces the source build to pull the image if true)
      customStrategy:                                                 # github.com/openshift/origin/pkg/build/api/v1.CustomBuildStrategy (holds parameters to the Custom build strategy)
        from:                                                         # k8s.io/kubernetes/pkg/api/v1.ObjectReference (reference to an image stream, image stream tag, or image stream image from which the Docker image should be pulled)
          kind:                                                       # string
          namespace:                                                  # string
          name:                                                       # string
          uid:                                                        # k8s.io/kubernetes/pkg/types.UID
          apiVersion:                                                 # string
          resourceVersion:                                            # string
          fieldPath:                                                  # string
        pullSecret:                                                   # k8s.io/kubernetes/pkg/api/v1.LocalObjectReference (supported type: dockercfg)
          name:                                                       # string
        env:                                                          # []k8s.io/kubernetes/pkg/api/v1.EnvVar (additional environment variables you want to pass into a builder container)
        - name:                                                       # string
          value:                                                      # string
          valueFrom:                                                  # k8s.io/kubernetes/pkg/api/v1.EnvVarSource
            fieldRef:                                                 # k8s.io/kubernetes/pkg/api/v1.ObjectFieldSelector
              apiVersion:                                             # string
              fieldPath:                                              # string
        exposeDockerSocket:                                           # bool (allow running Docker commands (and build Docker images) from inside the container)
        forcePull:                                                    # bool (forces pulling of builder image from remote registry if true)
        secrets:                                                      # []github.com/openshift/origin/pkg/build/api/v1.SecretSpec (a list of secrets to include in the build pod in addition to pull, push and source secrets)
        - secretSource:                                               # k8s.io/kubernetes/pkg/api/v1.LocalObjectReference (a reference to a secret)
            name:                                                     # string
          mountPath:                                                  # string (path within the container at which the secret should be mounted)
    output:                                                           # github.com/openshift/origin/pkg/build/api/v1.BuildOutput (describes the output of a build that a strategy should produce)
      to:                                                             # k8s.io/kubernetes/pkg/api/v1.ObjectReference (The optional image stream to push the output of this build.  The namespace may be empty, in which case, the image stream will be looked up based on the namespace of the build.)
        kind:                                                         # string
        namespace:                                                    # string
        name:                                                         # string
        uid:                                                          # k8s.io/kubernetes/pkg/types.UID
        apiVersion:                                                   # string
        resourceVersion:                                              # string
        fieldPath:                                                    # string
      pushSecret:                                                     # k8s.io/kubernetes/pkg/api/v1.LocalObjectReference (supported type: dockercfg)
        name:                                                         # string
    resources:                                                        # k8s.io/kubernetes/pkg/api/v1.ResourceRequirements (the desired compute resources the build should have)
      limits:                                                         # k8s.io/kubernetes/pkg/api/v1.ResourceList
        [k8s.io/kubernetes/pkg/api/v1.ResourceName]:                  # k8s.io/kubernetes/pkg/api/resource.Quantity
      requests:                                                       # k8s.io/kubernetes/pkg/api/v1.ResourceList
        [k8s.io/kubernetes/pkg/api/v1.ResourceName]:                  # k8s.io/kubernetes/pkg/api/resource.Quantity
    completionDeadlineSeconds:                                        # int64 (optional duration in seconds the build may be active on a node before the system will actively try to mark it failed and kill associated containers; value must be a positive integer)
  status:                                                             # github.com/openshift/origin/pkg/build/api/v1.BuildConfigStatus (holds any relevant information about a build config derived by the system)
    lastVersion:                                                      # int (used to inform about number of last triggered build)

BuildList
=========

BuildList is a collection of Builds.

kind: BuildList                                                       # string
apiVersion: v1                                                        # string
metadata:                                                             # k8s.io/kubernetes/pkg/api/unversioned.ListMeta
  selfLink:                                                           # string
  resourceVersion:                                                    # string
items:                                                                # []github.com/openshift/origin/pkg/build/api/v1.Build (list of builds)
- kind:                                                               # string
  apiVersion:                                                         # string
  metadata:                                                           # k8s.io/kubernetes/pkg/api/v1.ObjectMeta
    name:                                                             # string
    generateName:                                                     # string
    namespace:                                                        # string
    selfLink:                                                         # string
    uid:                                                              # k8s.io/kubernetes/pkg/types.UID
    resourceVersion:                                                  # string
    generation:                                                       # int64
    creationTimestamp:                                                # k8s.io/kubernetes/pkg/api/unversioned.Time
    deletionTimestamp:                                                # k8s.io/kubernetes/pkg/api/unversioned.Time
    deletionGracePeriodSeconds:                                       # int64
    labels:                                                           # map[string]string
      [string]:                                                       # string
    annotations:                                                      # map[string]string
      [string]:                                                       # string
  spec:                                                               # github.com/openshift/origin/pkg/build/api/v1.BuildSpec (specification of the desired behavior for a build)
    serviceAccount:                                                   # string (the name of the service account to use to run pods created by the build, pod will be allowed to use secrets referenced by the service account)
    source:                                                           # github.com/openshift/origin/pkg/build/api/v1.BuildSource (describes the source control management system in use)
      type: Binary | Dockerfile | Git                                 # github.com/openshift/origin/pkg/build/api/v1.BuildSourceType (type of build input to accept)
      binary:                                                         # github.com/openshift/origin/pkg/build/api/v1.BinaryBuildSource (the binary will be provided by the builder as an archive or file to be placed within the input directory; allows Dockerfile to be optionally set; may not be set with git source type also set)
        asFile:                                                       # string (indicate the provided binary should be considered a single file placed within the root of the input; must be a valid filename with no path segments)
      dockerfile:                                                     # string (the contents of a Dockerfile to build; FROM may be overridden by your strategy source, and additional ENV from your strategy will be placed before the rest of the Dockerfile stanzas)
      git:                                                            # github.com/openshift/origin/pkg/build/api/v1.GitBuildSource (optional information about git build source)
        uri:                                                          # string (points to the source that will be built, structure of the source will depend on the type of build to run)
        ref:                                                          # string (identifies the branch/tag/ref to build)
        httpProxy:                                                    # string (specifies a http proxy to be used during git clone operations)
        httpsProxy:                                                   # string (specifies a https proxy to be used during git clone operations)
      contextDir:                                                     # string (specifies sub-directory where the source code for the application exists, allows for sources to be built from a directory other than the root of a repository)
      sourceSecret:                                                   # k8s.io/kubernetes/pkg/api/v1.LocalObjectReference (supported auth methods are: ssh-privatekey)
        name:                                                         # string
    revision:                                                         # github.com/openshift/origin/pkg/build/api/v1.SourceRevision (specific revision in the source repository)
      type: Binary | Dockerfile | Git                                 # github.com/openshift/origin/pkg/build/api/v1.BuildSourceType (type of the build source)
      git:                                                            # github.com/openshift/origin/pkg/build/api/v1.GitSourceRevision (information about git-based build source)
        commit:                                                       # string (hash identifying a specific commit)
        author:                                                       # github.com/openshift/origin/pkg/build/api/v1.SourceControlUser (author of a specific commit)
          name:                                                       # string (name of the source control user)
          email:                                                      # string (e-mail of the source control user)
        committer:                                                    # github.com/openshift/origin/pkg/build/api/v1.SourceControlUser (committer of a specific commit)
          name:                                                       # string (name of the source control user)
          email:                                                      # string (e-mail of the source control user)
        message:                                                      # string (description of a specific commit)
    strategy:                                                         # github.com/openshift/origin/pkg/build/api/v1.BuildStrategy (defines how to perform a build)
      type: Custom | Docker | Source                                  # github.com/openshift/origin/pkg/build/api/v1.BuildStrategyType (identifies the type of build strategy)
      dockerStrategy:                                                 # github.com/openshift/origin/pkg/build/api/v1.DockerBuildStrategy (holds parameters for the Docker build strategy)
        from:                                                         # k8s.io/kubernetes/pkg/api/v1.ObjectReference (reference to image stream, image stream tag, or image stream image from which docker image should be pulled, resulting image will be used in the FROM line for the Dockerfile for this build)
          kind:                                                       # string
          namespace:                                                  # string
          name:                                                       # string
          uid:                                                        # k8s.io/kubernetes/pkg/types.UID
          apiVersion:                                                 # string
          resourceVersion:                                            # string
          fieldPath:                                                  # string
        pullSecret:                                                   # k8s.io/kubernetes/pkg/api/v1.LocalObjectReference (supported type: dockercfg)
          name:                                                       # string
        noCache:                                                      # bool (if true, indicates that the Docker build must be executed with the --no-cache=true flag)
        env:                                                          # []k8s.io/kubernetes/pkg/api/v1.EnvVar (additional environment variables you want to pass into a builder container)
        - name:                                                       # string
          value:                                                      # string
          valueFrom:                                                  # k8s.io/kubernetes/pkg/api/v1.EnvVarSource
            fieldRef:                                                 # k8s.io/kubernetes/pkg/api/v1.ObjectFieldSelector
              apiVersion:                                             # string
              fieldPath:                                              # string
        forcePull:                                                    # bool (forces the source build to pull the image if true)
        dockerfilePath:                                               # string (path of the Dockerfile to use for building the Docker image, relative to the contextDir, if set)
      sourceStrategy:                                                 # github.com/openshift/origin/pkg/build/api/v1.SourceBuildStrategy (holds parameters to the Source build strategy)
        from:                                                         # k8s.io/kubernetes/pkg/api/v1.ObjectReference (reference to an image stream, image stream tag, or image stream image from which the Docker image should be pulled)
          kind:                                                       # string
          namespace:                                                  # string
          name:                                                       # string
          uid:                                                        # k8s.io/kubernetes/pkg/types.UID
          apiVersion:                                                 # string
          resourceVersion:                                            # string
          fieldPath:                                                  # string
        pullSecret:                                                   # k8s.io/kubernetes/pkg/api/v1.LocalObjectReference (supported type: dockercfg)
          name:                                                       # string
        env:                                                          # []k8s.io/kubernetes/pkg/api/v1.EnvVar (additional environment variables you want to pass into a builder container)
        - name:                                                       # string
          value:                                                      # string
          valueFrom:                                                  # k8s.io/kubernetes/pkg/api/v1.EnvVarSource
            fieldRef:                                                 # k8s.io/kubernetes/pkg/api/v1.ObjectFieldSelector
              apiVersion:                                             # string
              fieldPath:                                              # string
        scripts:                                                      # string (location of the source scripts)
        incremental:                                                  # bool (forces the source build to do incremental builds if true)
        forcePull:                                                    # bool (forces the source build to pull the image if true)
      customStrategy:                                                 # github.com/openshift/origin/pkg/build/api/v1.CustomBuildStrategy (holds parameters to the Custom build strategy)
        from:                                                         # k8s.io/kubernetes/pkg/api/v1.ObjectReference (reference to an image stream, image stream tag, or image stream image from which the Docker image should be pulled)
          kind:                                                       # string
          namespace:                                                  # string
          name:                                                       # string
          uid:                                                        # k8s.io/kubernetes/pkg/types.UID
          apiVersion:                                                 # string
          resourceVersion:                                            # string
          fieldPath:                                                  # string
        pullSecret:                                                   # k8s.io/kubernetes/pkg/api/v1.LocalObjectReference (supported type: dockercfg)
          name:                                                       # string
        env:                                                          # []k8s.io/kubernetes/pkg/api/v1.EnvVar (additional environment variables you want to pass into a builder container)
        - name:                                                       # string
          value:                                                      # string
          valueFrom:                                                  # k8s.io/kubernetes/pkg/api/v1.EnvVarSource
            fieldRef:                                                 # k8s.io/kubernetes/pkg/api/v1.ObjectFieldSelector
              apiVersion:                                             # string
              fieldPath:                                              # string
        exposeDockerSocket:                                           # bool (allow running Docker commands (and build Docker images) from inside the container)
        forcePull:                                                    # bool (forces pulling of builder image from remote registry if true)
        secrets:                                                      # []github.com/openshift/origin/pkg/build/api/v1.SecretSpec (a list of secrets to include in the build pod in addition to pull, push and source secrets)
        - secretSource:                                               # k8s.io/kubernetes/pkg/api/v1.LocalObjectReference (a reference to a secret)
            name:                                                     # string
          mountPath:                                                  # string (path within the container at which the secret should be mounted)
    output:                                                           # github.com/openshift/origin/pkg/build/api/v1.BuildOutput (describes the output of a build that a strategy should produce)
      to:                                                             # k8s.io/kubernetes/pkg/api/v1.ObjectReference (The optional image stream to push the output of this build.  The namespace may be empty, in which case, the image stream will be looked up based on the namespace of the build.)
        kind:                                                         # string
        namespace:                                                    # string
        name:                                                         # string
        uid:                                                          # k8s.io/kubernetes/pkg/types.UID
        apiVersion:                                                   # string
        resourceVersion:                                              # string
        fieldPath:                                                    # string
      pushSecret:                                                     # k8s.io/kubernetes/pkg/api/v1.LocalObjectReference (supported type: dockercfg)
        name:                                                         # string
    resources:                                                        # k8s.io/kubernetes/pkg/api/v1.ResourceRequirements (the desired compute resources the build should have)
      limits:                                                         # k8s.io/kubernetes/pkg/api/v1.ResourceList
        [k8s.io/kubernetes/pkg/api/v1.ResourceName]:                  # k8s.io/kubernetes/pkg/api/resource.Quantity
      requests:                                                       # k8s.io/kubernetes/pkg/api/v1.ResourceList
        [k8s.io/kubernetes/pkg/api/v1.ResourceName]:                  # k8s.io/kubernetes/pkg/api/resource.Quantity
    completionDeadlineSeconds:                                        # int64 (optional duration in seconds the build may be active on a node before the system will actively try to mark it failed and kill associated containers; value must be a positive integer)
  status:                                                             # github.com/openshift/origin/pkg/build/api/v1.BuildStatus (most recently observed status of a build as populated by the system)
    phase: Cancelled | Complete | Error | Failed | New | Pending | Running # github.com/openshift/origin/pkg/build/api/v1.BuildPhase (observed point in the build lifecycle)
    cancelled:                                                        # bool (describes if a cancel event was triggered for the build)
    reason:                                                           # github.com/openshift/origin/pkg/build/api/v1.StatusReason (brief CamelCase string describing a failure, meant for machine parsing and tidy display in the CLI)
    message:                                                          # string (human-readable message indicating details about why the build has this status)
    startTimestamp:                                                   # k8s.io/kubernetes/pkg/api/unversioned.Time (server time when this build started running in a pod)
    completionTimestamp:                                              # k8s.io/kubernetes/pkg/api/unversioned.Time (server time when the pod running this build stopped running)
    duration: 1 | 1000 | 1000000 | 1000000000 | 3600000000000 | 60000000000 # time.Duration (amount of time the build has been running)
    outputDockerImageReference:                                       # string (reference to the Docker image built by this build, computed from build.spec.output.to, and can be used to push and pull the image)
    config:                                                           # k8s.io/kubernetes/pkg/api/v1.ObjectReference (reference to build config from which this build was derived)
      kind:                                                           # string
      namespace:                                                      # string
      name:                                                           # string
      uid:                                                            # k8s.io/kubernetes/pkg/types.UID
      apiVersion:                                                     # string
      resourceVersion:                                                # string
      fieldPath:                                                      # string

BuildLog
========

BuildLog is the (unused) resource associated with the build log redirector

kind: BuildLog                                                        # string
apiVersion: v1                                                        # string

BuildLogOptions
===============

BuildLogOptions is the REST options for a build log

kind: BuildLogOptions                                                 # string
apiVersion: v1                                                        # string
container:                                                            # string (the container for which to stream logs; defaults to only container if there is one container in the pod)
follow:                                                               # bool (if true indicates that the log should be streamed; defaults to false)
previous:                                                             # bool (return previous terminated container logs; defaults to false.)
sinceSeconds:                                                         # int64 (relative time in seconds before the current time from which to show logs)
sinceTime:                                                            # k8s.io/kubernetes/pkg/api/unversioned.Time (relative time in seconds before the current time from which to show logs)
timestamps:                                                           # bool (add an RFC3339 or RFC3339Nano timestamp at the beginning of every line of log output)
tailLines:                                                            # int64 (the number of lines from the end of the logs to show)
limitBytes:                                                           # int64 (the number of bytes to read from the server before terminating the log output)
nowait:                                                               # bool (if true indicates that the server should not wait for a log to be available before returning; defaults to false)
version:                                                              # int64 (the version of the build for which to view logs)

BuildRequest
============

BuildRequest is the resource used to pass parameters to build generator

kind: BuildRequest                                                    # string
apiVersion: v1                                                        # string
metadata:                                                             # k8s.io/kubernetes/pkg/api/v1.ObjectMeta
  name:                                                               # string
  generateName:                                                       # string
  namespace:                                                          # string
  selfLink:                                                           # string
  uid:                                                                # k8s.io/kubernetes/pkg/types.UID
  resourceVersion:                                                    # string
  generation:                                                         # int64
  creationTimestamp:                                                  # k8s.io/kubernetes/pkg/api/unversioned.Time
  deletionTimestamp:                                                  # k8s.io/kubernetes/pkg/api/unversioned.Time
  deletionGracePeriodSeconds:                                         # int64
  labels:                                                             # map[string]string
    [string]:                                                         # string
  annotations:                                                        # map[string]string
    [string]:                                                         # string
revision:                                                             # github.com/openshift/origin/pkg/build/api/v1.SourceRevision (information from the source for a specific repo snapshot)
  type: Binary | Dockerfile | Git                                     # github.com/openshift/origin/pkg/build/api/v1.BuildSourceType (type of the build source)
  git:                                                                # github.com/openshift/origin/pkg/build/api/v1.GitSourceRevision (information about git-based build source)
    commit:                                                           # string (hash identifying a specific commit)
    author:                                                           # github.com/openshift/origin/pkg/build/api/v1.SourceControlUser (author of a specific commit)
      name:                                                           # string (name of the source control user)
      email:                                                          # string (e-mail of the source control user)
    committer:                                                        # github.com/openshift/origin/pkg/build/api/v1.SourceControlUser (committer of a specific commit)
      name:                                                           # string (name of the source control user)
      email:                                                          # string (e-mail of the source control user)
    message:                                                          # string (description of a specific commit)
triggeredByImage:                                                     # k8s.io/kubernetes/pkg/api/v1.ObjectReference (image that triggered this build)
  kind:                                                               # string
  namespace:                                                          # string
  name:                                                               # string
  uid:                                                                # k8s.io/kubernetes/pkg/types.UID
  apiVersion:                                                         # string
  resourceVersion:                                                    # string
  fieldPath:                                                          # string
from:                                                                 # k8s.io/kubernetes/pkg/api/v1.ObjectReference (ImageStreamTag that triggered this build)
  kind:                                                               # string
  namespace:                                                          # string
  name:                                                               # string
  uid:                                                                # k8s.io/kubernetes/pkg/types.UID
  apiVersion:                                                         # string
  resourceVersion:                                                    # string
  fieldPath:                                                          # string
binary:                                                               # github.com/openshift/origin/pkg/build/api/v1.BinaryBuildSource (the binary will be provided by the builder as an archive or file to be placed within the input directory; allows Dockerfile to be optionally set; may not be set with git source type also set)
  asFile:                                                             # string (indicate the provided binary should be considered a single file placed within the root of the input; must be a valid filename with no path segments)
lastVersion:                                                          # int (LastVersion of the BuildConfig that triggered this build)
env:                                                                  # []k8s.io/kubernetes/pkg/api/v1.EnvVar (additional environment variables you want to pass into a builder container)
- name:                                                               # string
  value:                                                              # string
  valueFrom:                                                          # k8s.io/kubernetes/pkg/api/v1.EnvVarSource
    fieldRef:                                                         # k8s.io/kubernetes/pkg/api/v1.ObjectFieldSelector
      apiVersion:                                                     # string
      fieldPath:                                                      # string

DeploymentConfig
================

DeploymentConfig represents a configuration for a single deployment (represented as a
ReplicationController). It also contains details about changes which resulted in the current
state of the DeploymentConfig. Each change to the DeploymentConfig which should result in
a new deployment results in an increment of LatestVersion.

kind: DeploymentConfig                                                # string
apiVersion: v1                                                        # string
metadata:                                                             # k8s.io/kubernetes/pkg/api/v1.ObjectMeta
  name:                                                               # string
  generateName:                                                       # string
  namespace:                                                          # string
  selfLink:                                                           # string
  uid:                                                                # k8s.io/kubernetes/pkg/types.UID
  resourceVersion:                                                    # string
  generation:                                                         # int64
  creationTimestamp:                                                  # k8s.io/kubernetes/pkg/api/unversioned.Time
  deletionTimestamp:                                                  # k8s.io/kubernetes/pkg/api/unversioned.Time
  deletionGracePeriodSeconds:                                         # int64
  labels:                                                             # map[string]string
    [string]:                                                         # string
  annotations:                                                        # map[string]string
    [string]:                                                         # string
spec:                                                                 # github.com/openshift/origin/pkg/deploy/api/v1.DeploymentConfigSpec (a desired deployment state and how to deploy it)
  strategy:                                                           # github.com/openshift/origin/pkg/deploy/api/v1.DeploymentStrategy (how a deployment is executed)
    type: Custom | Recreate | Rolling                                 # github.com/openshift/origin/pkg/deploy/api/v1.DeploymentStrategyType (the name of a deployment strategy)
    customParams:                                                     # github.com/openshift/origin/pkg/deploy/api/v1.CustomDeploymentStrategyParams (input to the Custom deployment strategy)
      image:                                                          # string (a Docker image which can carry out a deployment)
      environment:                                                    # []k8s.io/kubernetes/pkg/api/v1.EnvVar (environment variables provided to the deployment process container)
      - name:                                                         # string
        value:                                                        # string
        valueFrom:                                                    # k8s.io/kubernetes/pkg/api/v1.EnvVarSource
          fieldRef:                                                   # k8s.io/kubernetes/pkg/api/v1.ObjectFieldSelector
            apiVersion:                                               # string
            fieldPath:                                                # string
      command:                                                        # []string (optionally overrides the container command (default is specified by the image))
      - [string]                                                      #
    recreateParams:                                                   # github.com/openshift/origin/pkg/deploy/api/v1.RecreateDeploymentStrategyParams (input to the Recreate deployment strategy)
      pre:                                                            # github.com/openshift/origin/pkg/deploy/api/v1.LifecycleHook (a hook executed before the strategy starts the deployment)
        failurePolicy: Abort | Ignore | Retry                         # github.com/openshift/origin/pkg/deploy/api/v1.LifecycleHookFailurePolicy (what action to take if the hook fails)
        execNewPod:                                                   # github.com/openshift/origin/pkg/deploy/api/v1.ExecNewPodHook (options for an ExecNewPodHook)
          command:                                                    # []string (the hook command and its arguments)
          - [string]                                                  #
          env:                                                        # []k8s.io/kubernetes/pkg/api/v1.EnvVar (environment variables provided to the hook container)
          - name:                                                     # string
            value:                                                    # string
            valueFrom:                                                # k8s.io/kubernetes/pkg/api/v1.EnvVarSource
              fieldRef:                                               # k8s.io/kubernetes/pkg/api/v1.ObjectFieldSelector
                apiVersion:                                           # string
                fieldPath:                                            # string
          containerName:                                              # string (the name of a container from the pod template whose image will be used for the hook container)
          volumes:                                                    # []string (the names of volumes from the pod template which should be included in the hook pod; an empty list means no volumes will be copied, and names not found in the pod spec will be ignored)
          - [string]                                                  #
      post:                                                           # github.com/openshift/origin/pkg/deploy/api/v1.LifecycleHook (a hook executed after the strategy finishes the deployment)
        failurePolicy: Abort | Ignore | Retry                         # github.com/openshift/origin/pkg/deploy/api/v1.LifecycleHookFailurePolicy (what action to take if the hook fails)
        execNewPod:                                                   # github.com/openshift/origin/pkg/deploy/api/v1.ExecNewPodHook (options for an ExecNewPodHook)
          command:                                                    # []string (the hook command and its arguments)
          - [string]                                                  #
          env:                                                        # []k8s.io/kubernetes/pkg/api/v1.EnvVar (environment variables provided to the hook container)
          - name:                                                     # string
            value:                                                    # string
            valueFrom:                                                # k8s.io/kubernetes/pkg/api/v1.EnvVarSource
              fieldRef:                                               # k8s.io/kubernetes/pkg/api/v1.ObjectFieldSelector
                apiVersion:                                           # string
                fieldPath:                                            # string
          containerName:                                              # string (the name of a container from the pod template whose image will be used for the hook container)
          volumes:                                                    # []string (the names of volumes from the pod template which should be included in the hook pod; an empty list means no volumes will be copied, and names not found in the pod spec will be ignored)
          - [string]                                                  #
    rollingParams:                                                    # github.com/openshift/origin/pkg/deploy/api/v1.RollingDeploymentStrategyParams (input to the Rolling deployment strategy)
      updatePeriodSeconds:                                            # int64 (the time to wait between individual pod updates)
      intervalSeconds:                                                # int64 (the time to wait between polling deployment status after update)
      timeoutSeconds:                                                 # int64 (the time to wait for updates before giving up)
      maxUnavailable:                                                 # k8s.io/kubernetes/pkg/util.IntOrString (max number of pods that can be unavailable during the update; value can be an absolute number or a percentage of total pods at start of update)
      maxSurge:                                                       # k8s.io/kubernetes/pkg/util.IntOrString (max number of pods that can be scheduled above the original number of pods; value can be an absolute number or a percentage of total pods at start of update)
      updatePercent:                                                  # int (the percentage of replicas to scale up or down each interval (negative value switches scale order to down/up instead of up/down))
      pre:                                                            # github.com/openshift/origin/pkg/deploy/api/v1.LifecycleHook (a hook executed before the strategy starts the deployment)
        failurePolicy: Abort | Ignore | Retry                         # github.com/openshift/origin/pkg/deploy/api/v1.LifecycleHookFailurePolicy (what action to take if the hook fails)
        execNewPod:                                                   # github.com/openshift/origin/pkg/deploy/api/v1.ExecNewPodHook (options for an ExecNewPodHook)
          command:                                                    # []string (the hook command and its arguments)
          - [string]                                                  #
          env:                                                        # []k8s.io/kubernetes/pkg/api/v1.EnvVar (environment variables provided to the hook container)
          - name:                                                     # string
            value:                                                    # string
            valueFrom:                                                # k8s.io/kubernetes/pkg/api/v1.EnvVarSource
              fieldRef:                                               # k8s.io/kubernetes/pkg/api/v1.ObjectFieldSelector
                apiVersion:                                           # string
                fieldPath:                                            # string
          containerName:                                              # string (the name of a container from the pod template whose image will be used for the hook container)
          volumes:                                                    # []string (the names of volumes from the pod template which should be included in the hook pod; an empty list means no volumes will be copied, and names not found in the pod spec will be ignored)
          - [string]                                                  #
      post:                                                           # github.com/openshift/origin/pkg/deploy/api/v1.LifecycleHook (a hook executed after the strategy finishes the deployment)
        failurePolicy: Abort | Ignore | Retry                         # github.com/openshift/origin/pkg/deploy/api/v1.LifecycleHookFailurePolicy (what action to take if the hook fails)
        execNewPod:                                                   # github.com/openshift/origin/pkg/deploy/api/v1.ExecNewPodHook (options for an ExecNewPodHook)
          command:                                                    # []string (the hook command and its arguments)
          - [string]                                                  #
          env:                                                        # []k8s.io/kubernetes/pkg/api/v1.EnvVar (environment variables provided to the hook container)
          - name:                                                     # string
            value:                                                    # string
            valueFrom:                                                # k8s.io/kubernetes/pkg/api/v1.EnvVarSource
              fieldRef:                                               # k8s.io/kubernetes/pkg/api/v1.ObjectFieldSelector
                apiVersion:                                           # string
                fieldPath:                                            # string
          containerName:                                              # string (the name of a container from the pod template whose image will be used for the hook container)
          volumes:                                                    # []string (the names of volumes from the pod template which should be included in the hook pod; an empty list means no volumes will be copied, and names not found in the pod spec will be ignored)
          - [string]                                                  #
    resources:                                                        # k8s.io/kubernetes/pkg/api/v1.ResourceRequirements (resource requirements to execute the deployment)
      limits:                                                         # k8s.io/kubernetes/pkg/api/v1.ResourceList
        [k8s.io/kubernetes/pkg/api/v1.ResourceName]:                  # k8s.io/kubernetes/pkg/api/resource.Quantity
      requests:                                                       # k8s.io/kubernetes/pkg/api/v1.ResourceList
        [k8s.io/kubernetes/pkg/api/v1.ResourceName]:                  # k8s.io/kubernetes/pkg/api/resource.Quantity
    labels:                                                           # map[string]string (labels for deployer and hook pods)
      [string]:                                                       # string
    annotations:                                                      # map[string]string (annotations for deployer and hook pods)
      [string]:                                                       # string
  triggers:                                                           # []github.com/openshift/origin/pkg/deploy/api/v1.DeploymentTriggerPolicy (how new deployments are triggered)
  - type: ConfigChange | ImageChange                                  # github.com/openshift/origin/pkg/deploy/api/v1.DeploymentTriggerType (the type of the trigger)
    imageChangeParams:                                                # github.com/openshift/origin/pkg/deploy/api/v1.DeploymentTriggerImageChangeParams (input to the ImageChange trigger)
      automatic:                                                      # bool (whether detection of a new tag value should trigger a deployment)
      containerNames:                                                 # []string (restricts tag updates to a set of container names in the pod)
      - [string]                                                      #
      from:                                                           # k8s.io/kubernetes/pkg/api/v1.ObjectReference (a reference to an ImageRepository, ImageStream, or ImageStreamTag to watch for changes)
        kind:                                                         # string
        namespace:                                                    # string
        name:                                                         # string
        uid:                                                          # k8s.io/kubernetes/pkg/types.UID
        apiVersion:                                                   # string
        resourceVersion:                                              # string
        fieldPath:                                                    # string
      lastTriggeredImage:                                             # string (the last image to be triggered)
  replicas:                                                           # int (the desired number of replicas)
  selector:                                                           # map[string]string (a label query over pods that should match the replicas count)
    [string]:                                                         # string
  template:                                                           # k8s.io/kubernetes/pkg/api/v1.PodTemplateSpec (describes the pod that will be created if insufficient replicas are detected; takes precedence over a template reference)
    metadata:                                                         # k8s.io/kubernetes/pkg/api/v1.ObjectMeta
      name:                                                           # string
      generateName:                                                   # string
      namespace:                                                      # string
      selfLink:                                                       # string
      uid:                                                            # k8s.io/kubernetes/pkg/types.UID
      resourceVersion:                                                # string
      generation:                                                     # int64
      creationTimestamp:                                              # k8s.io/kubernetes/pkg/api/unversioned.Time
      deletionTimestamp:                                              # k8s.io/kubernetes/pkg/api/unversioned.Time
      deletionGracePeriodSeconds:                                     # int64
      labels:                                                         # map[string]string
        [string]:                                                     # string
      annotations:                                                    # map[string]string
        [string]:                                                     # string
    spec:                                                             # k8s.io/kubernetes/pkg/api/v1.PodSpec
      volumes:                                                        # []k8s.io/kubernetes/pkg/api/v1.Volume
      - name:                                                         # string
        hostPath:                                                     # k8s.io/kubernetes/pkg/api/v1.HostPathVolumeSource
          path:                                                       # string
        emptyDir:                                                     # k8s.io/kubernetes/pkg/api/v1.EmptyDirVolumeSource
          medium: | Memory                                            # k8s.io/kubernetes/pkg/api/v1.StorageMedium
        gcePersistentDisk:                                            # k8s.io/kubernetes/pkg/api/v1.GCEPersistentDiskVolumeSource
          pdName:                                                     # string
          fsType:                                                     # string
          partition:                                                  # int
          readOnly:                                                   # bool
        awsElasticBlockStore:                                         # k8s.io/kubernetes/pkg/api/v1.AWSElasticBlockStoreVolumeSource
          volumeID:                                                   # string
          fsType:                                                     # string
          partition:                                                  # int
          readOnly:                                                   # bool
        gitRepo:                                                      # k8s.io/kubernetes/pkg/api/v1.GitRepoVolumeSource
          repository:                                                 # string
          revision:                                                   # string
        secret:                                                       # k8s.io/kubernetes/pkg/api/v1.SecretVolumeSource
          secretName:                                                 # string
        nfs:                                                          # k8s.io/kubernetes/pkg/api/v1.NFSVolumeSource
          server:                                                     # string
          path:                                                       # string
          readOnly:                                                   # bool
        iscsi:                                                        # k8s.io/kubernetes/pkg/api/v1.ISCSIVolumeSource
          targetPortal:                                               # string
          iqn:                                                        # string
          lun:                                                        # int
          fsType:                                                     # string
          readOnly:                                                   # bool
        glusterfs:                                                    # k8s.io/kubernetes/pkg/api/v1.GlusterfsVolumeSource
          endpoints:                                                  # string
          path:                                                       # string
          readOnly:                                                   # bool
        persistentVolumeClaim:                                        # k8s.io/kubernetes/pkg/api/v1.PersistentVolumeClaimVolumeSource
          claimName:                                                  # string
          readOnly:                                                   # bool
        rbd:                                                          # k8s.io/kubernetes/pkg/api/v1.RBDVolumeSource
          monitors:                                                   # []string
          - [string]                                                  #
          image:                                                      # string
          fsType:                                                     # string
          pool:                                                       # string
          user:                                                       # string
          keyring:                                                    # string
          secretRef:                                                  # k8s.io/kubernetes/pkg/api/v1.LocalObjectReference
            name:                                                     # string
          readOnly:                                                   # bool
        cinder:                                                       # k8s.io/kubernetes/pkg/api/v1.CinderVolumeSource
          volumeID:                                                   # string
          fsType:                                                     # string
          readOnly:                                                   # bool
        cephfs:                                                       # k8s.io/kubernetes/pkg/api/v1.CephFSVolumeSource
          monitors:                                                   # []string
          - [string]                                                  #
          user:                                                       # string
          secretFile:                                                 # string
          secretRef:                                                  # k8s.io/kubernetes/pkg/api/v1.LocalObjectReference
            name:                                                     # string
          readOnly:                                                   # bool
        flocker:                                                      # k8s.io/kubernetes/pkg/api/v1.FlockerVolumeSource
          datasetName:                                                # string
        downwardAPI:                                                  # k8s.io/kubernetes/pkg/api/v1.DownwardAPIVolumeSource
          items:                                                      # []k8s.io/kubernetes/pkg/api/v1.DownwardAPIVolumeFile
          - path:                                                     # string
            fieldRef:                                                 # k8s.io/kubernetes/pkg/api/v1.ObjectFieldSelector
              apiVersion:                                             # string
              fieldPath:                                              # string
        fc:                                                           # k8s.io/kubernetes/pkg/api/v1.FCVolumeSource
          targetWWNs:                                                 # []string
          - [string]                                                  #
          lun:                                                        # int
          fsType:                                                     # string
          readOnly:                                                   # bool
        metadata:                                                     # k8s.io/kubernetes/pkg/api/v1.MetadataVolumeSource
          items:                                                      # []k8s.io/kubernetes/pkg/api/v1.MetadataFile (list of metadata files)
          - name:                                                     # string (the name of the file to be created)
            fieldRef:                                                 # k8s.io/kubernetes/pkg/api/v1.ObjectFieldSelector (selects a field of the pod. Supported fields: metadata.annotations, metadata.labels, metadata.name, metadata.namespace)
              apiVersion:                                             # string
              fieldPath:                                              # string
      containers:                                                     # []k8s.io/kubernetes/pkg/api/v1.Container
      - name:                                                         # string
        image:                                                        # string
        command:                                                      # []string
        - [string]                                                    #
        args:                                                         # []string
        - [string]                                                    #
        workingDir:                                                   # string
        ports:                                                        # []k8s.io/kubernetes/pkg/api/v1.ContainerPort
        - name:                                                       # string
          hostPort:                                                   # int
          containerPort:                                              # int
          protocol: TCP | UDP                                         # k8s.io/kubernetes/pkg/api/v1.Protocol
          hostIP:                                                     # string
        env:                                                          # []k8s.io/kubernetes/pkg/api/v1.EnvVar
        - name:                                                       # string
          value:                                                      # string
          valueFrom:                                                  # k8s.io/kubernetes/pkg/api/v1.EnvVarSource
            fieldRef:                                                 # k8s.io/kubernetes/pkg/api/v1.ObjectFieldSelector
              apiVersion:                                             # string
              fieldPath:                                              # string
        resources:                                                    # k8s.io/kubernetes/pkg/api/v1.ResourceRequirements
          limits:                                                     # k8s.io/kubernetes/pkg/api/v1.ResourceList
            [k8s.io/kubernetes/pkg/api/v1.ResourceName]:              # k8s.io/kubernetes/pkg/api/resource.Quantity
          requests:                                                   # k8s.io/kubernetes/pkg/api/v1.ResourceList
            [k8s.io/kubernetes/pkg/api/v1.ResourceName]:              # k8s.io/kubernetes/pkg/api/resource.Quantity
        volumeMounts:                                                 # []k8s.io/kubernetes/pkg/api/v1.VolumeMount
        - name:                                                       # string
          readOnly:                                                   # bool
          mountPath:                                                  # string
        livenessProbe:                                                # k8s.io/kubernetes/pkg/api/v1.Probe
          exec:                                                       # k8s.io/kubernetes/pkg/api/v1.ExecAction
            command:                                                  # []string
            - [string]                                                #
          httpGet:                                                    # k8s.io/kubernetes/pkg/api/v1.HTTPGetAction
            path:                                                     # string
            port:                                                     # k8s.io/kubernetes/pkg/util.IntOrString
            host:                                                     # string
            scheme: HTTP | HTTPS                                      # k8s.io/kubernetes/pkg/api/v1.URIScheme
          tcpSocket:                                                  # k8s.io/kubernetes/pkg/api/v1.TCPSocketAction
            port:                                                     # k8s.io/kubernetes/pkg/util.IntOrString
          initialDelaySeconds:                                        # int64
          timeoutSeconds:                                             # int64
        readinessProbe:                                               # k8s.io/kubernetes/pkg/api/v1.Probe
          exec:                                                       # k8s.io/kubernetes/pkg/api/v1.ExecAction
            command:                                                  # []string
            - [string]                                                #
          httpGet:                                                    # k8s.io/kubernetes/pkg/api/v1.HTTPGetAction
            path:                                                     # string
            port:                                                     # k8s.io/kubernetes/pkg/util.IntOrString
            host:                                                     # string
            scheme: HTTP | HTTPS                                      # k8s.io/kubernetes/pkg/api/v1.URIScheme
          tcpSocket:                                                  # k8s.io/kubernetes/pkg/api/v1.TCPSocketAction
            port:                                                     # k8s.io/kubernetes/pkg/util.IntOrString
          initialDelaySeconds:                                        # int64
          timeoutSeconds:                                             # int64
        lifecycle:                                                    # k8s.io/kubernetes/pkg/api/v1.Lifecycle
          postStart:                                                  # k8s.io/kubernetes/pkg/api/v1.Handler
            exec:                                                     # k8s.io/kubernetes/pkg/api/v1.ExecAction
              command:                                                # []string
              - [string]                                              #
            httpGet:                                                  # k8s.io/kubernetes/pkg/api/v1.HTTPGetAction
              path:                                                   # string
              port:                                                   # k8s.io/kubernetes/pkg/util.IntOrString
              host:                                                   # string
              scheme: HTTP | HTTPS                                    # k8s.io/kubernetes/pkg/api/v1.URIScheme
            tcpSocket:                                                # k8s.io/kubernetes/pkg/api/v1.TCPSocketAction
              port:                                                   # k8s.io/kubernetes/pkg/util.IntOrString
          preStop:                                                    # k8s.io/kubernetes/pkg/api/v1.Handler
            exec:                                                     # k8s.io/kubernetes/pkg/api/v1.ExecAction
              command:                                                # []string
              - [string]                                              #
            httpGet:                                                  # k8s.io/kubernetes/pkg/api/v1.HTTPGetAction
              path:                                                   # string
              port:                                                   # k8s.io/kubernetes/pkg/util.IntOrString
              host:                                                   # string
              scheme: HTTP | HTTPS                                    # k8s.io/kubernetes/pkg/api/v1.URIScheme
            tcpSocket:                                                # k8s.io/kubernetes/pkg/api/v1.TCPSocketAction
              port:                                                   # k8s.io/kubernetes/pkg/util.IntOrString
        terminationMessagePath:                                       # string
        imagePullPolicy: Always | IfNotPresent | Never                # k8s.io/kubernetes/pkg/api/v1.PullPolicy
        securityContext:                                              # k8s.io/kubernetes/pkg/api/v1.SecurityContext
          capabilities:                                               # k8s.io/kubernetes/pkg/api/v1.Capabilities
            add:                                                      # []k8s.io/kubernetes/pkg/api/v1.Capability
            - [k8s.io/kubernetes/pkg/api/v1.Capability]               #
            drop:                                                     # []k8s.io/kubernetes/pkg/api/v1.Capability
            - [k8s.io/kubernetes/pkg/api/v1.Capability]               #
          privileged:                                                 # bool
          seLinuxOptions:                                             # k8s.io/kubernetes/pkg/api/v1.SELinuxOptions
            user:                                                     # string
            role:                                                     # string
            type:                                                     # string
            level:                                                    # string
          runAsUser:                                                  # int64
          runAsNonRoot:                                               # bool
        stdin:                                                        # bool
        stdinOnce:                                                    # bool
        tty:                                                          # bool
      restartPolicy: Always | Never | OnFailure                       # k8s.io/kubernetes/pkg/api/v1.RestartPolicy
      terminationGracePeriodSeconds:                                  # int64
      activeDeadlineSeconds:                                          # int64
      dnsPolicy: ClusterFirst | Default                               # k8s.io/kubernetes/pkg/api/v1.DNSPolicy
      nodeSelector:                                                   # map[string]string
        [string]:                                                     # string
      host:                                                           # string (deprecated, use nodeName instead)
      serviceAccountName:                                             # string
      serviceAccount:                                                 # string
      nodeName:                                                       # string
      hostNetwork:                                                    # bool
      hostPID:                                                        # bool
      hostIPC:                                                        # bool
      securityContext:                                                # k8s.io/kubernetes/pkg/api/v1.PodSecurityContext
        seLinuxOptions:                                               # k8s.io/kubernetes/pkg/api/v1.SELinuxOptions
          user:                                                       # string
          role:                                                       # string
          type:                                                       # string
          level:                                                      # string
        runAsUser:                                                    # int64
        runAsNonRoot:                                                 # bool
        supplementalGroups:                                           # []int64
        - [int64]                                                     #
        fsGroup:                                                      # int64
      imagePullSecrets:                                               # []k8s.io/kubernetes/pkg/api/v1.LocalObjectReference
      - name:                                                         # string
status:                                                               # github.com/openshift/origin/pkg/deploy/api/v1.DeploymentConfigStatus (the current state of the latest deployment)
  latestVersion:                                                      # int (used to determine whether the current deployment is out of sync)
  details:                                                            # github.com/openshift/origin/pkg/deploy/api/v1.DeploymentDetails (reasons for the last update to the config)
    message:                                                          # string (a user specified change message)
    causes:                                                           # []github.com/openshift/origin/pkg/deploy/api/v1.DeploymentCause (extended data associated with all the causes for creating a new deployment)
    - type: ConfigChange | ImageChange                                # github.com/openshift/origin/pkg/deploy/api/v1.DeploymentTriggerType (the type of trigger that resulted in a new deployment)
      imageTrigger:                                                   # github.com/openshift/origin/pkg/deploy/api/v1.DeploymentCauseImageTrigger (image trigger details (if applicable))
        from:                                                         # k8s.io/kubernetes/pkg/api/v1.ObjectReference (a reference the changed object which triggered a deployment)
          kind:                                                       # string
          namespace:                                                  # string
          name:                                                       # string
          uid:                                                        # k8s.io/kubernetes/pkg/types.UID
          apiVersion:                                                 # string
          resourceVersion:                                            # string
          fieldPath:                                                  # string

DeploymentConfigList
====================

DeploymentConfigList is a collection of deployment configs.

kind: DeploymentConfigList                                            # string
apiVersion: v1                                                        # string
metadata:                                                             # k8s.io/kubernetes/pkg/api/unversioned.ListMeta
  selfLink:                                                           # string
  resourceVersion:                                                    # string
items:                                                                # []github.com/openshift/origin/pkg/deploy/api/v1.DeploymentConfig (a list of deployment configs)
- kind:                                                               # string
  apiVersion:                                                         # string
  metadata:                                                           # k8s.io/kubernetes/pkg/api/v1.ObjectMeta
    name:                                                             # string
    generateName:                                                     # string
    namespace:                                                        # string
    selfLink:                                                         # string
    uid:                                                              # k8s.io/kubernetes/pkg/types.UID
    resourceVersion:                                                  # string
    generation:                                                       # int64
    creationTimestamp:                                                # k8s.io/kubernetes/pkg/api/unversioned.Time
    deletionTimestamp:                                                # k8s.io/kubernetes/pkg/api/unversioned.Time
    deletionGracePeriodSeconds:                                       # int64
    labels:                                                           # map[string]string
      [string]:                                                       # string
    annotations:                                                      # map[string]string
      [string]:                                                       # string
  spec:                                                               # github.com/openshift/origin/pkg/deploy/api/v1.DeploymentConfigSpec (a desired deployment state and how to deploy it)
    strategy:                                                         # github.com/openshift/origin/pkg/deploy/api/v1.DeploymentStrategy (how a deployment is executed)
      type: Custom | Recreate | Rolling                               # github.com/openshift/origin/pkg/deploy/api/v1.DeploymentStrategyType (the name of a deployment strategy)
      customParams:                                                   # github.com/openshift/origin/pkg/deploy/api/v1.CustomDeploymentStrategyParams (input to the Custom deployment strategy)
        image:                                                        # string (a Docker image which can carry out a deployment)
        environment:                                                  # []k8s.io/kubernetes/pkg/api/v1.EnvVar (environment variables provided to the deployment process container)
        - name:                                                       # string
          value:                                                      # string
          valueFrom:                                                  # k8s.io/kubernetes/pkg/api/v1.EnvVarSource
            fieldRef:                                                 # k8s.io/kubernetes/pkg/api/v1.ObjectFieldSelector
              apiVersion:                                             # string
              fieldPath:                                              # string
        command:                                                      # []string (optionally overrides the container command (default is specified by the image))
        - [string]                                                    #
      recreateParams:                                                 # github.com/openshift/origin/pkg/deploy/api/v1.RecreateDeploymentStrategyParams (input to the Recreate deployment strategy)
        pre:                                                          # github.com/openshift/origin/pkg/deploy/api/v1.LifecycleHook (a hook executed before the strategy starts the deployment)
          failurePolicy: Abort | Ignore | Retry                       # github.com/openshift/origin/pkg/deploy/api/v1.LifecycleHookFailurePolicy (what action to take if the hook fails)
          execNewPod:                                                 # github.com/openshift/origin/pkg/deploy/api/v1.ExecNewPodHook (options for an ExecNewPodHook)
            command:                                                  # []string (the hook command and its arguments)
            - [string]                                                #
            env:                                                      # []k8s.io/kubernetes/pkg/api/v1.EnvVar (environment variables provided to the hook container)
            - name:                                                   # string
              value:                                                  # string
              valueFrom:                                              # k8s.io/kubernetes/pkg/api/v1.EnvVarSource
                fieldRef:                                             # k8s.io/kubernetes/pkg/api/v1.ObjectFieldSelector
                  apiVersion:                                         # string
                  fieldPath:                                          # string
            containerName:                                            # string (the name of a container from the pod template whose image will be used for the hook container)
            volumes:                                                  # []string (the names of volumes from the pod template which should be included in the hook pod; an empty list means no volumes will be copied, and names not found in the pod spec will be ignored)
            - [string]                                                #
        post:                                                         # github.com/openshift/origin/pkg/deploy/api/v1.LifecycleHook (a hook executed after the strategy finishes the deployment)
          failurePolicy: Abort | Ignore | Retry                       # github.com/openshift/origin/pkg/deploy/api/v1.LifecycleHookFailurePolicy (what action to take if the hook fails)
          execNewPod:                                                 # github.com/openshift/origin/pkg/deploy/api/v1.ExecNewPodHook (options for an ExecNewPodHook)
            command:                                                  # []string (the hook command and its arguments)
            - [string]                                                #
            env:                                                      # []k8s.io/kubernetes/pkg/api/v1.EnvVar (environment variables provided to the hook container)
            - name:                                                   # string
              value:                                                  # string
              valueFrom:                                              # k8s.io/kubernetes/pkg/api/v1.EnvVarSource
                fieldRef:                                             # k8s.io/kubernetes/pkg/api/v1.ObjectFieldSelector
                  apiVersion:                                         # string
                  fieldPath:                                          # string
            containerName:                                            # string (the name of a container from the pod template whose image will be used for the hook container)
            volumes:                                                  # []string (the names of volumes from the pod template which should be included in the hook pod; an empty list means no volumes will be copied, and names not found in the pod spec will be ignored)
            - [string]                                                #
      rollingParams:                                                  # github.com/openshift/origin/pkg/deploy/api/v1.RollingDeploymentStrategyParams (input to the Rolling deployment strategy)
        updatePeriodSeconds:                                          # int64 (the time to wait between individual pod updates)
        intervalSeconds:                                              # int64 (the time to wait between polling deployment status after update)
        timeoutSeconds:                                               # int64 (the time to wait for updates before giving up)
        maxUnavailable:                                               # k8s.io/kubernetes/pkg/util.IntOrString (max number of pods that can be unavailable during the update; value can be an absolute number or a percentage of total pods at start of update)
        maxSurge:                                                     # k8s.io/kubernetes/pkg/util.IntOrString (max number of pods that can be scheduled above the original number of pods; value can be an absolute number or a percentage of total pods at start of update)
        updatePercent:                                                # int (the percentage of replicas to scale up or down each interval (negative value switches scale order to down/up instead of up/down))
        pre:                                                          # github.com/openshift/origin/pkg/deploy/api/v1.LifecycleHook (a hook executed before the strategy starts the deployment)
          failurePolicy: Abort | Ignore | Retry                       # github.com/openshift/origin/pkg/deploy/api/v1.LifecycleHookFailurePolicy (what action to take if the hook fails)
          execNewPod:                                                 # github.com/openshift/origin/pkg/deploy/api/v1.ExecNewPodHook (options for an ExecNewPodHook)
            command:                                                  # []string (the hook command and its arguments)
            - [string]                                                #
            env:                                                      # []k8s.io/kubernetes/pkg/api/v1.EnvVar (environment variables provided to the hook container)
            - name:                                                   # string
              value:                                                  # string
              valueFrom:                                              # k8s.io/kubernetes/pkg/api/v1.EnvVarSource
                fieldRef:                                             # k8s.io/kubernetes/pkg/api/v1.ObjectFieldSelector
                  apiVersion:                                         # string
                  fieldPath:                                          # string
            containerName:                                            # string (the name of a container from the pod template whose image will be used for the hook container)
            volumes:                                                  # []string (the names of volumes from the pod template which should be included in the hook pod; an empty list means no volumes will be copied, and names not found in the pod spec will be ignored)
            - [string]                                                #
        post:                                                         # github.com/openshift/origin/pkg/deploy/api/v1.LifecycleHook (a hook executed after the strategy finishes the deployment)
          failurePolicy: Abort | Ignore | Retry                       # github.com/openshift/origin/pkg/deploy/api/v1.LifecycleHookFailurePolicy (what action to take if the hook fails)
          execNewPod:                                                 # github.com/openshift/origin/pkg/deploy/api/v1.ExecNewPodHook (options for an ExecNewPodHook)
            command:                                                  # []string (the hook command and its arguments)
            - [string]                                                #
            env:                                                      # []k8s.io/kubernetes/pkg/api/v1.EnvVar (environment variables provided to the hook container)
            - name:                                                   # string
              value:                                                  # string
              valueFrom:                                              # k8s.io/kubernetes/pkg/api/v1.EnvVarSource
                fieldRef:                                             # k8s.io/kubernetes/pkg/api/v1.ObjectFieldSelector
                  apiVersion:                                         # string
                  fieldPath:                                          # string
            containerName:                                            # string (the name of a container from the pod template whose image will be used for the hook container)
            volumes:                                                  # []string (the names of volumes from the pod template which should be included in the hook pod; an empty list means no volumes will be copied, and names not found in the pod spec will be ignored)
            - [string]                                                #
      resources:                                                      # k8s.io/kubernetes/pkg/api/v1.ResourceRequirements (resource requirements to execute the deployment)
        limits:                                                       # k8s.io/kubernetes/pkg/api/v1.ResourceList
          [k8s.io/kubernetes/pkg/api/v1.ResourceName]:                # k8s.io/kubernetes/pkg/api/resource.Quantity
        requests:                                                     # k8s.io/kubernetes/pkg/api/v1.ResourceList
          [k8s.io/kubernetes/pkg/api/v1.ResourceName]:                # k8s.io/kubernetes/pkg/api/resource.Quantity
      labels:                                                         # map[string]string (labels for deployer and hook pods)
        [string]:                                                     # string
      annotations:                                                    # map[string]string (annotations for deployer and hook pods)
        [string]:                                                     # string
    triggers:                                                         # []github.com/openshift/origin/pkg/deploy/api/v1.DeploymentTriggerPolicy (how new deployments are triggered)
    - type: ConfigChange | ImageChange                                # github.com/openshift/origin/pkg/deploy/api/v1.DeploymentTriggerType (the type of the trigger)
      imageChangeParams:                                              # github.com/openshift/origin/pkg/deploy/api/v1.DeploymentTriggerImageChangeParams (input to the ImageChange trigger)
        automatic:                                                    # bool (whether detection of a new tag value should trigger a deployment)
        containerNames:                                               # []string (restricts tag updates to a set of container names in the pod)
        - [string]                                                    #
        from:                                                         # k8s.io/kubernetes/pkg/api/v1.ObjectReference (a reference to an ImageRepository, ImageStream, or ImageStreamTag to watch for changes)
          kind:                                                       # string
          namespace:                                                  # string
          name:                                                       # string
          uid:                                                        # k8s.io/kubernetes/pkg/types.UID
          apiVersion:                                                 # string
          resourceVersion:                                            # string
          fieldPath:                                                  # string
        lastTriggeredImage:                                           # string (the last image to be triggered)
    replicas:                                                         # int (the desired number of replicas)
    selector:                                                         # map[string]string (a label query over pods that should match the replicas count)
      [string]:                                                       # string
    template:                                                         # k8s.io/kubernetes/pkg/api/v1.PodTemplateSpec (describes the pod that will be created if insufficient replicas are detected; takes precedence over a template reference)
      metadata:                                                       # k8s.io/kubernetes/pkg/api/v1.ObjectMeta
        name:                                                         # string
        generateName:                                                 # string
        namespace:                                                    # string
        selfLink:                                                     # string
        uid:                                                          # k8s.io/kubernetes/pkg/types.UID
        resourceVersion:                                              # string
        generation:                                                   # int64
        creationTimestamp:                                            # k8s.io/kubernetes/pkg/api/unversioned.Time
        deletionTimestamp:                                            # k8s.io/kubernetes/pkg/api/unversioned.Time
        deletionGracePeriodSeconds:                                   # int64
        labels:                                                       # map[string]string
          [string]:                                                   # string
        annotations:                                                  # map[string]string
          [string]:                                                   # string
      spec:                                                           # k8s.io/kubernetes/pkg/api/v1.PodSpec
        volumes:                                                      # []k8s.io/kubernetes/pkg/api/v1.Volume
        - name:                                                       # string
          hostPath:                                                   # k8s.io/kubernetes/pkg/api/v1.HostPathVolumeSource
            path:                                                     # string
          emptyDir:                                                   # k8s.io/kubernetes/pkg/api/v1.EmptyDirVolumeSource
            medium: | Memory                                          # k8s.io/kubernetes/pkg/api/v1.StorageMedium
          gcePersistentDisk:                                          # k8s.io/kubernetes/pkg/api/v1.GCEPersistentDiskVolumeSource
            pdName:                                                   # string
            fsType:                                                   # string
            partition:                                                # int
            readOnly:                                                 # bool
          awsElasticBlockStore:                                       # k8s.io/kubernetes/pkg/api/v1.AWSElasticBlockStoreVolumeSource
            volumeID:                                                 # string
            fsType:                                                   # string
            partition:                                                # int
            readOnly:                                                 # bool
          gitRepo:                                                    # k8s.io/kubernetes/pkg/api/v1.GitRepoVolumeSource
            repository:                                               # string
            revision:                                                 # string
          secret:                                                     # k8s.io/kubernetes/pkg/api/v1.SecretVolumeSource
            secretName:                                               # string
          nfs:                                                        # k8s.io/kubernetes/pkg/api/v1.NFSVolumeSource
            server:                                                   # string
            path:                                                     # string
            readOnly:                                                 # bool
          iscsi:                                                      # k8s.io/kubernetes/pkg/api/v1.ISCSIVolumeSource
            targetPortal:                                             # string
            iqn:                                                      # string
            lun:                                                      # int
            fsType:                                                   # string
            readOnly:                                                 # bool
          glusterfs:                                                  # k8s.io/kubernetes/pkg/api/v1.GlusterfsVolumeSource
            endpoints:                                                # string
            path:                                                     # string
            readOnly:                                                 # bool
          persistentVolumeClaim:                                      # k8s.io/kubernetes/pkg/api/v1.PersistentVolumeClaimVolumeSource
            claimName:                                                # string
            readOnly:                                                 # bool
          rbd:                                                        # k8s.io/kubernetes/pkg/api/v1.RBDVolumeSource
            monitors:                                                 # []string
            - [string]                                                #
            image:                                                    # string
            fsType:                                                   # string
            pool:                                                     # string
            user:                                                     # string
            keyring:                                                  # string
            secretRef:                                                # k8s.io/kubernetes/pkg/api/v1.LocalObjectReference
              name:                                                   # string
            readOnly:                                                 # bool
          cinder:                                                     # k8s.io/kubernetes/pkg/api/v1.CinderVolumeSource
            volumeID:                                                 # string
            fsType:                                                   # string
            readOnly:                                                 # bool
          cephfs:                                                     # k8s.io/kubernetes/pkg/api/v1.CephFSVolumeSource
            monitors:                                                 # []string
            - [string]                                                #
            user:                                                     # string
            secretFile:                                               # string
            secretRef:                                                # k8s.io/kubernetes/pkg/api/v1.LocalObjectReference
              name:                                                   # string
            readOnly:                                                 # bool
          flocker:                                                    # k8s.io/kubernetes/pkg/api/v1.FlockerVolumeSource
            datasetName:                                              # string
          downwardAPI:                                                # k8s.io/kubernetes/pkg/api/v1.DownwardAPIVolumeSource
            items:                                                    # []k8s.io/kubernetes/pkg/api/v1.DownwardAPIVolumeFile
            - path:                                                   # string
              fieldRef:                                               # k8s.io/kubernetes/pkg/api/v1.ObjectFieldSelector
                apiVersion:                                           # string
                fieldPath:                                            # string
          fc:                                                         # k8s.io/kubernetes/pkg/api/v1.FCVolumeSource
            targetWWNs:                                               # []string
            - [string]                                                #
            lun:                                                      # int
            fsType:                                                   # string
            readOnly:                                                 # bool
          metadata:                                                   # k8s.io/kubernetes/pkg/api/v1.MetadataVolumeSource
            items:                                                    # []k8s.io/kubernetes/pkg/api/v1.MetadataFile (list of metadata files)
            - name:                                                   # string (the name of the file to be created)
              fieldRef:                                               # k8s.io/kubernetes/pkg/api/v1.ObjectFieldSelector (selects a field of the pod. Supported fields: metadata.annotations, metadata.labels, metadata.name, metadata.namespace)
                apiVersion:                                           # string
                fieldPath:                                            # string
        containers:                                                   # []k8s.io/kubernetes/pkg/api/v1.Container
        - name:                                                       # string
          image:                                                      # string
          command:                                                    # []string
          - [string]                                                  #
          args:                                                       # []string
          - [string]                                                  #
          workingDir:                                                 # string
          ports:                                                      # []k8s.io/kubernetes/pkg/api/v1.ContainerPort
          - name:                                                     # string
            hostPort:                                                 # int
            containerPort:                                            # int
            protocol: TCP | UDP                                       # k8s.io/kubernetes/pkg/api/v1.Protocol
            hostIP:                                                   # string
          env:                                                        # []k8s.io/kubernetes/pkg/api/v1.EnvVar
          - name:                                                     # string
            value:                                                    # string
            valueFrom:                                                # k8s.io/kubernetes/pkg/api/v1.EnvVarSource
              fieldRef:                                               # k8s.io/kubernetes/pkg/api/v1.ObjectFieldSelector
                apiVersion:                                           # string
                fieldPath:                                            # string
          resources:                                                  # k8s.io/kubernetes/pkg/api/v1.ResourceRequirements
            limits:                                                   # k8s.io/kubernetes/pkg/api/v1.ResourceList
              [k8s.io/kubernetes/pkg/api/v1.ResourceName]:            # k8s.io/kubernetes/pkg/api/resource.Quantity
            requests:                                                 # k8s.io/kubernetes/pkg/api/v1.ResourceList
              [k8s.io/kubernetes/pkg/api/v1.ResourceName]:            # k8s.io/kubernetes/pkg/api/resource.Quantity
          volumeMounts:                                               # []k8s.io/kubernetes/pkg/api/v1.VolumeMount
          - name:                                                     # string
            readOnly:                                                 # bool
            mountPath:                                                # string
          livenessProbe:                                              # k8s.io/kubernetes/pkg/api/v1.Probe
            exec:                                                     # k8s.io/kubernetes/pkg/api/v1.ExecAction
              command:                                                # []string
              - [string]                                              #
            httpGet:                                                  # k8s.io/kubernetes/pkg/api/v1.HTTPGetAction
              path:                                                   # string
              port:                                                   # k8s.io/kubernetes/pkg/util.IntOrString
              host:                                                   # string
              scheme: HTTP | HTTPS                                    # k8s.io/kubernetes/pkg/api/v1.URIScheme
            tcpSocket:                                                # k8s.io/kubernetes/pkg/api/v1.TCPSocketAction
              port:                                                   # k8s.io/kubernetes/pkg/util.IntOrString
            initialDelaySeconds:                                      # int64
            timeoutSeconds:                                           # int64
          readinessProbe:                                             # k8s.io/kubernetes/pkg/api/v1.Probe
            exec:                                                     # k8s.io/kubernetes/pkg/api/v1.ExecAction
              command:                                                # []string
              - [string]                                              #
            httpGet:                                                  # k8s.io/kubernetes/pkg/api/v1.HTTPGetAction
              path:                                                   # string
              port:                                                   # k8s.io/kubernetes/pkg/util.IntOrString
              host:                                                   # string
              scheme: HTTP | HTTPS                                    # k8s.io/kubernetes/pkg/api/v1.URIScheme
            tcpSocket:                                                # k8s.io/kubernetes/pkg/api/v1.TCPSocketAction
              port:                                                   # k8s.io/kubernetes/pkg/util.IntOrString
            initialDelaySeconds:                                      # int64
            timeoutSeconds:                                           # int64
          lifecycle:                                                  # k8s.io/kubernetes/pkg/api/v1.Lifecycle
            postStart:                                                # k8s.io/kubernetes/pkg/api/v1.Handler
              exec:                                                   # k8s.io/kubernetes/pkg/api/v1.ExecAction
                command:                                              # []string
                - [string]                                            #
              httpGet:                                                # k8s.io/kubernetes/pkg/api/v1.HTTPGetAction
                path:                                                 # string
                port:                                                 # k8s.io/kubernetes/pkg/util.IntOrString
                host:                                                 # string
                scheme: HTTP | HTTPS                                  # k8s.io/kubernetes/pkg/api/v1.URIScheme
              tcpSocket:                                              # k8s.io/kubernetes/pkg/api/v1.TCPSocketAction
                port:                                                 # k8s.io/kubernetes/pkg/util.IntOrString
            preStop:                                                  # k8s.io/kubernetes/pkg/api/v1.Handler
              exec:                                                   # k8s.io/kubernetes/pkg/api/v1.ExecAction
                command:                                              # []string
                - [string]                                            #
              httpGet:                                                # k8s.io/kubernetes/pkg/api/v1.HTTPGetAction
                path:                                                 # string
                port:                                                 # k8s.io/kubernetes/pkg/util.IntOrString
                host:                                                 # string
                scheme: HTTP | HTTPS                                  # k8s.io/kubernetes/pkg/api/v1.URIScheme
              tcpSocket:                                              # k8s.io/kubernetes/pkg/api/v1.TCPSocketAction
                port:                                                 # k8s.io/kubernetes/pkg/util.IntOrString
          terminationMessagePath:                                     # string
          imagePullPolicy: Always | IfNotPresent | Never              # k8s.io/kubernetes/pkg/api/v1.PullPolicy
          securityContext:                                            # k8s.io/kubernetes/pkg/api/v1.SecurityContext
            capabilities:                                             # k8s.io/kubernetes/pkg/api/v1.Capabilities
              add:                                                    # []k8s.io/kubernetes/pkg/api/v1.Capability
              - [k8s.io/kubernetes/pkg/api/v1.Capability]             #
              drop:                                                   # []k8s.io/kubernetes/pkg/api/v1.Capability
              - [k8s.io/kubernetes/pkg/api/v1.Capability]             #
            privileged:                                               # bool
            seLinuxOptions:                                           # k8s.io/kubernetes/pkg/api/v1.SELinuxOptions
              user:                                                   # string
              role:                                                   # string
              type:                                                   # string
              level:                                                  # string
            runAsUser:                                                # int64
            runAsNonRoot:                                             # bool
          stdin:                                                      # bool
          stdinOnce:                                                  # bool
          tty:                                                        # bool
        restartPolicy: Always | Never | OnFailure                     # k8s.io/kubernetes/pkg/api/v1.RestartPolicy
        terminationGracePeriodSeconds:                                # int64
        activeDeadlineSeconds:                                        # int64
        dnsPolicy: ClusterFirst | Default                             # k8s.io/kubernetes/pkg/api/v1.DNSPolicy
        nodeSelector:                                                 # map[string]string
          [string]:                                                   # string
        host:                                                         # string (deprecated, use nodeName instead)
        serviceAccountName:                                           # string
        serviceAccount:                                               # string
        nodeName:                                                     # string
        hostNetwork:                                                  # bool
        hostPID:                                                      # bool
        hostIPC:                                                      # bool
        securityContext:                                              # k8s.io/kubernetes/pkg/api/v1.PodSecurityContext
          seLinuxOptions:                                             # k8s.io/kubernetes/pkg/api/v1.SELinuxOptions
            user:                                                     # string
            role:                                                     # string
            type:                                                     # string
            level:                                                    # string
          runAsUser:                                                  # int64
          runAsNonRoot:                                               # bool
          supplementalGroups:                                         # []int64
          - [int64]                                                   #
          fsGroup:                                                    # int64
        imagePullSecrets:                                             # []k8s.io/kubernetes/pkg/api/v1.LocalObjectReference
        - name:                                                       # string
  status:                                                             # github.com/openshift/origin/pkg/deploy/api/v1.DeploymentConfigStatus (the current state of the latest deployment)
    latestVersion:                                                    # int (used to determine whether the current deployment is out of sync)
    details:                                                          # github.com/openshift/origin/pkg/deploy/api/v1.DeploymentDetails (reasons for the last update to the config)
      message:                                                        # string (a user specified change message)
      causes:                                                         # []github.com/openshift/origin/pkg/deploy/api/v1.DeploymentCause (extended data associated with all the causes for creating a new deployment)
      - type: ConfigChange | ImageChange                              # github.com/openshift/origin/pkg/deploy/api/v1.DeploymentTriggerType (the type of trigger that resulted in a new deployment)
        imageTrigger:                                                 # github.com/openshift/origin/pkg/deploy/api/v1.DeploymentCauseImageTrigger (image trigger details (if applicable))
          from:                                                       # k8s.io/kubernetes/pkg/api/v1.ObjectReference (a reference the changed object which triggered a deployment)
            kind:                                                     # string
            namespace:                                                # string
            name:                                                     # string
            uid:                                                      # k8s.io/kubernetes/pkg/types.UID
            apiVersion:                                               # string
            resourceVersion:                                          # string
            fieldPath:                                                # string

DeploymentConfigRollback
========================

DeploymentConfigRollback provides the input to rollback generation.

kind: DeploymentConfigRollback                                        # string
apiVersion: v1                                                        # string
spec:                                                                 # github.com/openshift/origin/pkg/deploy/api/v1.DeploymentConfigRollbackSpec (options for rollback generation)
  from:                                                               # k8s.io/kubernetes/pkg/api/v1.ObjectReference (a reference to a deployment, which is a ReplicationController)
    kind:                                                             # string
    namespace:                                                        # string
    name:                                                             # string
    uid:                                                              # k8s.io/kubernetes/pkg/types.UID
    apiVersion:                                                       # string
    resourceVersion:                                                  # string
    fieldPath:                                                        # string
  includeTriggers:                                                    # bool (whether to include old config triggers in the rollback)
  includeTemplate:                                                    # bool (whether to include the old pod template spec in the rollback)
  includeReplicationMeta:                                             # bool (whether to include the replica count and replica selector in the rollback)
  includeStrategy:                                                    # bool (whether to include the deployment strategy in the rollback)

DeploymentLog
=============

DeploymentLog represents the logs for a deployment

kind: DeploymentLog                                                   # string
apiVersion: v1                                                        # string

DeploymentLogOptions
====================

DeploymentLogOptions is the REST options for a deployment log

kind: DeploymentLogOptions                                            # string
apiVersion: v1                                                        # string
container:                                                            # string (the container for which to stream logs; defaults to only container if there is one container in the pod)
follow:                                                               # bool (if true indicates that the log should be streamed; defaults to false)
previous:                                                             # bool (return previous terminated container logs; defaults to false.)
sinceSeconds:                                                         # int64 (relative time in seconds before the current time from which to show logs)
sinceTime:                                                            # k8s.io/kubernetes/pkg/api/unversioned.Time (relative time in seconds before the current time from which to show logs)
timestamps:                                                           # bool (add an RFC3339 or RFC3339Nano timestamp at the beginning of every line of log output)
tailLines:                                                            # int64 (the number of lines from the end of the logs to show)
limitBytes:                                                           # int64 (the number of bytes to read from the server before terminating the log output)
nowait:                                                               # bool (if true indicates that the server should not wait for a log to be available before returning; defaults to false)
version:                                                              # int64 (the version of the deployment for which to view logs)

Image
=====

Image is an immutable representation of a Docker image and metadata at a point in time.

kind: Image                                                           # string
apiVersion: v1                                                        # string
metadata:                                                             # k8s.io/kubernetes/pkg/api/v1.ObjectMeta
  name:                                                               # string
  generateName:                                                       # string
  namespace:                                                          # string
  selfLink:                                                           # string
  uid:                                                                # k8s.io/kubernetes/pkg/types.UID
  resourceVersion:                                                    # string
  generation:                                                         # int64
  creationTimestamp:                                                  # k8s.io/kubernetes/pkg/api/unversioned.Time
  deletionTimestamp:                                                  # k8s.io/kubernetes/pkg/api/unversioned.Time
  deletionGracePeriodSeconds:                                         # int64
  labels:                                                             # map[string]string
    [string]:                                                         # string
  annotations:                                                        # map[string]string
    [string]:                                                         # string
dockerImageReference:                                                 # string (string that can be used to pull this image)
dockerImageMetadata:                                                  # k8s.io/kubernetes/pkg/runtime.RawExtension (metadata about this image)
dockerImageMetadataVersion:                                           # string (conveys version of the object, if empty defaults to '1.0')
dockerImageManifest:                                                  # string (raw JSON of the manifest)

ImageList
=========

ImageList is a list of Image objects.

kind: ImageList                                                       # string
apiVersion: v1                                                        # string
metadata:                                                             # k8s.io/kubernetes/pkg/api/unversioned.ListMeta
  selfLink:                                                           # string
  resourceVersion:                                                    # string
items:                                                                # []github.com/openshift/origin/pkg/image/api/v1.Image (list of image objects)
- kind:                                                               # string
  apiVersion:                                                         # string
  metadata:                                                           # k8s.io/kubernetes/pkg/api/v1.ObjectMeta
    name:                                                             # string
    generateName:                                                     # string
    namespace:                                                        # string
    selfLink:                                                         # string
    uid:                                                              # k8s.io/kubernetes/pkg/types.UID
    resourceVersion:                                                  # string
    generation:                                                       # int64
    creationTimestamp:                                                # k8s.io/kubernetes/pkg/api/unversioned.Time
    deletionTimestamp:                                                # k8s.io/kubernetes/pkg/api/unversioned.Time
    deletionGracePeriodSeconds:                                       # int64
    labels:                                                           # map[string]string
      [string]:                                                       # string
    annotations:                                                      # map[string]string
      [string]:                                                       # string
  dockerImageReference:                                               # string (string that can be used to pull this image)
  dockerImageMetadata:                                                # k8s.io/kubernetes/pkg/runtime.RawExtension (metadata about this image)
  dockerImageMetadataVersion:                                         # string (conveys version of the object, if empty defaults to '1.0')
  dockerImageManifest:                                                # string (raw JSON of the manifest)

ImageStream
===========

ImageStream stores a mapping of tags to images, metadata overrides that are applied
when images are tagged in a stream, and an optional reference to a Docker image
repository on a registry.

kind: ImageStream                                                     # string
apiVersion: v1                                                        # string
metadata:                                                             # k8s.io/kubernetes/pkg/api/v1.ObjectMeta
  name:                                                               # string
  generateName:                                                       # string
  namespace:                                                          # string
  selfLink:                                                           # string
  uid:                                                                # k8s.io/kubernetes/pkg/types.UID
  resourceVersion:                                                    # string
  generation:                                                         # int64
  creationTimestamp:                                                  # k8s.io/kubernetes/pkg/api/unversioned.Time
  deletionTimestamp:                                                  # k8s.io/kubernetes/pkg/api/unversioned.Time
  deletionGracePeriodSeconds:                                         # int64
  labels:                                                             # map[string]string
    [string]:                                                         # string
  annotations:                                                        # map[string]string
    [string]:                                                         # string
spec:                                                                 # github.com/openshift/origin/pkg/image/api/v1.ImageStreamSpec (desired state of the stream)
  dockerImageRepository:                                              # string (optional field if specified this stream is backed by a Docker repository on this server)
  tags:                                                               # []github.com/openshift/origin/pkg/image/api/v1.NamedTagReference (map arbitrary string values to specific image locators)
  - name:                                                             # string (name of tag)
    annotations:                                                      # map[string]string (annotations associated with images using this tag)
      [string]:                                                       # string
    from:                                                             # k8s.io/kubernetes/pkg/api/v1.ObjectReference (a reference to an image stream tag or image stream this tag should track)
      kind:                                                           # string
      namespace:                                                      # string
      name:                                                           # string
      uid:                                                            # k8s.io/kubernetes/pkg/types.UID
      apiVersion:                                                     # string
      resourceVersion:                                                # string
      fieldPath:                                                      # string
    reference:                                                        # bool (if true consider this tag a reference only and do not attempt to import metadata about the image)
status:                                                               # github.com/openshift/origin/pkg/image/api/v1.ImageStreamStatus (current state of the stream as observed by the system)
  dockerImageRepository:                                              # string (represents the effective location this stream may be accessed at, may be empty until the server determines where the repository is located)
  tags:                                                               # []github.com/openshift/origin/pkg/image/api/v1.NamedTagEventList (historical record of images associated with each tag, the first entry is the currently tagged image)
  - tag:                                                              # string (the tag)
    items:                                                            # []github.com/openshift/origin/pkg/image/api/v1.TagEvent (list of tag events related to the tag)
    - created:                                                        # k8s.io/kubernetes/pkg/api/unversioned.Time (when the event was created)
      dockerImageReference:                                           # string (the string that can be used to pull this image)
      image:                                                          # string (the image)

ImageStreamImage
================

ImageStreamImage represents an Image that is retrieved by image name from an ImageStream.

kind: ImageStreamImage                                                # string
apiVersion: v1                                                        # string
metadata:                                                             # k8s.io/kubernetes/pkg/api/v1.ObjectMeta
  name:                                                               # string
  generateName:                                                       # string
  namespace:                                                          # string
  selfLink:                                                           # string
  uid:                                                                # k8s.io/kubernetes/pkg/types.UID
  resourceVersion:                                                    # string
  generation:                                                         # int64
  creationTimestamp:                                                  # k8s.io/kubernetes/pkg/api/unversioned.Time
  deletionTimestamp:                                                  # k8s.io/kubernetes/pkg/api/unversioned.Time
  deletionGracePeriodSeconds:                                         # int64
  labels:                                                             # map[string]string
    [string]:                                                         # string
  annotations:                                                        # map[string]string
    [string]:                                                         # string
image:                                                                # github.com/openshift/origin/pkg/image/api/v1.Image (the image associated with the ImageStream and image name)
  kind:                                                               # string
  apiVersion:                                                         # string
  metadata:                                                           # k8s.io/kubernetes/pkg/api/v1.ObjectMeta
    name:                                                             # string
    generateName:                                                     # string
    namespace:                                                        # string
    selfLink:                                                         # string
    uid:                                                              # k8s.io/kubernetes/pkg/types.UID
    resourceVersion:                                                  # string
    generation:                                                       # int64
    creationTimestamp:                                                # k8s.io/kubernetes/pkg/api/unversioned.Time
    deletionTimestamp:                                                # k8s.io/kubernetes/pkg/api/unversioned.Time
    deletionGracePeriodSeconds:                                       # int64
    labels:                                                           # map[string]string
      [string]:                                                       # string
    annotations:                                                      # map[string]string
      [string]:                                                       # string
  dockerImageReference:                                               # string (string that can be used to pull this image)
  dockerImageMetadata:                                                # k8s.io/kubernetes/pkg/runtime.RawExtension (metadata about this image)
  dockerImageMetadataVersion:                                         # string (conveys version of the object, if empty defaults to '1.0')
  dockerImageManifest:                                                # string (raw JSON of the manifest)

ImageStreamList
===============

ImageStreamList is a list of ImageStream objects.

kind: ImageStreamList                                                 # string
apiVersion: v1                                                        # string
metadata:                                                             # k8s.io/kubernetes/pkg/api/unversioned.ListMeta
  selfLink:                                                           # string
  resourceVersion:                                                    # string
items:                                                                # []github.com/openshift/origin/pkg/image/api/v1.ImageStream (list of image stream objects)
- kind:                                                               # string
  apiVersion:                                                         # string
  metadata:                                                           # k8s.io/kubernetes/pkg/api/v1.ObjectMeta
    name:                                                             # string
    generateName:                                                     # string
    namespace:                                                        # string
    selfLink:                                                         # string
    uid:                                                              # k8s.io/kubernetes/pkg/types.UID
    resourceVersion:                                                  # string
    generation:                                                       # int64
    creationTimestamp:                                                # k8s.io/kubernetes/pkg/api/unversioned.Time
    deletionTimestamp:                                                # k8s.io/kubernetes/pkg/api/unversioned.Time
    deletionGracePeriodSeconds:                                       # int64
    labels:                                                           # map[string]string
      [string]:                                                       # string
    annotations:                                                      # map[string]string
      [string]:                                                       # string
  spec:                                                               # github.com/openshift/origin/pkg/image/api/v1.ImageStreamSpec (desired state of the stream)
    dockerImageRepository:                                            # string (optional field if specified this stream is backed by a Docker repository on this server)
    tags:                                                             # []github.com/openshift/origin/pkg/image/api/v1.NamedTagReference (map arbitrary string values to specific image locators)
    - name:                                                           # string (name of tag)
      annotations:                                                    # map[string]string (annotations associated with images using this tag)
        [string]:                                                     # string
      from:                                                           # k8s.io/kubernetes/pkg/api/v1.ObjectReference (a reference to an image stream tag or image stream this tag should track)
        kind:                                                         # string
        namespace:                                                    # string
        name:                                                         # string
        uid:                                                          # k8s.io/kubernetes/pkg/types.UID
        apiVersion:                                                   # string
        resourceVersion:                                              # string
        fieldPath:                                                    # string
      reference:                                                      # bool (if true consider this tag a reference only and do not attempt to import metadata about the image)
  status:                                                             # github.com/openshift/origin/pkg/image/api/v1.ImageStreamStatus (current state of the stream as observed by the system)
    dockerImageRepository:                                            # string (represents the effective location this stream may be accessed at, may be empty until the server determines where the repository is located)
    tags:                                                             # []github.com/openshift/origin/pkg/image/api/v1.NamedTagEventList (historical record of images associated with each tag, the first entry is the currently tagged image)
    - tag:                                                            # string (the tag)
      items:                                                          # []github.com/openshift/origin/pkg/image/api/v1.TagEvent (list of tag events related to the tag)
      - created:                                                      # k8s.io/kubernetes/pkg/api/unversioned.Time (when the event was created)
        dockerImageReference:                                         # string (the string that can be used to pull this image)
        image:                                                        # string (the image)

ImageStreamMapping
==================

ImageStreamMapping represents a mapping from a single tag to a Docker image as
well as the reference to the Docker image stream the image came from.

kind: ImageStreamMapping                                              # string
apiVersion: v1                                                        # string
metadata:                                                             # k8s.io/kubernetes/pkg/api/v1.ObjectMeta
  name:                                                               # string
  generateName:                                                       # string
  namespace:                                                          # string
  selfLink:                                                           # string
  uid:                                                                # k8s.io/kubernetes/pkg/types.UID
  resourceVersion:                                                    # string
  generation:                                                         # int64
  creationTimestamp:                                                  # k8s.io/kubernetes/pkg/api/unversioned.Time
  deletionTimestamp:                                                  # k8s.io/kubernetes/pkg/api/unversioned.Time
  deletionGracePeriodSeconds:                                         # int64
  labels:                                                             # map[string]string
    [string]:                                                         # string
  annotations:                                                        # map[string]string
    [string]:                                                         # string
image:                                                                # github.com/openshift/origin/pkg/image/api/v1.Image (a Docker image)
  kind:                                                               # string
  apiVersion:                                                         # string
  metadata:                                                           # k8s.io/kubernetes/pkg/api/v1.ObjectMeta
    name:                                                             # string
    generateName:                                                     # string
    namespace:                                                        # string
    selfLink:                                                         # string
    uid:                                                              # k8s.io/kubernetes/pkg/types.UID
    resourceVersion:                                                  # string
    generation:                                                       # int64
    creationTimestamp:                                                # k8s.io/kubernetes/pkg/api/unversioned.Time
    deletionTimestamp:                                                # k8s.io/kubernetes/pkg/api/unversioned.Time
    deletionGracePeriodSeconds:                                       # int64
    labels:                                                           # map[string]string
      [string]:                                                       # string
    annotations:                                                      # map[string]string
      [string]:                                                       # string
  dockerImageReference:                                               # string (string that can be used to pull this image)
  dockerImageMetadata:                                                # k8s.io/kubernetes/pkg/runtime.RawExtension (metadata about this image)
  dockerImageMetadataVersion:                                         # string (conveys version of the object, if empty defaults to '1.0')
  dockerImageManifest:                                                # string (raw JSON of the manifest)
tag:                                                                  # string (string value this image can be located with inside the stream)

ImageStreamTag
==============

ImageStreamTag represents an Image that is retrieved by tag name from an ImageStream.

kind: ImageStreamTag                                                  # string
apiVersion: v1                                                        # string
metadata:                                                             # k8s.io/kubernetes/pkg/api/v1.ObjectMeta
  name:                                                               # string
  generateName:                                                       # string
  namespace:                                                          # string
  selfLink:                                                           # string
  uid:                                                                # k8s.io/kubernetes/pkg/types.UID
  resourceVersion:                                                    # string
  generation:                                                         # int64
  creationTimestamp:                                                  # k8s.io/kubernetes/pkg/api/unversioned.Time
  deletionTimestamp:                                                  # k8s.io/kubernetes/pkg/api/unversioned.Time
  deletionGracePeriodSeconds:                                         # int64
  labels:                                                             # map[string]string
    [string]:                                                         # string
  annotations:                                                        # map[string]string
    [string]:                                                         # string
image:                                                                # github.com/openshift/origin/pkg/image/api/v1.Image (the image associated with the ImageStream and tag)
  kind:                                                               # string
  apiVersion:                                                         # string
  metadata:                                                           # k8s.io/kubernetes/pkg/api/v1.ObjectMeta
    name:                                                             # string
    generateName:                                                     # string
    namespace:                                                        # string
    selfLink:                                                         # string
    uid:                                                              # k8s.io/kubernetes/pkg/types.UID
    resourceVersion:                                                  # string
    generation:                                                       # int64
    creationTimestamp:                                                # k8s.io/kubernetes/pkg/api/unversioned.Time
    deletionTimestamp:                                                # k8s.io/kubernetes/pkg/api/unversioned.Time
    deletionGracePeriodSeconds:                                       # int64
    labels:                                                           # map[string]string
      [string]:                                                       # string
    annotations:                                                      # map[string]string
      [string]:                                                       # string
  dockerImageReference:                                               # string (string that can be used to pull this image)
  dockerImageMetadata:                                                # k8s.io/kubernetes/pkg/runtime.RawExtension (metadata about this image)
  dockerImageMetadataVersion:                                         # string (conveys version of the object, if empty defaults to '1.0')
  dockerImageManifest:                                                # string (raw JSON of the manifest)

ImageStreamTagList
==================

ImageStreamTagList is a list of ImageStreamTag objects.

kind: ImageStreamTagList                                              # string
apiVersion: v1                                                        # string
metadata:                                                             # k8s.io/kubernetes/pkg/api/unversioned.ListMeta
  selfLink:                                                           # string
  resourceVersion:                                                    # string
items:                                                                # []github.com/openshift/origin/pkg/image/api/v1.ImageStreamTag (list of image stream tag objects)
- kind:                                                               # string
  apiVersion:                                                         # string
  metadata:                                                           # k8s.io/kubernetes/pkg/api/v1.ObjectMeta
    name:                                                             # string
    generateName:                                                     # string
    namespace:                                                        # string
    selfLink:                                                         # string
    uid:                                                              # k8s.io/kubernetes/pkg/types.UID
    resourceVersion:                                                  # string
    generation:                                                       # int64
    creationTimestamp:                                                # k8s.io/kubernetes/pkg/api/unversioned.Time
    deletionTimestamp:                                                # k8s.io/kubernetes/pkg/api/unversioned.Time
    deletionGracePeriodSeconds:                                       # int64
    labels:                                                           # map[string]string
      [string]:                                                       # string
    annotations:                                                      # map[string]string
      [string]:                                                       # string
  image:                                                              # github.com/openshift/origin/pkg/image/api/v1.Image (the image associated with the ImageStream and tag)
    kind:                                                             # string
    apiVersion:                                                       # string
    metadata:                                                         # k8s.io/kubernetes/pkg/api/v1.ObjectMeta
      name:                                                           # string
      generateName:                                                   # string
      namespace:                                                      # string
      selfLink:                                                       # string
      uid:                                                            # k8s.io/kubernetes/pkg/types.UID
      resourceVersion:                                                # string
      generation:                                                     # int64
      creationTimestamp:                                              # k8s.io/kubernetes/pkg/api/unversioned.Time
      deletionTimestamp:                                              # k8s.io/kubernetes/pkg/api/unversioned.Time
      deletionGracePeriodSeconds:                                     # int64
      labels:                                                         # map[string]string
        [string]:                                                     # string
      annotations:                                                    # map[string]string
        [string]:                                                     # string
    dockerImageReference:                                             # string (string that can be used to pull this image)
    dockerImageMetadata:                                              # k8s.io/kubernetes/pkg/runtime.RawExtension (metadata about this image)
    dockerImageMetadataVersion:                                       # string (conveys version of the object, if empty defaults to '1.0')
    dockerImageManifest:                                              # string (raw JSON of the manifest)

OAuthAccessToken
================


kind: OAuthAccessToken                                                # string
apiVersion: v1                                                        # string
metadata:                                                             # k8s.io/kubernetes/pkg/api/v1.ObjectMeta
  name:                                                               # string
  generateName:                                                       # string
  namespace:                                                          # string
  selfLink:                                                           # string
  uid:                                                                # k8s.io/kubernetes/pkg/types.UID
  resourceVersion:                                                    # string
  generation:                                                         # int64
  creationTimestamp:                                                  # k8s.io/kubernetes/pkg/api/unversioned.Time
  deletionTimestamp:                                                  # k8s.io/kubernetes/pkg/api/unversioned.Time
  deletionGracePeriodSeconds:                                         # int64
  labels:                                                             # map[string]string
    [string]:                                                         # string
  annotations:                                                        # map[string]string
    [string]:                                                         # string
clientName:                                                           # string (references the client that created this token)
expiresIn:                                                            # int64 (is the seconds from creation time before this token expires)
scopes:                                                               # []string (list of requested scopes)
- [string]                                                            #
redirectURI:                                                          # string (redirection URI associated with the token)
userName:                                                             # string (user name associated with this token)
userUID:                                                              # string (unique UID associated with this token)
authorizeToken:                                                       # string (contains the token that authorized this token)
refreshToken:                                                         # string (optional value by which this token can be renewed)

OAuthAccessTokenList
====================


kind: OAuthAccessTokenList                                            # string
apiVersion: v1                                                        # string
metadata:                                                             # k8s.io/kubernetes/pkg/api/unversioned.ListMeta
  selfLink:                                                           # string
  resourceVersion:                                                    # string
items:                                                                # []github.com/openshift/origin/pkg/oauth/api/v1.OAuthAccessToken (list of oauth access tokens)
- kind:                                                               # string
  apiVersion:                                                         # string
  metadata:                                                           # k8s.io/kubernetes/pkg/api/v1.ObjectMeta
    name:                                                             # string
    generateName:                                                     # string
    namespace:                                                        # string
    selfLink:                                                         # string
    uid:                                                              # k8s.io/kubernetes/pkg/types.UID
    resourceVersion:                                                  # string
    generation:                                                       # int64
    creationTimestamp:                                                # k8s.io/kubernetes/pkg/api/unversioned.Time
    deletionTimestamp:                                                # k8s.io/kubernetes/pkg/api/unversioned.Time
    deletionGracePeriodSeconds:                                       # int64
    labels:                                                           # map[string]string
      [string]:                                                       # string
    annotations:                                                      # map[string]string
      [string]:                                                       # string
  clientName:                                                         # string (references the client that created this token)
  expiresIn:                                                          # int64 (is the seconds from creation time before this token expires)
  scopes:                                                             # []string (list of requested scopes)
  - [string]                                                          #
  redirectURI:                                                        # string (redirection URI associated with the token)
  userName:                                                           # string (user name associated with this token)
  userUID:                                                            # string (unique UID associated with this token)
  authorizeToken:                                                     # string (contains the token that authorized this token)
  refreshToken:                                                       # string (optional value by which this token can be renewed)

OAuthAuthorizeToken
===================


kind: OAuthAuthorizeToken                                             # string
apiVersion: v1                                                        # string
metadata:                                                             # k8s.io/kubernetes/pkg/api/v1.ObjectMeta
  name:                                                               # string
  generateName:                                                       # string
  namespace:                                                          # string
  selfLink:                                                           # string
  uid:                                                                # k8s.io/kubernetes/pkg/types.UID
  resourceVersion:                                                    # string
  generation:                                                         # int64
  creationTimestamp:                                                  # k8s.io/kubernetes/pkg/api/unversioned.Time
  deletionTimestamp:                                                  # k8s.io/kubernetes/pkg/api/unversioned.Time
  deletionGracePeriodSeconds:                                         # int64
  labels:                                                             # map[string]string
    [string]:                                                         # string
  annotations:                                                        # map[string]string
    [string]:                                                         # string
clientName:                                                           # string (references the client that created this token)
expiresIn:                                                            # int64 (seconds from creation time before this token expires)
scopes:                                                               # []string (list of requested scopes)
- [string]                                                            #
redirectURI:                                                          # string (redirection URI associated with the token)
state:                                                                # string (state data from request)
userName:                                                             # string (user name associated with this token)
userUID:                                                              # string (unique UID associated with this token.  userUID and userName must both match for this token to be valid)

OAuthAuthorizeTokenList
=======================


kind: OAuthAuthorizeTokenList                                         # string
apiVersion: v1                                                        # string
metadata:                                                             # k8s.io/kubernetes/pkg/api/unversioned.ListMeta
  selfLink:                                                           # string
  resourceVersion:                                                    # string
items:                                                                # []github.com/openshift/origin/pkg/oauth/api/v1.OAuthAuthorizeToken (list of oauth authorization tokens)
- kind:                                                               # string
  apiVersion:                                                         # string
  metadata:                                                           # k8s.io/kubernetes/pkg/api/v1.ObjectMeta
    name:                                                             # string
    generateName:                                                     # string
    namespace:                                                        # string
    selfLink:                                                         # string
    uid:                                                              # k8s.io/kubernetes/pkg/types.UID
    resourceVersion:                                                  # string
    generation:                                                       # int64
    creationTimestamp:                                                # k8s.io/kubernetes/pkg/api/unversioned.Time
    deletionTimestamp:                                                # k8s.io/kubernetes/pkg/api/unversioned.Time
    deletionGracePeriodSeconds:                                       # int64
    labels:                                                           # map[string]string
      [string]:                                                       # string
    annotations:                                                      # map[string]string
      [string]:                                                       # string
  clientName:                                                         # string (references the client that created this token)
  expiresIn:                                                          # int64 (seconds from creation time before this token expires)
  scopes:                                                             # []string (list of requested scopes)
  - [string]                                                          #
  redirectURI:                                                        # string (redirection URI associated with the token)
  state:                                                              # string (state data from request)
  userName:                                                           # string (user name associated with this token)
  userUID:                                                            # string (unique UID associated with this token.  userUID and userName must both match for this token to be valid)

OAuthClient
===========


kind: OAuthClient                                                     # string
apiVersion: v1                                                        # string
metadata:                                                             # k8s.io/kubernetes/pkg/api/v1.ObjectMeta
  name:                                                               # string
  generateName:                                                       # string
  namespace:                                                          # string
  selfLink:                                                           # string
  uid:                                                                # k8s.io/kubernetes/pkg/types.UID
  resourceVersion:                                                    # string
  generation:                                                         # int64
  creationTimestamp:                                                  # k8s.io/kubernetes/pkg/api/unversioned.Time
  deletionTimestamp:                                                  # k8s.io/kubernetes/pkg/api/unversioned.Time
  deletionGracePeriodSeconds:                                         # int64
  labels:                                                             # map[string]string
    [string]:                                                         # string
  annotations:                                                        # map[string]string
    [string]:                                                         # string
secret:                                                               # string (unique secret associated with a client)
respondWithChallenges:                                                # bool (indicates whether the client wants authentication needed responses made in the form of challenges instead of redirects)
redirectURIs:                                                         # []string (valid redirection URIs associated with a client)
- [string]                                                            #

OAuthClientAuthorization
========================


kind: OAuthClientAuthorization                                        # string
apiVersion: v1                                                        # string
metadata:                                                             # k8s.io/kubernetes/pkg/api/v1.ObjectMeta
  name:                                                               # string
  generateName:                                                       # string
  namespace:                                                          # string
  selfLink:                                                           # string
  uid:                                                                # k8s.io/kubernetes/pkg/types.UID
  resourceVersion:                                                    # string
  generation:                                                         # int64
  creationTimestamp:                                                  # k8s.io/kubernetes/pkg/api/unversioned.Time
  deletionTimestamp:                                                  # k8s.io/kubernetes/pkg/api/unversioned.Time
  deletionGracePeriodSeconds:                                         # int64
  labels:                                                             # map[string]string
    [string]:                                                         # string
  annotations:                                                        # map[string]string
    [string]:                                                         # string
clientName:                                                           # string (references the client that created this authorization)
userName:                                                             # string (user name that authorized this client)
userUID:                                                              # string (unique UID associated with this authorization. userUID and userName must both match for this authorization to be valid)
scopes:                                                               # []string (list of granted scopes)
- [string]                                                            #

OAuthClientAuthorizationList
============================


kind: OAuthClientAuthorizationList                                    # string
apiVersion: v1                                                        # string
metadata:                                                             # k8s.io/kubernetes/pkg/api/unversioned.ListMeta
  selfLink:                                                           # string
  resourceVersion:                                                    # string
items:                                                                # []github.com/openshift/origin/pkg/oauth/api/v1.OAuthClientAuthorization (list of oauth client authorizations)
- kind:                                                               # string
  apiVersion:                                                         # string
  metadata:                                                           # k8s.io/kubernetes/pkg/api/v1.ObjectMeta
    name:                                                             # string
    generateName:                                                     # string
    namespace:                                                        # string
    selfLink:                                                         # string
    uid:                                                              # k8s.io/kubernetes/pkg/types.UID
    resourceVersion:                                                  # string
    generation:                                                       # int64
    creationTimestamp:                                                # k8s.io/kubernetes/pkg/api/unversioned.Time
    deletionTimestamp:                                                # k8s.io/kubernetes/pkg/api/unversioned.Time
    deletionGracePeriodSeconds:                                       # int64
    labels:                                                           # map[string]string
      [string]:                                                       # string
    annotations:                                                      # map[string]string
      [string]:                                                       # string
  clientName:                                                         # string (references the client that created this authorization)
  userName:                                                           # string (user name that authorized this client)
  userUID:                                                            # string (unique UID associated with this authorization. userUID and userName must both match for this authorization to be valid)
  scopes:                                                             # []string (list of granted scopes)
  - [string]                                                          #

OAuthClientList
===============


kind: OAuthClientList                                                 # string
apiVersion: v1                                                        # string
metadata:                                                             # k8s.io/kubernetes/pkg/api/unversioned.ListMeta
  selfLink:                                                           # string
  resourceVersion:                                                    # string
items:                                                                # []github.com/openshift/origin/pkg/oauth/api/v1.OAuthClient (list of oauth clients)
- kind:                                                               # string
  apiVersion:                                                         # string
  metadata:                                                           # k8s.io/kubernetes/pkg/api/v1.ObjectMeta
    name:                                                             # string
    generateName:                                                     # string
    namespace:                                                        # string
    selfLink:                                                         # string
    uid:                                                              # k8s.io/kubernetes/pkg/types.UID
    resourceVersion:                                                  # string
    generation:                                                       # int64
    creationTimestamp:                                                # k8s.io/kubernetes/pkg/api/unversioned.Time
    deletionTimestamp:                                                # k8s.io/kubernetes/pkg/api/unversioned.Time
    deletionGracePeriodSeconds:                                       # int64
    labels:                                                           # map[string]string
      [string]:                                                       # string
    annotations:                                                      # map[string]string
      [string]:                                                       # string
  secret:                                                             # string (unique secret associated with a client)
  respondWithChallenges:                                              # bool (indicates whether the client wants authentication needed responses made in the form of challenges instead of redirects)
  redirectURIs:                                                       # []string (valid redirection URIs associated with a client)
  - [string]                                                          #

Project
=======

Project is a logical top-level container for a set of origin resources

kind: Project                                                         # string
apiVersion: v1                                                        # string
metadata:                                                             # k8s.io/kubernetes/pkg/api/v1.ObjectMeta
  name:                                                               # string
  generateName:                                                       # string
  namespace:                                                          # string
  selfLink:                                                           # string
  uid:                                                                # k8s.io/kubernetes/pkg/types.UID
  resourceVersion:                                                    # string
  generation:                                                         # int64
  creationTimestamp:                                                  # k8s.io/kubernetes/pkg/api/unversioned.Time
  deletionTimestamp:                                                  # k8s.io/kubernetes/pkg/api/unversioned.Time
  deletionGracePeriodSeconds:                                         # int64
  labels:                                                             # map[string]string
    [string]:                                                         # string
  annotations:                                                        # map[string]string
    [string]:                                                         # string
spec:                                                                 # github.com/openshift/origin/pkg/project/api/v1.ProjectSpec (spec defines the behavior of the Project)
  finalizers:                                                         # []k8s.io/kubernetes/pkg/api/v1.FinalizerName (an opaque list of values that must be empty to permanently remove object from storage)
  - [k8s.io/kubernetes/pkg/api/v1.FinalizerName]                      #
status:                                                               # github.com/openshift/origin/pkg/project/api/v1.ProjectStatus (status describes the current status of a Project; read-only)
  phase: Active | Terminating                                         # k8s.io/kubernetes/pkg/api/v1.NamespacePhase (phase is the current lifecycle phase of the project)

ProjectList
===========

ProjectList is a list of Project objects.

kind: ProjectList                                                     # string
apiVersion: v1                                                        # string
metadata:                                                             # k8s.io/kubernetes/pkg/api/unversioned.ListMeta
  selfLink:                                                           # string
  resourceVersion:                                                    # string
items:                                                                # []github.com/openshift/origin/pkg/project/api/v1.Project (list of projects)
- kind:                                                               # string
  apiVersion:                                                         # string
  metadata:                                                           # k8s.io/kubernetes/pkg/api/v1.ObjectMeta
    name:                                                             # string
    generateName:                                                     # string
    namespace:                                                        # string
    selfLink:                                                         # string
    uid:                                                              # k8s.io/kubernetes/pkg/types.UID
    resourceVersion:                                                  # string
    generation:                                                       # int64
    creationTimestamp:                                                # k8s.io/kubernetes/pkg/api/unversioned.Time
    deletionTimestamp:                                                # k8s.io/kubernetes/pkg/api/unversioned.Time
    deletionGracePeriodSeconds:                                       # int64
    labels:                                                           # map[string]string
      [string]:                                                       # string
    annotations:                                                      # map[string]string
      [string]:                                                       # string
  spec:                                                               # github.com/openshift/origin/pkg/project/api/v1.ProjectSpec (spec defines the behavior of the Project)
    finalizers:                                                       # []k8s.io/kubernetes/pkg/api/v1.FinalizerName (an opaque list of values that must be empty to permanently remove object from storage)
    - [k8s.io/kubernetes/pkg/api/v1.FinalizerName]                    #
  status:                                                             # github.com/openshift/origin/pkg/project/api/v1.ProjectStatus (status describes the current status of a Project; read-only)
    phase: Active | Terminating                                       # k8s.io/kubernetes/pkg/api/v1.NamespacePhase (phase is the current lifecycle phase of the project)

ProjectRequest
==============


kind: ProjectRequest                                                  # string
apiVersion: v1                                                        # string
metadata:                                                             # k8s.io/kubernetes/pkg/api/v1.ObjectMeta
  name:                                                               # string
  generateName:                                                       # string
  namespace:                                                          # string
  selfLink:                                                           # string
  uid:                                                                # k8s.io/kubernetes/pkg/types.UID
  resourceVersion:                                                    # string
  generation:                                                         # int64
  creationTimestamp:                                                  # k8s.io/kubernetes/pkg/api/unversioned.Time
  deletionTimestamp:                                                  # k8s.io/kubernetes/pkg/api/unversioned.Time
  deletionGracePeriodSeconds:                                         # int64
  labels:                                                             # map[string]string
    [string]:                                                         # string
  annotations:                                                        # map[string]string
    [string]:                                                         # string
displayName:                                                          # string (display name to apply to a project)
description:                                                          # string (description to apply to a project)

Route
=====

Route encapsulates the inputs needed to connect an alias to endpoints.

kind: Route                                                           # string
apiVersion: v1                                                        # string
metadata:                                                             # k8s.io/kubernetes/pkg/api/v1.ObjectMeta
  name:                                                               # string
  generateName:                                                       # string
  namespace:                                                          # string
  selfLink:                                                           # string
  uid:                                                                # k8s.io/kubernetes/pkg/types.UID
  resourceVersion:                                                    # string
  generation:                                                         # int64
  creationTimestamp:                                                  # k8s.io/kubernetes/pkg/api/unversioned.Time
  deletionTimestamp:                                                  # k8s.io/kubernetes/pkg/api/unversioned.Time
  deletionGracePeriodSeconds:                                         # int64
  labels:                                                             # map[string]string
    [string]:                                                         # string
  annotations:                                                        # map[string]string
    [string]:                                                         # string
spec:                                                                 # github.com/openshift/origin/pkg/route/api/v1.RouteSpec (desired state of the route)
  host:                                                               # string (optional: alias/dns that points to the service, must follow DNS 952 subdomain conventions)
  path:                                                               # string (optional: path that the router watches to route traffic to the service)
  to:                                                                 # k8s.io/kubernetes/pkg/api/v1.ObjectReference (an object the route points to.  only the service kind is allowed, and it will be defaulted to a service.)
    kind:                                                             # string
    namespace:                                                        # string
    name:                                                             # string
    uid:                                                              # k8s.io/kubernetes/pkg/types.UID
    apiVersion:                                                       # string
    resourceVersion:                                                  # string
    fieldPath:                                                        # string
  port:                                                               # github.com/openshift/origin/pkg/route/api/v1.RoutePort (port that should be used by the router; this is a hint to control which pod endpoint port is used; if empty routers may use all endpoints and ports)
    targetPort:                                                       # k8s.io/kubernetes/pkg/util.IntOrString (the target port on the endpoints for the service; if this is a string must match the named port, if an integer, must match the port number)
  tls:                                                                # github.com/openshift/origin/pkg/route/api/v1.TLSConfig (provides the ability to configure certificates and termination for the route)
    termination: edge | passthrough | reencrypt                       # github.com/openshift/origin/pkg/route/api/v1.TLSTerminationType (indicates termination type.  if not set, any termination config will be ignored)
    certificate:                                                      # string (provides certificate contents)
    key:                                                              # string (provides key file contents)
    caCertificate:                                                    # string (provides the cert authority certificate contents)
    destinationCACertificate:                                         # string (provides the contents of the ca certificate of the final destination.  When using re-encrypt termination this file should be provided in order to have routers use it for health checks on the secure connection)
    insecureEdgeTerminationPolicy:                                    # github.com/openshift/origin/pkg/route/api/v1.InsecureEdgeTerminationPolicyType (indicates desired behavior for insecure connections to an edge-terminated route.  If not set, insecure connections will not be allowed)
status:                                                               # github.com/openshift/origin/pkg/route/api/v1.RouteStatus (current state of the route)

RouteList
=========

RouteList is a collection of Routes.

kind: RouteList                                                       # string
apiVersion: v1                                                        # string
metadata:                                                             # k8s.io/kubernetes/pkg/api/unversioned.ListMeta
  selfLink:                                                           # string
  resourceVersion:                                                    # string
items:                                                                # []github.com/openshift/origin/pkg/route/api/v1.Route (list of routes)
- kind:                                                               # string
  apiVersion:                                                         # string
  metadata:                                                           # k8s.io/kubernetes/pkg/api/v1.ObjectMeta
    name:                                                             # string
    generateName:                                                     # string
    namespace:                                                        # string
    selfLink:                                                         # string
    uid:                                                              # k8s.io/kubernetes/pkg/types.UID
    resourceVersion:                                                  # string
    generation:                                                       # int64
    creationTimestamp:                                                # k8s.io/kubernetes/pkg/api/unversioned.Time
    deletionTimestamp:                                                # k8s.io/kubernetes/pkg/api/unversioned.Time
    deletionGracePeriodSeconds:                                       # int64
    labels:                                                           # map[string]string
      [string]:                                                       # string
    annotations:                                                      # map[string]string
      [string]:                                                       # string
  spec:                                                               # github.com/openshift/origin/pkg/route/api/v1.RouteSpec (desired state of the route)
    host:                                                             # string (optional: alias/dns that points to the service, must follow DNS 952 subdomain conventions)
    path:                                                             # string (optional: path that the router watches to route traffic to the service)
    to:                                                               # k8s.io/kubernetes/pkg/api/v1.ObjectReference (an object the route points to.  only the service kind is allowed, and it will be defaulted to a service.)
      kind:                                                           # string
      namespace:                                                      # string
      name:                                                           # string
      uid:                                                            # k8s.io/kubernetes/pkg/types.UID
      apiVersion:                                                     # string
      resourceVersion:                                                # string
      fieldPath:                                                      # string
    port:                                                             # github.com/openshift/origin/pkg/route/api/v1.RoutePort (port that should be used by the router; this is a hint to control which pod endpoint port is used; if empty routers may use all endpoints and ports)
      targetPort:                                                     # k8s.io/kubernetes/pkg/util.IntOrString (the target port on the endpoints for the service; if this is a string must match the named port, if an integer, must match the port number)
    tls:                                                              # github.com/openshift/origin/pkg/route/api/v1.TLSConfig (provides the ability to configure certificates and termination for the route)
      termination: edge | passthrough | reencrypt                     # github.com/openshift/origin/pkg/route/api/v1.TLSTerminationType (indicates termination type.  if not set, any termination config will be ignored)
      certificate:                                                    # string (provides certificate contents)
      key:                                                            # string (provides key file contents)
      caCertificate:                                                  # string (provides the cert authority certificate contents)
      destinationCACertificate:                                       # string (provides the contents of the ca certificate of the final destination.  When using re-encrypt termination this file should be provided in order to have routers use it for health checks on the secure connection)
      insecureEdgeTerminationPolicy:                                  # github.com/openshift/origin/pkg/route/api/v1.InsecureEdgeTerminationPolicyType (indicates desired behavior for insecure connections to an edge-terminated route.  If not set, insecure connections will not be allowed)
  status:                                                             # github.com/openshift/origin/pkg/route/api/v1.RouteStatus (current state of the route)

ClusterNetwork
==============


kind: ClusterNetwork                                                  # string
apiVersion: v1                                                        # string
metadata:                                                             # k8s.io/kubernetes/pkg/api/v1.ObjectMeta
  name:                                                               # string
  generateName:                                                       # string
  namespace:                                                          # string
  selfLink:                                                           # string
  uid:                                                                # k8s.io/kubernetes/pkg/types.UID
  resourceVersion:                                                    # string
  generation:                                                         # int64
  creationTimestamp:                                                  # k8s.io/kubernetes/pkg/api/unversioned.Time
  deletionTimestamp:                                                  # k8s.io/kubernetes/pkg/api/unversioned.Time
  deletionGracePeriodSeconds:                                         # int64
  labels:                                                             # map[string]string
    [string]:                                                         # string
  annotations:                                                        # map[string]string
    [string]:                                                         # string
network:                                                              # string (CIDR string to specify the global overlay network's L3 space)
hostsubnetlength:                                                     # int (number of bits to allocate to each host's subnet e.g. 8 would mean a /24 network on the host)
serviceNetwork:                                                       # string (CIDR string to specify the service network)

ClusterNetworkList
==================


kind: ClusterNetworkList                                              # string
apiVersion: v1                                                        # string
metadata:                                                             # k8s.io/kubernetes/pkg/api/unversioned.ListMeta
  selfLink:                                                           # string
  resourceVersion:                                                    # string
items:                                                                # []github.com/openshift/origin/pkg/sdn/api/v1.ClusterNetwork (list of cluster networks)
- kind:                                                               # string
  apiVersion:                                                         # string
  metadata:                                                           # k8s.io/kubernetes/pkg/api/v1.ObjectMeta
    name:                                                             # string
    generateName:                                                     # string
    namespace:                                                        # string
    selfLink:                                                         # string
    uid:                                                              # k8s.io/kubernetes/pkg/types.UID
    resourceVersion:                                                  # string
    generation:                                                       # int64
    creationTimestamp:                                                # k8s.io/kubernetes/pkg/api/unversioned.Time
    deletionTimestamp:                                                # k8s.io/kubernetes/pkg/api/unversioned.Time
    deletionGracePeriodSeconds:                                       # int64
    labels:                                                           # map[string]string
      [string]:                                                       # string
    annotations:                                                      # map[string]string
      [string]:                                                       # string
  network:                                                            # string (CIDR string to specify the global overlay network's L3 space)
  hostsubnetlength:                                                   # int (number of bits to allocate to each host's subnet e.g. 8 would mean a /24 network on the host)
  serviceNetwork:                                                     # string (CIDR string to specify the service network)

HostSubnet
==========

HostSubnet encapsulates the inputs needed to define the container subnet network on a node

kind: HostSubnet                                                      # string
apiVersion: v1                                                        # string
metadata:                                                             # k8s.io/kubernetes/pkg/api/v1.ObjectMeta
  name:                                                               # string
  generateName:                                                       # string
  namespace:                                                          # string
  selfLink:                                                           # string
  uid:                                                                # k8s.io/kubernetes/pkg/types.UID
  resourceVersion:                                                    # string
  generation:                                                         # int64
  creationTimestamp:                                                  # k8s.io/kubernetes/pkg/api/unversioned.Time
  deletionTimestamp:                                                  # k8s.io/kubernetes/pkg/api/unversioned.Time
  deletionGracePeriodSeconds:                                         # int64
  labels:                                                             # map[string]string
    [string]:                                                         # string
  annotations:                                                        # map[string]string
    [string]:                                                         # string
host:                                                                 # string (Name of the host that is registered at the master. A lease will be sought after this name.)
hostIP:                                                               # string (IP address to be used as vtep by other hosts in the overlay network)
subnet:                                                               # string (Actual subnet CIDR lease assigned to the host)

HostSubnetList
==============

HostSubnetList is a collection of HostSubnets

kind: HostSubnetList                                                  # string
apiVersion: v1                                                        # string
metadata:                                                             # k8s.io/kubernetes/pkg/api/unversioned.ListMeta
  selfLink:                                                           # string
  resourceVersion:                                                    # string
items:                                                                # []github.com/openshift/origin/pkg/sdn/api/v1.HostSubnet (list of host subnets)
- kind:                                                               # string
  apiVersion:                                                         # string
  metadata:                                                           # k8s.io/kubernetes/pkg/api/v1.ObjectMeta
    name:                                                             # string
    generateName:                                                     # string
    namespace:                                                        # string
    selfLink:                                                         # string
    uid:                                                              # k8s.io/kubernetes/pkg/types.UID
    resourceVersion:                                                  # string
    generation:                                                       # int64
    creationTimestamp:                                                # k8s.io/kubernetes/pkg/api/unversioned.Time
    deletionTimestamp:                                                # k8s.io/kubernetes/pkg/api/unversioned.Time
    deletionGracePeriodSeconds:                                       # int64
    labels:                                                           # map[string]string
      [string]:                                                       # string
    annotations:                                                      # map[string]string
      [string]:                                                       # string
  host:                                                               # string (Name of the host that is registered at the master. A lease will be sought after this name.)
  hostIP:                                                             # string (IP address to be used as vtep by other hosts in the overlay network)
  subnet:                                                             # string (Actual subnet CIDR lease assigned to the host)

NetNamespace
============

NetNamespace encapsulates the inputs needed to define a unique network namespace on the cluster

kind: NetNamespace                                                    # string
apiVersion: v1                                                        # string
metadata:                                                             # k8s.io/kubernetes/pkg/api/v1.ObjectMeta
  name:                                                               # string
  generateName:                                                       # string
  namespace:                                                          # string
  selfLink:                                                           # string
  uid:                                                                # k8s.io/kubernetes/pkg/types.UID
  resourceVersion:                                                    # string
  generation:                                                         # int64
  creationTimestamp:                                                  # k8s.io/kubernetes/pkg/api/unversioned.Time
  deletionTimestamp:                                                  # k8s.io/kubernetes/pkg/api/unversioned.Time
  deletionGracePeriodSeconds:                                         # int64
  labels:                                                             # map[string]string
    [string]:                                                         # string
  annotations:                                                        # map[string]string
    [string]:                                                         # string
netname:                                                              # string (Name of the network namespace.)
netid:                                                                # uint (NetID of the network namespace assigned to each overlay network packet.)

NetNamespaceList
================

NetNamespaceList is a collection of NetNamespaces

kind: NetNamespaceList                                                # string
apiVersion: v1                                                        # string
metadata:                                                             # k8s.io/kubernetes/pkg/api/unversioned.ListMeta
  selfLink:                                                           # string
  resourceVersion:                                                    # string
items:                                                                # []github.com/openshift/origin/pkg/sdn/api/v1.NetNamespace (list of net namespaces)
- kind:                                                               # string
  apiVersion:                                                         # string
  metadata:                                                           # k8s.io/kubernetes/pkg/api/v1.ObjectMeta
    name:                                                             # string
    generateName:                                                     # string
    namespace:                                                        # string
    selfLink:                                                         # string
    uid:                                                              # k8s.io/kubernetes/pkg/types.UID
    resourceVersion:                                                  # string
    generation:                                                       # int64
    creationTimestamp:                                                # k8s.io/kubernetes/pkg/api/unversioned.Time
    deletionTimestamp:                                                # k8s.io/kubernetes/pkg/api/unversioned.Time
    deletionGracePeriodSeconds:                                       # int64
    labels:                                                           # map[string]string
      [string]:                                                       # string
    annotations:                                                      # map[string]string
      [string]:                                                       # string
  netname:                                                            # string (Name of the network namespace.)
  netid:                                                              # uint (NetID of the network namespace assigned to each overlay network packet.)

Template
========

Template contains the inputs needed to produce a Config.

kind: Template                                                        # string
apiVersion: v1                                                        # string
metadata:                                                             # k8s.io/kubernetes/pkg/api/v1.ObjectMeta
  name:                                                               # string
  generateName:                                                       # string
  namespace:                                                          # string
  selfLink:                                                           # string
  uid:                                                                # k8s.io/kubernetes/pkg/types.UID
  resourceVersion:                                                    # string
  generation:                                                         # int64
  creationTimestamp:                                                  # k8s.io/kubernetes/pkg/api/unversioned.Time
  deletionTimestamp:                                                  # k8s.io/kubernetes/pkg/api/unversioned.Time
  deletionGracePeriodSeconds:                                         # int64
  labels:                                                             # map[string]string
    [string]:                                                         # string
  annotations:                                                        # map[string]string
    [string]:                                                         # string
objects:                                                              # []k8s.io/kubernetes/pkg/runtime.RawExtension (list of objects to include in the template)
parameters:                                                           # []github.com/openshift/origin/pkg/template/api/v1.Parameter (optional: list of parameters used during template to config transformation)
- name:                                                               # string (name of the parameter)
  displayName:                                                        # string (optional: provides human readable name for the parameter)
  description:                                                        # string (optional: describes the parameter)
  value:                                                              # string (optional: holds the parameter data.  if specified, the generator is ignored.  the value replaces all occurrences of the parameter ${Name} expression during template to config transformation)
  generate:                                                           # string (optional: generate specifies the generator to be used to generate random string from an input value specified by the from field.  the result string is stored in the value field. if not specified, the value field is untouched)
  from:                                                               # string (input value for the generator)
  required:                                                           # bool (indicates the parameter must have a non-empty value or be generated)
labels:                                                               # map[string]string (optional: list of lables that are applied to every object during the template to config transformation)
  [string]:                                                           # string

TemplateList
============

TemplateList is a list of Template objects.

kind: TemplateList                                                    # string
apiVersion: v1                                                        # string
metadata:                                                             # k8s.io/kubernetes/pkg/api/unversioned.ListMeta
  selfLink:                                                           # string
  resourceVersion:                                                    # string
items:                                                                # []github.com/openshift/origin/pkg/template/api/v1.Template (list of templates)
- kind:                                                               # string
  apiVersion:                                                         # string
  metadata:                                                           # k8s.io/kubernetes/pkg/api/v1.ObjectMeta
    name:                                                             # string
    generateName:                                                     # string
    namespace:                                                        # string
    selfLink:                                                         # string
    uid:                                                              # k8s.io/kubernetes/pkg/types.UID
    resourceVersion:                                                  # string
    generation:                                                       # int64
    creationTimestamp:                                                # k8s.io/kubernetes/pkg/api/unversioned.Time
    deletionTimestamp:                                                # k8s.io/kubernetes/pkg/api/unversioned.Time
    deletionGracePeriodSeconds:                                       # int64
    labels:                                                           # map[string]string
      [string]:                                                       # string
    annotations:                                                      # map[string]string
      [string]:                                                       # string
  objects:                                                            # []k8s.io/kubernetes/pkg/runtime.RawExtension (list of objects to include in the template)
  parameters:                                                         # []github.com/openshift/origin/pkg/template/api/v1.Parameter (optional: list of parameters used during template to config transformation)
  - name:                                                             # string (name of the parameter)
    displayName:                                                      # string (optional: provides human readable name for the parameter)
    description:                                                      # string (optional: describes the parameter)
    value:                                                            # string (optional: holds the parameter data.  if specified, the generator is ignored.  the value replaces all occurrences of the parameter ${Name} expression during template to config transformation)
    generate:                                                         # string (optional: generate specifies the generator to be used to generate random string from an input value specified by the from field.  the result string is stored in the value field. if not specified, the value field is untouched)
    from:                                                             # string (input value for the generator)
    required:                                                         # bool (indicates the parameter must have a non-empty value or be generated)
  labels:                                                             # map[string]string (optional: list of lables that are applied to every object during the template to config transformation)
    [string]:                                                         # string

Group
=====

Group represents a referenceable set of Users

kind: Group                                                           # string
apiVersion: v1                                                        # string
metadata:                                                             # k8s.io/kubernetes/pkg/api/v1.ObjectMeta
  name:                                                               # string
  generateName:                                                       # string
  namespace:                                                          # string
  selfLink:                                                           # string
  uid:                                                                # k8s.io/kubernetes/pkg/types.UID
  resourceVersion:                                                    # string
  generation:                                                         # int64
  creationTimestamp:                                                  # k8s.io/kubernetes/pkg/api/unversioned.Time
  deletionTimestamp:                                                  # k8s.io/kubernetes/pkg/api/unversioned.Time
  deletionGracePeriodSeconds:                                         # int64
  labels:                                                             # map[string]string
    [string]:                                                         # string
  annotations:                                                        # map[string]string
    [string]:                                                         # string
users:                                                                # []string (list of users in this group)
- [string]                                                            #

GroupList
=========


kind: GroupList                                                       # string
apiVersion: v1                                                        # string
metadata:                                                             # k8s.io/kubernetes/pkg/api/unversioned.ListMeta
  selfLink:                                                           # string
  resourceVersion:                                                    # string
items:                                                                # []github.com/openshift/origin/pkg/user/api/v1.Group (list of groups)
- kind:                                                               # string
  apiVersion:                                                         # string
  metadata:                                                           # k8s.io/kubernetes/pkg/api/v1.ObjectMeta
    name:                                                             # string
    generateName:                                                     # string
    namespace:                                                        # string
    selfLink:                                                         # string
    uid:                                                              # k8s.io/kubernetes/pkg/types.UID
    resourceVersion:                                                  # string
    generation:                                                       # int64
    creationTimestamp:                                                # k8s.io/kubernetes/pkg/api/unversioned.Time
    deletionTimestamp:                                                # k8s.io/kubernetes/pkg/api/unversioned.Time
    deletionGracePeriodSeconds:                                       # int64
    labels:                                                           # map[string]string
      [string]:                                                       # string
    annotations:                                                      # map[string]string
      [string]:                                                       # string
  users:                                                              # []string (list of users in this group)
  - [string]                                                          #

Identity
========


kind: Identity                                                        # string
apiVersion: v1                                                        # string
metadata:                                                             # k8s.io/kubernetes/pkg/api/v1.ObjectMeta
  name:                                                               # string
  generateName:                                                       # string
  namespace:                                                          # string
  selfLink:                                                           # string
  uid:                                                                # k8s.io/kubernetes/pkg/types.UID
  resourceVersion:                                                    # string
  generation:                                                         # int64
  creationTimestamp:                                                  # k8s.io/kubernetes/pkg/api/unversioned.Time
  deletionTimestamp:                                                  # k8s.io/kubernetes/pkg/api/unversioned.Time
  deletionGracePeriodSeconds:                                         # int64
  labels:                                                             # map[string]string
    [string]:                                                         # string
  annotations:                                                        # map[string]string
    [string]:                                                         # string
providerName:                                                         # string (source of identity information)
providerUserName:                                                     # string (uniquely represents this identity in the scope of the provider)
user:                                                                 # k8s.io/kubernetes/pkg/api/v1.ObjectReference (reference to the user this identity is associated with.  both name and uid must be set)
  kind:                                                               # string
  namespace:                                                          # string
  name:                                                               # string
  uid:                                                                # k8s.io/kubernetes/pkg/types.UID
  apiVersion:                                                         # string
  resourceVersion:                                                    # string
  fieldPath:                                                          # string
extra:                                                                # map[string]string (extra information for this identity)
  [string]:                                                           # string

IdentityList
============


kind: IdentityList                                                    # string
apiVersion: v1                                                        # string
metadata:                                                             # k8s.io/kubernetes/pkg/api/unversioned.ListMeta
  selfLink:                                                           # string
  resourceVersion:                                                    # string
items:                                                                # []github.com/openshift/origin/pkg/user/api/v1.Identity (list of identities)
- kind:                                                               # string
  apiVersion:                                                         # string
  metadata:                                                           # k8s.io/kubernetes/pkg/api/v1.ObjectMeta
    name:                                                             # string
    generateName:                                                     # string
    namespace:                                                        # string
    selfLink:                                                         # string
    uid:                                                              # k8s.io/kubernetes/pkg/types.UID
    resourceVersion:                                                  # string
    generation:                                                       # int64
    creationTimestamp:                                                # k8s.io/kubernetes/pkg/api/unversioned.Time
    deletionTimestamp:                                                # k8s.io/kubernetes/pkg/api/unversioned.Time
    deletionGracePeriodSeconds:                                       # int64
    labels:                                                           # map[string]string
      [string]:                                                       # string
    annotations:                                                      # map[string]string
      [string]:                                                       # string
  providerName:                                                       # string (source of identity information)
  providerUserName:                                                   # string (uniquely represents this identity in the scope of the provider)
  user:                                                               # k8s.io/kubernetes/pkg/api/v1.ObjectReference (reference to the user this identity is associated with.  both name and uid must be set)
    kind:                                                             # string
    namespace:                                                        # string
    name:                                                             # string
    uid:                                                              # k8s.io/kubernetes/pkg/types.UID
    apiVersion:                                                       # string
    resourceVersion:                                                  # string
    fieldPath:                                                        # string
  extra:                                                              # map[string]string (extra information for this identity)
    [string]:                                                         # string

User
====


kind: User                                                            # string
apiVersion: v1                                                        # string
metadata:                                                             # k8s.io/kubernetes/pkg/api/v1.ObjectMeta
  name:                                                               # string
  generateName:                                                       # string
  namespace:                                                          # string
  selfLink:                                                           # string
  uid:                                                                # k8s.io/kubernetes/pkg/types.UID
  resourceVersion:                                                    # string
  generation:                                                         # int64
  creationTimestamp:                                                  # k8s.io/kubernetes/pkg/api/unversioned.Time
  deletionTimestamp:                                                  # k8s.io/kubernetes/pkg/api/unversioned.Time
  deletionGracePeriodSeconds:                                         # int64
  labels:                                                             # map[string]string
    [string]:                                                         # string
  annotations:                                                        # map[string]string
    [string]:                                                         # string
fullName:                                                             # string (full name of user)
identities:                                                           # []string (list of identities)
- [string]                                                            #
groups:                                                               # []string (list of groups)
- [string]                                                            #

UserIdentityMapping
===================


kind: UserIdentityMapping                                             # string
apiVersion: v1                                                        # string
metadata:                                                             # k8s.io/kubernetes/pkg/api/v1.ObjectMeta
  name:                                                               # string
  generateName:                                                       # string
  namespace:                                                          # string
  selfLink:                                                           # string
  uid:                                                                # k8s.io/kubernetes/pkg/types.UID
  resourceVersion:                                                    # string
  generation:                                                         # int64
  creationTimestamp:                                                  # k8s.io/kubernetes/pkg/api/unversioned.Time
  deletionTimestamp:                                                  # k8s.io/kubernetes/pkg/api/unversioned.Time
  deletionGracePeriodSeconds:                                         # int64
  labels:                                                             # map[string]string
    [string]:                                                         # string
  annotations:                                                        # map[string]string
    [string]:                                                         # string
identity:                                                             # k8s.io/kubernetes/pkg/api/v1.ObjectReference (reference to an identity)
  kind:                                                               # string
  namespace:                                                          # string
  name:                                                               # string
  uid:                                                                # k8s.io/kubernetes/pkg/types.UID
  apiVersion:                                                         # string
  resourceVersion:                                                    # string
  fieldPath:                                                          # string
user:                                                                 # k8s.io/kubernetes/pkg/api/v1.ObjectReference (reference to a user)
  kind:                                                               # string
  namespace:                                                          # string
  name:                                                               # string
  uid:                                                                # k8s.io/kubernetes/pkg/types.UID
  apiVersion:                                                         # string
  resourceVersion:                                                    # string
  fieldPath:                                                          # string

UserList
========


kind: UserList                                                        # string
apiVersion: v1                                                        # string
metadata:                                                             # k8s.io/kubernetes/pkg/api/unversioned.ListMeta
  selfLink:                                                           # string
  resourceVersion:                                                    # string
items:                                                                # []github.com/openshift/origin/pkg/user/api/v1.User (list of users)
- kind:                                                               # string
  apiVersion:                                                         # string
  metadata:                                                           # k8s.io/kubernetes/pkg/api/v1.ObjectMeta
    name:                                                             # string
    generateName:                                                     # string
    namespace:                                                        # string
    selfLink:                                                         # string
    uid:                                                              # k8s.io/kubernetes/pkg/types.UID
    resourceVersion:                                                  # string
    generation:                                                       # int64
    creationTimestamp:                                                # k8s.io/kubernetes/pkg/api/unversioned.Time
    deletionTimestamp:                                                # k8s.io/kubernetes/pkg/api/unversioned.Time
    deletionGracePeriodSeconds:                                       # int64
    labels:                                                           # map[string]string
      [string]:                                                       # string
    annotations:                                                      # map[string]string
      [string]:                                                       # string
  fullName:                                                           # string (full name of user)
  identities:                                                         # []string (list of identities)
  - [string]                                                          #
  groups:                                                             # []string (list of groups)
  - [string]                                                          #

