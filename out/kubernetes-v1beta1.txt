Binding
=======

Binding is written by a scheduler to cause a pod to be bound to a host.

kind: Binding                                                         # string (kind of object, in CamelCase; cannot be updated)
id:                                                                   # string (name of the object; must be a DNS_SUBDOMAIN and unique among all objects of the same kind within the same namespace; used in resource URLs; cannot be updated)
uid:                                                                  # github.com/GoogleCloudPlatform/kubernetes/pkg/types.UID (unique UUID across space and time; populated by the system, read-only; cannot be updated)
creationTimestamp:                                                    # github.com/GoogleCloudPlatform/kubernetes/pkg/util.Time (RFC 3339 date and time at which the object was created; populated by the system, read-only; null for lists)
selfLink:                                                             # string (URL for the object; populated by the system, read-only)
resourceVersion:                                                      # uint64 (string that identifies the internal version of this object that can be used by clients to determine when objects have changed; populated by the system, read-only; value must be treated as opaque by clients and passed unmodified back to the server: https://github.com/GoogleCloudPlatform/kubernetes/blob/master/docs/api-conventions.md#concurrency-control-and-consistency)
apiVersion: v1beta1                                                   # string (version of the schema the object should have)
namespace:                                                            # string (namespace to which the object belongs; must be a DNS_SUBDOMAIN; 'default' by default; cannot be updated)
deletionTimestamp:                                                    # *github.com/GoogleCloudPlatform/kubernetes/pkg/util.Time (RFC 3339 date and time at which the object will be deleted; populated by the system when a graceful deletion is requested, read-only; if not set, graceful deletion of the object has not been requested)
generateName:                                                         # string (an optional prefix to use to generate a unique name; has the same validation rules as name; optional, and is applied only name if is not specified)
annotations:                                                          # map[string]string (map of string keys and values that can be used by external tooling to store and retrieve arbitrary metadata about the object)
  [string]:                                                           # string
podID:                                                                # string (name of the pod to bind)
host:                                                                 # string (host to which to bind the specified pod)


ContainerManifestList
=====================

ContainerManifestList is used to communicate container manifests to kubelet.

kind: ContainerManifestList                                           # string (kind of object, in CamelCase; cannot be updated)
id:                                                                   # string (name of the object; must be a DNS_SUBDOMAIN and unique among all objects of the same kind within the same namespace; used in resource URLs; cannot be updated)
uid:                                                                  # github.com/GoogleCloudPlatform/kubernetes/pkg/types.UID (unique UUID across space and time; populated by the system, read-only; cannot be updated)
creationTimestamp:                                                    # github.com/GoogleCloudPlatform/kubernetes/pkg/util.Time (RFC 3339 date and time at which the object was created; populated by the system, read-only; null for lists)
selfLink:                                                             # string (URL for the object; populated by the system, read-only)
resourceVersion:                                                      # uint64 (string that identifies the internal version of this object that can be used by clients to determine when objects have changed; populated by the system, read-only; value must be treated as opaque by clients and passed unmodified back to the server: https://github.com/GoogleCloudPlatform/kubernetes/blob/master/docs/api-conventions.md#concurrency-control-and-consistency)
apiVersion: v1beta1                                                   # string (version of the schema the object should have)
namespace:                                                            # string (namespace to which the object belongs; must be a DNS_SUBDOMAIN; 'default' by default; cannot be updated)
deletionTimestamp:                                                    # *github.com/GoogleCloudPlatform/kubernetes/pkg/util.Time (RFC 3339 date and time at which the object will be deleted; populated by the system when a graceful deletion is requested, read-only; if not set, graceful deletion of the object has not been requested)
generateName:                                                         # string (an optional prefix to use to generate a unique name; has the same validation rules as name; optional, and is applied only name if is not specified)
annotations:                                                          # map[string]string (map of string keys and values that can be used by external tooling to store and retrieve arbitrary metadata about the object)
  [string]:                                                           # string
items:                                                                # []github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ContainerManifest (list of pod container manifests)
- version:                                                            # string (manifest version; must be v1beta1)
  id:                                                                 # string (manifest name; must be a DNS_SUBDOMAIN; cannot be updated)
  uuid:                                                               # github.com/GoogleCloudPlatform/kubernetes/pkg/types.UID (manifest UUID, populated by the system, read-only)
  volumes:                                                            # []github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.Volume (list of volumes that can be mounted by containers belonging to the pod)
  - name:                                                             # string (volume name; must be a DNS_LABEL and unique within the pod)
    source:                                                           # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.VolumeSource (location and type of volume to mount; at most one of HostDir, EmptyDir, GCEPersistentDisk, or GitRepo; default is EmptyDir)
      hostDir:                                                        # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.HostPathVolumeSource (pre-existing host file or directory; generally for privileged system daemons or other agents tied to the host)
        path:                                                         # string (path of the directory on the host)
      emptyDir:                                                       # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.EmptyDirVolumeSource (temporary directory that shares a pod's lifetime)
        medium: |Memory                                               # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.StorageType (type of storage used to back the volume; must be an empty string (default) or Memory)
      persistentDisk:                                                 # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.GCEPersistentDiskVolumeSource (GCE disk resource attached to the host machine on demand)
        pdName:                                                       # string (unique name of the PD resource in GCE)
        fsType:                                                       # string (file system type to mount, such as ext4, xfs, ntfs)
        partition:                                                    # int (partition on the disk to mount (e.g., '1' for /dev/sda1); if omitted the plain device name (e.g., /dev/sda) will be mounted)
        readOnly:                                                     # bool (read-only if true, read-write otherwise (false or unspecified))
      gitRepo:                                                        # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.GitRepoVolumeSource (git repository at a particular revision)
        repository:                                                   # string (repository URL)
        revision:                                                     # string (commit hash for the specified revision)
      secret:                                                         # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.SecretVolumeSource (secret to populate volume with)
        target:                                                       # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ObjectReference (target is a reference to a secret)
          kind:                                                       # string (kind of the referent)
          namespace:                                                  # string (namespace of the referent)
          name:                                                       # string (id of the referent)
          uid:                                                        # github.com/GoogleCloudPlatform/kubernetes/pkg/types.UID (uid of the referent)
          apiVersion:                                                 # string (API version of the referent)
          resourceVersion:                                            # string (specific resourceVersion to which this reference is made, if any: https://github.com/GoogleCloudPlatform/kubernetes/blob/master/docs/api-conventions.md#concurrency-control-and-consistency)
          fieldPath:                                                  # string (if referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2])
      nfs:                                                            # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.NFSVolumeSource (NFS volume that will be mounted in the host machine )
        server:                                                       # string (the hostname or IP address of the NFS server)
        path:                                                         # string (the path that is exported by the NFS server)
        readOnly:                                                     # bool (forces the NFS export to be mounted with read-only permissions)
      iscsi:                                                          # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ISCSIVolumeSource (iSCSI disk attached to host machine on demand)
        targetPortal:                                                 # string (iSCSI target portal)
        iqn:                                                          # string (iSCSI Qualified Name)
        lun:                                                          # int (iscsi target lun number)
        fsType:                                                       # string (file system type to mount, such as ext4, xfs, ntfs)
        readOnly:                                                     # bool (read-only if true, read-write otherwise (false or unspecified))
      glusterfs:                                                      # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.GlusterfsVolumeSource (Glusterfs volume that will be mounted on the host machine )
        endpoints:                                                    # string (gluster hosts endpoints name)
        path:                                                         # string (path to gluster volume)
        readOnly:                                                     # bool (Glusterfs volume to be mounted with read-only permissions)
  containers:                                                         # []github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.Container (list of containers belonging to the pod; containers cannot currently be added or removed)
  - name:                                                             # string (name of the container; must be a DNS_LABEL and unique within the pod; cannot be updated)
    image:                                                            # string (Docker image name)
    entrypoint:                                                       # []string (entrypoint array; not executed within a shell; the image's entrypoint is used if this is not provided; cannot be updated)
    - [string]                                                        # 
    command:                                                          # []string (command argv array; not executed within a shell; the image's cmd is used if this is not provided; cannot be updated)
    - [string]                                                        # 
    workingDir:                                                       # string (container's working directory; defaults to image's default; cannot be updated)
    ports:                                                            # []github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ContainerPort (list of ports to expose from the container; cannot be updated)
    - name:                                                           # string (name for the port that can be referred to by services; must be a DNS_LABEL and unique without the pod)
      hostPort:                                                       # int (number of port to expose on the host; most containers do not need this)
      containerPort:                                                  # int (number of port to expose on the pod's IP address)
      protocol: TCP|UDP                                               # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.Protocol (protocol for port; must be UDP or TCP; TCP if unspecified)
      hostIP:                                                         # string (host IP to bind the port to)
    env:                                                              # []github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.EnvVar (list of environment variables to set in the container; cannot be updated)
    - name:                                                           # string (name of the environment variable; must be a C_IDENTIFIER)
      key:                                                            # string (name of the environment variable; must be a C_IDENTIFIER; deprecated - use name instead)
      value:                                                          # string (value of the environment variable; defaults to empty string)
    resources:                                                        # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ResourceRequirements (Compute Resources required by this container; cannot be updated)
      limits:                                                         # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ResourceList (Maximum amount of compute resources allowed)
        [github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ResourceName]: # github.com/GoogleCloudPlatform/kubernetes/pkg/util.IntOrString
      requests:                                                       # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ResourceList (Minimum amount of resources requested)
        [github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ResourceName]: # github.com/GoogleCloudPlatform/kubernetes/pkg/util.IntOrString
    cpu:                                                              # int (CPU share in thousandths of a core; cannot be updated)
    memory:                                                           # int64 (memory limit in bytes; defaults to unlimited; cannot be updated)
    volumeMounts:                                                     # []github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.VolumeMount (pod volumes to mount into the container's filesystem; cannot be updated)
    - name:                                                           # string (name of the volume to mount)
      readOnly:                                                       # bool (mounted read-only if true, read-write otherwise (false or unspecified))
      mountPath:                                                      # string (path within the container at which the volume should be mounted; overrides path)
      path:                                                           # string (path within the container at which the volume should be mounted; deprecated)
      mountType:                                                      # string (LOCAL or HOST; defaults to LOCAL; deprecated)
    livenessProbe:                                                    # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.LivenessProbe (periodic probe of container liveness; container will be restarted if the probe fails; cannot be updated)
      httpGet:                                                        # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.HTTPGetAction (parameters for HTTP-based liveness probe)
        path:                                                         # string (path to access on the HTTP server)
        port:                                                         # github.com/GoogleCloudPlatform/kubernetes/pkg/util.IntOrString (number or name of the port to access on the container)
        host:                                                         # string (hostname to connect to; defaults to pod IP)
      tcpSocket:                                                      # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.TCPSocketAction (parameters for TCP-based liveness probe)
        port:                                                         # github.com/GoogleCloudPlatform/kubernetes/pkg/util.IntOrString (number of name of the port to access on the container)
      exec:                                                           # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ExecAction (parameters for exec-based liveness probe)
        command:                                                      # []string (command line to execute inside the container; working directory for the command is root ('/') in the container's file system; the command is exec'd, not run inside a shell; exit status of 0 is treated as live/healthy and non-zero is unhealthy)
        - [string]                                                    # 
      initialDelaySeconds:                                            # int64 (number of seconds after the container has started before liveness probes are initiated)
      timeoutSeconds:                                                 # int64 (number of seconds after which liveness probes timeout; defaults to 1 second)
    readinessProbe:                                                   # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.LivenessProbe (periodic probe of container service readiness; container will be removed from service endpoints if the probe fails; cannot be updated)
      httpGet:                                                        # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.HTTPGetAction (parameters for HTTP-based liveness probe)
        path:                                                         # string (path to access on the HTTP server)
        port:                                                         # github.com/GoogleCloudPlatform/kubernetes/pkg/util.IntOrString (number or name of the port to access on the container)
        host:                                                         # string (hostname to connect to; defaults to pod IP)
      tcpSocket:                                                      # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.TCPSocketAction (parameters for TCP-based liveness probe)
        port:                                                         # github.com/GoogleCloudPlatform/kubernetes/pkg/util.IntOrString (number of name of the port to access on the container)
      exec:                                                           # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ExecAction (parameters for exec-based liveness probe)
        command:                                                      # []string (command line to execute inside the container; working directory for the command is root ('/') in the container's file system; the command is exec'd, not run inside a shell; exit status of 0 is treated as live/healthy and non-zero is unhealthy)
        - [string]                                                    # 
      initialDelaySeconds:                                            # int64 (number of seconds after the container has started before liveness probes are initiated)
      timeoutSeconds:                                                 # int64 (number of seconds after which liveness probes timeout; defaults to 1 second)
    lifecycle:                                                        # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.Lifecycle (actions that the management system should take in response to container lifecycle events; cannot be updated)
      postStart:                                                      # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.Handler (called immediately after a container is started; if the handler fails, the container is terminated and restarted according to its restart policy; other management of the container blocks until the hook completes)
        exec:                                                         # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ExecAction (exec-based handler)
          command:                                                    # []string (command line to execute inside the container; working directory for the command is root ('/') in the container's file system; the command is exec'd, not run inside a shell; exit status of 0 is treated as live/healthy and non-zero is unhealthy)
          - [string]                                                  # 
        httpGet:                                                      # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.HTTPGetAction (HTTP-based handler)
          path:                                                       # string (path to access on the HTTP server)
          port:                                                       # github.com/GoogleCloudPlatform/kubernetes/pkg/util.IntOrString (number or name of the port to access on the container)
          host:                                                       # string (hostname to connect to; defaults to pod IP)
        tcpSocket:                                                    # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.TCPSocketAction (TCP-based handler; TCP hooks not yet supported)
          port:                                                       # github.com/GoogleCloudPlatform/kubernetes/pkg/util.IntOrString (number of name of the port to access on the container)
      preStop:                                                        # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.Handler (called before a container is terminated; the container is terminated after the handler completes; other management of the container blocks until the hook completes)
        exec:                                                         # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ExecAction (exec-based handler)
          command:                                                    # []string (command line to execute inside the container; working directory for the command is root ('/') in the container's file system; the command is exec'd, not run inside a shell; exit status of 0 is treated as live/healthy and non-zero is unhealthy)
          - [string]                                                  # 
        httpGet:                                                      # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.HTTPGetAction (HTTP-based handler)
          path:                                                       # string (path to access on the HTTP server)
          port:                                                       # github.com/GoogleCloudPlatform/kubernetes/pkg/util.IntOrString (number or name of the port to access on the container)
          host:                                                       # string (hostname to connect to; defaults to pod IP)
        tcpSocket:                                                    # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.TCPSocketAction (TCP-based handler; TCP hooks not yet supported)
          port:                                                       # github.com/GoogleCloudPlatform/kubernetes/pkg/util.IntOrString (number of name of the port to access on the container)
    terminationMessagePath:                                           # string (path at which the file to which the container's termination message will be written is mounted into the container's filesystem; message written is intended to be brief final status, such as an assertion failure message; defaults to /dev/termination-log; cannot be updated)
    privileged:                                                       # bool (whether or not the container is granted privileged status; defaults to false; cannot be updated)
    imagePullPolicy: PullAlways|PullIfNotPresent|PullNever            # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.PullPolicy (image pull policy; one of PullAlways, PullNever, PullIfNotPresent; defaults to PullAlways if :latest tag is specified, or PullIfNotPresent otherwise; cannot be updated)
    capabilities:                                                     # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.Capabilities (capabilities for container; cannot be updated)
      add:                                                            # []github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.CapabilityType (added capabilities)
      - [github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.CapabilityType] # 
      drop:                                                           # []github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.CapabilityType (droped capabilities)
      - [github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.CapabilityType] # 
  restartPolicy:                                                      # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.RestartPolicy (restart policy for all containers within the pod; one of RestartPolicyAlways, RestartPolicyOnFailure, RestartPolicyNever)
    always:                                                           # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.RestartPolicyAlways (always restart the container after termination)
    onFailure:                                                        # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.RestartPolicyOnFailure (restart the container if it fails for any reason, but not if it succeeds (exit 0))
    never:                                                            # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.RestartPolicyNever (never restart the container)
  dnsPolicy: ClusterFirst|Default                                     # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.DNSPolicy (DNS policy for containers within the pod; one of 'ClusterFirst' or 'Default')
  hostNetwork:                                                        # bool (host networking requested for this pod)


DeleteOptions
=============

DeleteOptions may be provided when deleting an API object

kind: DeleteOptions                                                   # string (kind of object, in CamelCase; cannot be updated)
id:                                                                   # string (name of the object; must be a DNS_SUBDOMAIN and unique among all objects of the same kind within the same namespace; used in resource URLs; cannot be updated)
uid:                                                                  # github.com/GoogleCloudPlatform/kubernetes/pkg/types.UID (unique UUID across space and time; populated by the system, read-only; cannot be updated)
creationTimestamp:                                                    # github.com/GoogleCloudPlatform/kubernetes/pkg/util.Time (RFC 3339 date and time at which the object was created; populated by the system, read-only; null for lists)
selfLink:                                                             # string (URL for the object; populated by the system, read-only)
resourceVersion:                                                      # uint64 (string that identifies the internal version of this object that can be used by clients to determine when objects have changed; populated by the system, read-only; value must be treated as opaque by clients and passed unmodified back to the server: https://github.com/GoogleCloudPlatform/kubernetes/blob/master/docs/api-conventions.md#concurrency-control-and-consistency)
apiVersion: v1beta1                                                   # string (version of the schema the object should have)
namespace:                                                            # string (namespace to which the object belongs; must be a DNS_SUBDOMAIN; 'default' by default; cannot be updated)
deletionTimestamp:                                                    # *github.com/GoogleCloudPlatform/kubernetes/pkg/util.Time (RFC 3339 date and time at which the object will be deleted; populated by the system when a graceful deletion is requested, read-only; if not set, graceful deletion of the object has not been requested)
generateName:                                                         # string (an optional prefix to use to generate a unique name; has the same validation rules as name; optional, and is applied only name if is not specified)
annotations:                                                          # map[string]string (map of string keys and values that can be used by external tooling to store and retrieve arbitrary metadata about the object)
  [string]:                                                           # string
gracePeriodSeconds:                                                   # *int64 (the duration in seconds to wait before deleting this object; defaults to a per object value if not specified; zero means delete immediately)


Endpoints
=========

Endpoints is a collection of endpoints that implement the actual service, for example:
Name: "mysql", Endpoints: ["10.10.1.1:1909", "10.10.2.2:8834"]

kind: Endpoints                                                       # string (kind of object, in CamelCase; cannot be updated)
id:                                                                   # string (name of the object; must be a DNS_SUBDOMAIN and unique among all objects of the same kind within the same namespace; used in resource URLs; cannot be updated)
uid:                                                                  # github.com/GoogleCloudPlatform/kubernetes/pkg/types.UID (unique UUID across space and time; populated by the system, read-only; cannot be updated)
creationTimestamp:                                                    # github.com/GoogleCloudPlatform/kubernetes/pkg/util.Time (RFC 3339 date and time at which the object was created; populated by the system, read-only; null for lists)
selfLink:                                                             # string (URL for the object; populated by the system, read-only)
resourceVersion:                                                      # uint64 (string that identifies the internal version of this object that can be used by clients to determine when objects have changed; populated by the system, read-only; value must be treated as opaque by clients and passed unmodified back to the server: https://github.com/GoogleCloudPlatform/kubernetes/blob/master/docs/api-conventions.md#concurrency-control-and-consistency)
apiVersion: v1beta1                                                   # string (version of the schema the object should have)
namespace:                                                            # string (namespace to which the object belongs; must be a DNS_SUBDOMAIN; 'default' by default; cannot be updated)
deletionTimestamp:                                                    # *github.com/GoogleCloudPlatform/kubernetes/pkg/util.Time (RFC 3339 date and time at which the object will be deleted; populated by the system when a graceful deletion is requested, read-only; if not set, graceful deletion of the object has not been requested)
generateName:                                                         # string (an optional prefix to use to generate a unique name; has the same validation rules as name; optional, and is applied only name if is not specified)
annotations:                                                          # map[string]string (map of string keys and values that can be used by external tooling to store and retrieve arbitrary metadata about the object)
  [string]:                                                           # string
protocol: TCP|UDP                                                     # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.Protocol (IP protocol for the first set of endpoint ports; must be UDP or TCP; TCP if unspecified)
endpoints:                                                            # []string (first set of endpoints corresponding to a service, of the form address:port, such as 10.10.1.1:1909)
- [string]                                                            # 
targetRefs:                                                           # []github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.EndpointObjectReference (list of references to objects providing the endpoints)
- endpoint:                                                           # string (endpoint exposed by the referenced object)
  targetRef:                                                          # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ObjectReference (reference to the object providing the entry point)
    kind:                                                             # string (kind of the referent)
    namespace:                                                        # string (namespace of the referent)
    name:                                                             # string (id of the referent)
    uid:                                                              # github.com/GoogleCloudPlatform/kubernetes/pkg/types.UID (uid of the referent)
    apiVersion:                                                       # string (API version of the referent)
    resourceVersion:                                                  # string (specific resourceVersion to which this reference is made, if any: https://github.com/GoogleCloudPlatform/kubernetes/blob/master/docs/api-conventions.md#concurrency-control-and-consistency)
    fieldPath:                                                        # string (if referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2])
subsets:                                                              # []github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.EndpointSubset (sets of addresses and ports that comprise a service)
- addresses:                                                          # []github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.EndpointAddress (IP addresses which offer the related ports)
- - IP:                                                               # string (IP address of the endpoint)
    targetRef:                                                        # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ObjectReference (reference to object providing the endpoint)
      kind:                                                           # string (kind of the referent)
      namespace:                                                      # string (namespace of the referent)
      name:                                                           # string (id of the referent)
      uid:                                                            # github.com/GoogleCloudPlatform/kubernetes/pkg/types.UID (uid of the referent)
      apiVersion:                                                     # string (API version of the referent)
      resourceVersion:                                                # string (specific resourceVersion to which this reference is made, if any: https://github.com/GoogleCloudPlatform/kubernetes/blob/master/docs/api-conventions.md#concurrency-control-and-consistency)
      fieldPath:                                                      # string (if referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2])
  ports:                                                              # []github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.EndpointPort (port numbers available on the related IP addresses)
  - name:                                                             # string (name of this port)
    port:                                                             # int (port number of the endpoint)
    protocol: TCP|UDP                                                 # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.Protocol (protocol for this port; must be UDP or TCP; TCP if unspecified)


EndpointsList
=============

EndpointsList is a list of endpoints.

kind: EndpointsList                                                   # string (kind of object, in CamelCase; cannot be updated)
id:                                                                   # string (name of the object; must be a DNS_SUBDOMAIN and unique among all objects of the same kind within the same namespace; used in resource URLs; cannot be updated)
uid:                                                                  # github.com/GoogleCloudPlatform/kubernetes/pkg/types.UID (unique UUID across space and time; populated by the system, read-only; cannot be updated)
creationTimestamp:                                                    # github.com/GoogleCloudPlatform/kubernetes/pkg/util.Time (RFC 3339 date and time at which the object was created; populated by the system, read-only; null for lists)
selfLink:                                                             # string (URL for the object; populated by the system, read-only)
resourceVersion:                                                      # uint64 (string that identifies the internal version of this object that can be used by clients to determine when objects have changed; populated by the system, read-only; value must be treated as opaque by clients and passed unmodified back to the server: https://github.com/GoogleCloudPlatform/kubernetes/blob/master/docs/api-conventions.md#concurrency-control-and-consistency)
apiVersion: v1beta1                                                   # string (version of the schema the object should have)
namespace:                                                            # string (namespace to which the object belongs; must be a DNS_SUBDOMAIN; 'default' by default; cannot be updated)
deletionTimestamp:                                                    # *github.com/GoogleCloudPlatform/kubernetes/pkg/util.Time (RFC 3339 date and time at which the object will be deleted; populated by the system when a graceful deletion is requested, read-only; if not set, graceful deletion of the object has not been requested)
generateName:                                                         # string (an optional prefix to use to generate a unique name; has the same validation rules as name; optional, and is applied only name if is not specified)
annotations:                                                          # map[string]string (map of string keys and values that can be used by external tooling to store and retrieve arbitrary metadata about the object)
  [string]:                                                           # string
items:                                                                # []github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.Endpoints (list of service endpoint lists)
- kind:                                                               # string (kind of object, in CamelCase; cannot be updated)
  id:                                                                 # string (name of the object; must be a DNS_SUBDOMAIN and unique among all objects of the same kind within the same namespace; used in resource URLs; cannot be updated)
  uid:                                                                # github.com/GoogleCloudPlatform/kubernetes/pkg/types.UID (unique UUID across space and time; populated by the system, read-only; cannot be updated)
  creationTimestamp:                                                  # github.com/GoogleCloudPlatform/kubernetes/pkg/util.Time (RFC 3339 date and time at which the object was created; populated by the system, read-only; null for lists)
  selfLink:                                                           # string (URL for the object; populated by the system, read-only)
  resourceVersion:                                                    # uint64 (string that identifies the internal version of this object that can be used by clients to determine when objects have changed; populated by the system, read-only; value must be treated as opaque by clients and passed unmodified back to the server: https://github.com/GoogleCloudPlatform/kubernetes/blob/master/docs/api-conventions.md#concurrency-control-and-consistency)
  apiVersion:                                                         # string (version of the schema the object should have)
  namespace:                                                          # string (namespace to which the object belongs; must be a DNS_SUBDOMAIN; 'default' by default; cannot be updated)
  deletionTimestamp:                                                  # *github.com/GoogleCloudPlatform/kubernetes/pkg/util.Time (RFC 3339 date and time at which the object will be deleted; populated by the system when a graceful deletion is requested, read-only; if not set, graceful deletion of the object has not been requested)
  generateName:                                                       # string (an optional prefix to use to generate a unique name; has the same validation rules as name; optional, and is applied only name if is not specified)
  annotations:                                                        # map[string]string (map of string keys and values that can be used by external tooling to store and retrieve arbitrary metadata about the object)
    [string]:                                                         # string
  protocol: TCP|UDP                                                   # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.Protocol (IP protocol for the first set of endpoint ports; must be UDP or TCP; TCP if unspecified)
  endpoints:                                                          # []string (first set of endpoints corresponding to a service, of the form address:port, such as 10.10.1.1:1909)
  - [string]                                                          # 
  targetRefs:                                                         # []github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.EndpointObjectReference (list of references to objects providing the endpoints)
  - endpoint:                                                         # string (endpoint exposed by the referenced object)
    targetRef:                                                        # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ObjectReference (reference to the object providing the entry point)
      kind:                                                           # string (kind of the referent)
      namespace:                                                      # string (namespace of the referent)
      name:                                                           # string (id of the referent)
      uid:                                                            # github.com/GoogleCloudPlatform/kubernetes/pkg/types.UID (uid of the referent)
      apiVersion:                                                     # string (API version of the referent)
      resourceVersion:                                                # string (specific resourceVersion to which this reference is made, if any: https://github.com/GoogleCloudPlatform/kubernetes/blob/master/docs/api-conventions.md#concurrency-control-and-consistency)
      fieldPath:                                                      # string (if referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2])
  subsets:                                                            # []github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.EndpointSubset (sets of addresses and ports that comprise a service)
  - addresses:                                                        # []github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.EndpointAddress (IP addresses which offer the related ports)
  - - IP:                                                             # string (IP address of the endpoint)
      targetRef:                                                      # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ObjectReference (reference to object providing the endpoint)
        kind:                                                         # string (kind of the referent)
        namespace:                                                    # string (namespace of the referent)
        name:                                                         # string (id of the referent)
        uid:                                                          # github.com/GoogleCloudPlatform/kubernetes/pkg/types.UID (uid of the referent)
        apiVersion:                                                   # string (API version of the referent)
        resourceVersion:                                              # string (specific resourceVersion to which this reference is made, if any: https://github.com/GoogleCloudPlatform/kubernetes/blob/master/docs/api-conventions.md#concurrency-control-and-consistency)
        fieldPath:                                                    # string (if referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2])
    ports:                                                            # []github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.EndpointPort (port numbers available on the related IP addresses)
    - name:                                                           # string (name of this port)
      port:                                                           # int (port number of the endpoint)
      protocol: TCP|UDP                                               # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.Protocol (protocol for this port; must be UDP or TCP; TCP if unspecified)


Event
=====

Event is a report of an event somewhere in the cluster.
TODO: Decide whether to store these separately or with the object they apply to.

kind: Event                                                           # string (kind of object, in CamelCase; cannot be updated)
id:                                                                   # string (name of the object; must be a DNS_SUBDOMAIN and unique among all objects of the same kind within the same namespace; used in resource URLs; cannot be updated)
uid:                                                                  # github.com/GoogleCloudPlatform/kubernetes/pkg/types.UID (unique UUID across space and time; populated by the system, read-only; cannot be updated)
creationTimestamp:                                                    # github.com/GoogleCloudPlatform/kubernetes/pkg/util.Time (RFC 3339 date and time at which the object was created; populated by the system, read-only; null for lists)
selfLink:                                                             # string (URL for the object; populated by the system, read-only)
resourceVersion:                                                      # uint64 (string that identifies the internal version of this object that can be used by clients to determine when objects have changed; populated by the system, read-only; value must be treated as opaque by clients and passed unmodified back to the server: https://github.com/GoogleCloudPlatform/kubernetes/blob/master/docs/api-conventions.md#concurrency-control-and-consistency)
apiVersion: v1beta1                                                   # string (version of the schema the object should have)
namespace:                                                            # string (namespace to which the object belongs; must be a DNS_SUBDOMAIN; 'default' by default; cannot be updated)
deletionTimestamp:                                                    # *github.com/GoogleCloudPlatform/kubernetes/pkg/util.Time (RFC 3339 date and time at which the object will be deleted; populated by the system when a graceful deletion is requested, read-only; if not set, graceful deletion of the object has not been requested)
generateName:                                                         # string (an optional prefix to use to generate a unique name; has the same validation rules as name; optional, and is applied only name if is not specified)
annotations:                                                          # map[string]string (map of string keys and values that can be used by external tooling to store and retrieve arbitrary metadata about the object)
  [string]:                                                           # string
involvedObject:                                                       # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ObjectReference (object that this event is about)
  kind:                                                               # string (kind of the referent)
  namespace:                                                          # string (namespace of the referent)
  name:                                                               # string (id of the referent)
  uid:                                                                # github.com/GoogleCloudPlatform/kubernetes/pkg/types.UID (uid of the referent)
  apiVersion:                                                         # string (API version of the referent)
  resourceVersion:                                                    # string (specific resourceVersion to which this reference is made, if any: https://github.com/GoogleCloudPlatform/kubernetes/blob/master/docs/api-conventions.md#concurrency-control-and-consistency)
  fieldPath:                                                          # string (if referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2])
status:                                                               # string (short, machine understandable string that describes the current status of the referred object)
reason:                                                               # string (short, machine understandable string that gives the reason for the transition into the object's current status)
message:                                                              # string (human-readable description of the status of this operation)
source:                                                               # string (component reporting this event; short machine understandable string)
host:                                                                 # string (host name on which this event was generated)
timestamp:                                                            # github.com/GoogleCloudPlatform/kubernetes/pkg/util.Time (time at which the client recorded the event)
firstTimestamp:                                                       # github.com/GoogleCloudPlatform/kubernetes/pkg/util.Time (the time at which the event was first recorded)
lastTimestamp:                                                        # github.com/GoogleCloudPlatform/kubernetes/pkg/util.Time (the time at which the most recent occurance of this event was recorded)
count:                                                                # int (the number of times this event has occurred)


EventList
=========

EventList is a list of events.

kind: EventList                                                       # string (kind of object, in CamelCase; cannot be updated)
id:                                                                   # string (name of the object; must be a DNS_SUBDOMAIN and unique among all objects of the same kind within the same namespace; used in resource URLs; cannot be updated)
uid:                                                                  # github.com/GoogleCloudPlatform/kubernetes/pkg/types.UID (unique UUID across space and time; populated by the system, read-only; cannot be updated)
creationTimestamp:                                                    # github.com/GoogleCloudPlatform/kubernetes/pkg/util.Time (RFC 3339 date and time at which the object was created; populated by the system, read-only; null for lists)
selfLink:                                                             # string (URL for the object; populated by the system, read-only)
resourceVersion:                                                      # uint64 (string that identifies the internal version of this object that can be used by clients to determine when objects have changed; populated by the system, read-only; value must be treated as opaque by clients and passed unmodified back to the server: https://github.com/GoogleCloudPlatform/kubernetes/blob/master/docs/api-conventions.md#concurrency-control-and-consistency)
apiVersion: v1beta1                                                   # string (version of the schema the object should have)
namespace:                                                            # string (namespace to which the object belongs; must be a DNS_SUBDOMAIN; 'default' by default; cannot be updated)
deletionTimestamp:                                                    # *github.com/GoogleCloudPlatform/kubernetes/pkg/util.Time (RFC 3339 date and time at which the object will be deleted; populated by the system when a graceful deletion is requested, read-only; if not set, graceful deletion of the object has not been requested)
generateName:                                                         # string (an optional prefix to use to generate a unique name; has the same validation rules as name; optional, and is applied only name if is not specified)
annotations:                                                          # map[string]string (map of string keys and values that can be used by external tooling to store and retrieve arbitrary metadata about the object)
  [string]:                                                           # string
items:                                                                # []github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.Event (list of events)
- kind:                                                               # string (kind of object, in CamelCase; cannot be updated)
  id:                                                                 # string (name of the object; must be a DNS_SUBDOMAIN and unique among all objects of the same kind within the same namespace; used in resource URLs; cannot be updated)
  uid:                                                                # github.com/GoogleCloudPlatform/kubernetes/pkg/types.UID (unique UUID across space and time; populated by the system, read-only; cannot be updated)
  creationTimestamp:                                                  # github.com/GoogleCloudPlatform/kubernetes/pkg/util.Time (RFC 3339 date and time at which the object was created; populated by the system, read-only; null for lists)
  selfLink:                                                           # string (URL for the object; populated by the system, read-only)
  resourceVersion:                                                    # uint64 (string that identifies the internal version of this object that can be used by clients to determine when objects have changed; populated by the system, read-only; value must be treated as opaque by clients and passed unmodified back to the server: https://github.com/GoogleCloudPlatform/kubernetes/blob/master/docs/api-conventions.md#concurrency-control-and-consistency)
  apiVersion:                                                         # string (version of the schema the object should have)
  namespace:                                                          # string (namespace to which the object belongs; must be a DNS_SUBDOMAIN; 'default' by default; cannot be updated)
  deletionTimestamp:                                                  # *github.com/GoogleCloudPlatform/kubernetes/pkg/util.Time (RFC 3339 date and time at which the object will be deleted; populated by the system when a graceful deletion is requested, read-only; if not set, graceful deletion of the object has not been requested)
  generateName:                                                       # string (an optional prefix to use to generate a unique name; has the same validation rules as name; optional, and is applied only name if is not specified)
  annotations:                                                        # map[string]string (map of string keys and values that can be used by external tooling to store and retrieve arbitrary metadata about the object)
    [string]:                                                         # string
  involvedObject:                                                     # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ObjectReference (object that this event is about)
    kind:                                                             # string (kind of the referent)
    namespace:                                                        # string (namespace of the referent)
    name:                                                             # string (id of the referent)
    uid:                                                              # github.com/GoogleCloudPlatform/kubernetes/pkg/types.UID (uid of the referent)
    apiVersion:                                                       # string (API version of the referent)
    resourceVersion:                                                  # string (specific resourceVersion to which this reference is made, if any: https://github.com/GoogleCloudPlatform/kubernetes/blob/master/docs/api-conventions.md#concurrency-control-and-consistency)
    fieldPath:                                                        # string (if referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2])
  status:                                                             # string (short, machine understandable string that describes the current status of the referred object)
  reason:                                                             # string (short, machine understandable string that gives the reason for the transition into the object's current status)
  message:                                                            # string (human-readable description of the status of this operation)
  source:                                                             # string (component reporting this event; short machine understandable string)
  host:                                                               # string (host name on which this event was generated)
  timestamp:                                                          # github.com/GoogleCloudPlatform/kubernetes/pkg/util.Time (time at which the client recorded the event)
  firstTimestamp:                                                     # github.com/GoogleCloudPlatform/kubernetes/pkg/util.Time (the time at which the event was first recorded)
  lastTimestamp:                                                      # github.com/GoogleCloudPlatform/kubernetes/pkg/util.Time (the time at which the most recent occurance of this event was recorded)
  count:                                                              # int (the number of times this event has occurred)


LimitRange
==========

LimitRange sets resource usage limits for each kind of resource in a Namespace

kind: LimitRange                                                      # string (kind of object, in CamelCase; cannot be updated)
id:                                                                   # string (name of the object; must be a DNS_SUBDOMAIN and unique among all objects of the same kind within the same namespace; used in resource URLs; cannot be updated)
uid:                                                                  # github.com/GoogleCloudPlatform/kubernetes/pkg/types.UID (unique UUID across space and time; populated by the system, read-only; cannot be updated)
creationTimestamp:                                                    # github.com/GoogleCloudPlatform/kubernetes/pkg/util.Time (RFC 3339 date and time at which the object was created; populated by the system, read-only; null for lists)
selfLink:                                                             # string (URL for the object; populated by the system, read-only)
resourceVersion:                                                      # uint64 (string that identifies the internal version of this object that can be used by clients to determine when objects have changed; populated by the system, read-only; value must be treated as opaque by clients and passed unmodified back to the server: https://github.com/GoogleCloudPlatform/kubernetes/blob/master/docs/api-conventions.md#concurrency-control-and-consistency)
apiVersion: v1beta1                                                   # string (version of the schema the object should have)
namespace:                                                            # string (namespace to which the object belongs; must be a DNS_SUBDOMAIN; 'default' by default; cannot be updated)
deletionTimestamp:                                                    # *github.com/GoogleCloudPlatform/kubernetes/pkg/util.Time (RFC 3339 date and time at which the object will be deleted; populated by the system when a graceful deletion is requested, read-only; if not set, graceful deletion of the object has not been requested)
generateName:                                                         # string (an optional prefix to use to generate a unique name; has the same validation rules as name; optional, and is applied only name if is not specified)
annotations:                                                          # map[string]string (map of string keys and values that can be used by external tooling to store and retrieve arbitrary metadata about the object)
  [string]:                                                           # string
spec:                                                                 # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.LimitRangeSpec (spec defines the limits enforced)
  limits:                                                             # []github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.LimitRangeItem (limits is the list of LimitRangeItem objects that are enforced)
  - type: Container|Pod                                               # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.LimitType (type of resource that this limit applies to)
    max:                                                              # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ResourceList (max usage constraints on this kind by resource name)
      [github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ResourceName]: # github.com/GoogleCloudPlatform/kubernetes/pkg/util.IntOrString
    min:                                                              # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ResourceList (min usage constraints on this kind by resource name)
      [github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ResourceName]: # github.com/GoogleCloudPlatform/kubernetes/pkg/util.IntOrString
    default:                                                          # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ResourceList (default values on this kind by resource name if omitted)
      [github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ResourceName]: # github.com/GoogleCloudPlatform/kubernetes/pkg/util.IntOrString


LimitRangeList
==============

LimitRangeList is a list of LimitRange items.

kind: LimitRangeList                                                  # string (kind of object, in CamelCase; cannot be updated)
id:                                                                   # string (name of the object; must be a DNS_SUBDOMAIN and unique among all objects of the same kind within the same namespace; used in resource URLs; cannot be updated)
uid:                                                                  # github.com/GoogleCloudPlatform/kubernetes/pkg/types.UID (unique UUID across space and time; populated by the system, read-only; cannot be updated)
creationTimestamp:                                                    # github.com/GoogleCloudPlatform/kubernetes/pkg/util.Time (RFC 3339 date and time at which the object was created; populated by the system, read-only; null for lists)
selfLink:                                                             # string (URL for the object; populated by the system, read-only)
resourceVersion:                                                      # uint64 (string that identifies the internal version of this object that can be used by clients to determine when objects have changed; populated by the system, read-only; value must be treated as opaque by clients and passed unmodified back to the server: https://github.com/GoogleCloudPlatform/kubernetes/blob/master/docs/api-conventions.md#concurrency-control-and-consistency)
apiVersion: v1beta1                                                   # string (version of the schema the object should have)
namespace:                                                            # string (namespace to which the object belongs; must be a DNS_SUBDOMAIN; 'default' by default; cannot be updated)
deletionTimestamp:                                                    # *github.com/GoogleCloudPlatform/kubernetes/pkg/util.Time (RFC 3339 date and time at which the object will be deleted; populated by the system when a graceful deletion is requested, read-only; if not set, graceful deletion of the object has not been requested)
generateName:                                                         # string (an optional prefix to use to generate a unique name; has the same validation rules as name; optional, and is applied only name if is not specified)
annotations:                                                          # map[string]string (map of string keys and values that can be used by external tooling to store and retrieve arbitrary metadata about the object)
  [string]:                                                           # string
items:                                                                # []github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.LimitRange (items is a list of LimitRange objects)
- kind:                                                               # string (kind of object, in CamelCase; cannot be updated)
  id:                                                                 # string (name of the object; must be a DNS_SUBDOMAIN and unique among all objects of the same kind within the same namespace; used in resource URLs; cannot be updated)
  uid:                                                                # github.com/GoogleCloudPlatform/kubernetes/pkg/types.UID (unique UUID across space and time; populated by the system, read-only; cannot be updated)
  creationTimestamp:                                                  # github.com/GoogleCloudPlatform/kubernetes/pkg/util.Time (RFC 3339 date and time at which the object was created; populated by the system, read-only; null for lists)
  selfLink:                                                           # string (URL for the object; populated by the system, read-only)
  resourceVersion:                                                    # uint64 (string that identifies the internal version of this object that can be used by clients to determine when objects have changed; populated by the system, read-only; value must be treated as opaque by clients and passed unmodified back to the server: https://github.com/GoogleCloudPlatform/kubernetes/blob/master/docs/api-conventions.md#concurrency-control-and-consistency)
  apiVersion:                                                         # string (version of the schema the object should have)
  namespace:                                                          # string (namespace to which the object belongs; must be a DNS_SUBDOMAIN; 'default' by default; cannot be updated)
  deletionTimestamp:                                                  # *github.com/GoogleCloudPlatform/kubernetes/pkg/util.Time (RFC 3339 date and time at which the object will be deleted; populated by the system when a graceful deletion is requested, read-only; if not set, graceful deletion of the object has not been requested)
  generateName:                                                       # string (an optional prefix to use to generate a unique name; has the same validation rules as name; optional, and is applied only name if is not specified)
  annotations:                                                        # map[string]string (map of string keys and values that can be used by external tooling to store and retrieve arbitrary metadata about the object)
    [string]:                                                         # string
  spec:                                                               # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.LimitRangeSpec (spec defines the limits enforced)
    limits:                                                           # []github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.LimitRangeItem (limits is the list of LimitRangeItem objects that are enforced)
    - type: Container|Pod                                             # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.LimitType (type of resource that this limit applies to)
      max:                                                            # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ResourceList (max usage constraints on this kind by resource name)
        [github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ResourceName]: # github.com/GoogleCloudPlatform/kubernetes/pkg/util.IntOrString
      min:                                                            # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ResourceList (min usage constraints on this kind by resource name)
        [github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ResourceName]: # github.com/GoogleCloudPlatform/kubernetes/pkg/util.IntOrString
      default:                                                        # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ResourceList (default values on this kind by resource name if omitted)
        [github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ResourceName]: # github.com/GoogleCloudPlatform/kubernetes/pkg/util.IntOrString


List
====

List holds a list of objects, which may not be known by the server.

kind: List                                                            # string (kind of object, in CamelCase; cannot be updated)
id:                                                                   # string (name of the object; must be a DNS_SUBDOMAIN and unique among all objects of the same kind within the same namespace; used in resource URLs; cannot be updated)
uid:                                                                  # github.com/GoogleCloudPlatform/kubernetes/pkg/types.UID (unique UUID across space and time; populated by the system, read-only; cannot be updated)
creationTimestamp:                                                    # github.com/GoogleCloudPlatform/kubernetes/pkg/util.Time (RFC 3339 date and time at which the object was created; populated by the system, read-only; null for lists)
selfLink:                                                             # string (URL for the object; populated by the system, read-only)
resourceVersion:                                                      # uint64 (string that identifies the internal version of this object that can be used by clients to determine when objects have changed; populated by the system, read-only; value must be treated as opaque by clients and passed unmodified back to the server: https://github.com/GoogleCloudPlatform/kubernetes/blob/master/docs/api-conventions.md#concurrency-control-and-consistency)
apiVersion: v1beta1                                                   # string (version of the schema the object should have)
namespace:                                                            # string (namespace to which the object belongs; must be a DNS_SUBDOMAIN; 'default' by default; cannot be updated)
deletionTimestamp:                                                    # *github.com/GoogleCloudPlatform/kubernetes/pkg/util.Time (RFC 3339 date and time at which the object will be deleted; populated by the system when a graceful deletion is requested, read-only; if not set, graceful deletion of the object has not been requested)
generateName:                                                         # string (an optional prefix to use to generate a unique name; has the same validation rules as name; optional, and is applied only name if is not specified)
annotations:                                                          # map[string]string (map of string keys and values that can be used by external tooling to store and retrieve arbitrary metadata about the object)
  [string]:                                                           # string
items:                                                                # []github.com/GoogleCloudPlatform/kubernetes/pkg/runtime.RawExtension (list of objects)
- - [byte]                                                            # 


ListOptions
===========

ListOptions is the query options to a standard REST list call

kind: ListOptions                                                     # string (kind of object, in CamelCase; cannot be updated)
id:                                                                   # string (name of the object; must be a DNS_SUBDOMAIN and unique among all objects of the same kind within the same namespace; used in resource URLs; cannot be updated)
uid:                                                                  # github.com/GoogleCloudPlatform/kubernetes/pkg/types.UID (unique UUID across space and time; populated by the system, read-only; cannot be updated)
creationTimestamp:                                                    # github.com/GoogleCloudPlatform/kubernetes/pkg/util.Time (RFC 3339 date and time at which the object was created; populated by the system, read-only; null for lists)
selfLink:                                                             # string (URL for the object; populated by the system, read-only)
resourceVersion:                                                      # uint64 (string that identifies the internal version of this object that can be used by clients to determine when objects have changed; populated by the system, read-only; value must be treated as opaque by clients and passed unmodified back to the server: https://github.com/GoogleCloudPlatform/kubernetes/blob/master/docs/api-conventions.md#concurrency-control-and-consistency)
apiVersion: v1beta1                                                   # string (version of the schema the object should have)
namespace:                                                            # string (namespace to which the object belongs; must be a DNS_SUBDOMAIN; 'default' by default; cannot be updated)
deletionTimestamp:                                                    # *github.com/GoogleCloudPlatform/kubernetes/pkg/util.Time (RFC 3339 date and time at which the object will be deleted; populated by the system when a graceful deletion is requested, read-only; if not set, graceful deletion of the object has not been requested)
generateName:                                                         # string (an optional prefix to use to generate a unique name; has the same validation rules as name; optional, and is applied only name if is not specified)
annotations:                                                          # map[string]string (map of string keys and values that can be used by external tooling to store and retrieve arbitrary metadata about the object)
  [string]:                                                           # string
labels:                                                               # string (a selector to restrict the list of returned objects by their labels; defaults to everything)
fields:                                                               # string (a selector to restrict the list of returned objects by their fields; defaults to everything)
watch:                                                                # bool (watch for changes to the described resources and return them as a stream of add, update, and remove notifications; specify resourceVersion)
resourceVersion:                                                      # string (when specified with a watch call, shows changes that occur after that particular version of a resource; defaults to changes from the beginning of history)


Minion
======

Minion is a worker node in Kubernetenes.
The name of the minion according to etcd is in ID.

kind: Minion                                                          # string (kind of object, in CamelCase; cannot be updated)
id:                                                                   # string (name of the object; must be a DNS_SUBDOMAIN and unique among all objects of the same kind within the same namespace; used in resource URLs; cannot be updated)
uid:                                                                  # github.com/GoogleCloudPlatform/kubernetes/pkg/types.UID (unique UUID across space and time; populated by the system, read-only; cannot be updated)
creationTimestamp:                                                    # github.com/GoogleCloudPlatform/kubernetes/pkg/util.Time (RFC 3339 date and time at which the object was created; populated by the system, read-only; null for lists)
selfLink:                                                             # string (URL for the object; populated by the system, read-only)
resourceVersion:                                                      # uint64 (string that identifies the internal version of this object that can be used by clients to determine when objects have changed; populated by the system, read-only; value must be treated as opaque by clients and passed unmodified back to the server: https://github.com/GoogleCloudPlatform/kubernetes/blob/master/docs/api-conventions.md#concurrency-control-and-consistency)
apiVersion: v1beta1                                                   # string (version of the schema the object should have)
namespace:                                                            # string (namespace to which the object belongs; must be a DNS_SUBDOMAIN; 'default' by default; cannot be updated)
deletionTimestamp:                                                    # *github.com/GoogleCloudPlatform/kubernetes/pkg/util.Time (RFC 3339 date and time at which the object will be deleted; populated by the system when a graceful deletion is requested, read-only; if not set, graceful deletion of the object has not been requested)
generateName:                                                         # string (an optional prefix to use to generate a unique name; has the same validation rules as name; optional, and is applied only name if is not specified)
annotations:                                                          # map[string]string (map of string keys and values that can be used by external tooling to store and retrieve arbitrary metadata about the object)
  [string]:                                                           # string
hostIP:                                                               # string (IP address of the node)
resources:                                                            # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.NodeResources (characterization of node resources)
  capacity:                                                           # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ResourceList (resource capacity of a node represented as a map of resource name to quantity of resource)
    [github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ResourceName]: # github.com/GoogleCloudPlatform/kubernetes/pkg/util.IntOrString
podCIDR:                                                              # string (IP range assigned to the node)
unschedulable:                                                        # bool (disable pod scheduling on the node)
status:                                                               # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.NodeStatus (current status of node)
  phase: Pending|Running|Terminated                                   # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.NodePhase (node phase is the current lifecycle phase of the node)
  conditions:                                                         # []github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.NodeCondition (conditions is an array of current node conditions)
  - kind: Reachable|Ready|Schedulable                                 # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.NodeConditionKind (kind of the condition, one of Reachable, Ready, Schedulable)
    status: Full|None|Unknown                                         # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ConditionStatus (status of the condition, one of Full, None, Unknown)
    lastProbeTime:                                                    # github.com/GoogleCloudPlatform/kubernetes/pkg/util.Time (last time the condition was probed)
    lastTransitionTime:                                               # github.com/GoogleCloudPlatform/kubernetes/pkg/util.Time (last time the condition transit from one status to another)
    reason:                                                           # string ((brief) reason for the condition's last transition)
    message:                                                          # string (human readable message indicating details about last transition)
  addresses:                                                          # []github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.NodeAddress (list of addresses reachable to the node)
  - type: ExternalIP|Hostname|InternalIP                              # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.NodeAddressType (type of the node address, e.g. external ip, internal ip, hostname, etc)
    address:                                                          # string (string representation of the address)
  nodeInfo:                                                           # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.NodeSystemInfo (node identity is a set of ids/uuids to uniquely identify the node)
    machineID:                                                        # string (machine id is the machine-id reported by the node)
    systemUUID:                                                       # string (system uuid is the system-uuid reported by the node)
    bootID:                                                           # string (boot id is the boot-id reported by the node)
    kernelVersion:                                                    # string (Kernel version reported by the node from 'uname -r' (e.g. 3.16.0-0.bpo.4-amd64))
    osImage:                                                          # string (OS image used reported by the node from /etc/os-release (e.g. Debian GNU/Linux 7 (wheezy)))
    containerRuntimeVersion:                                          # string (Container runtime version reported by the node through runtime remote API (e.g. docker://1.5.0))
    kubeletVersion:                                                   # string (Kubelet version reported by the node)
    KubeProxyVersion:                                                 # string (Kube-proxy version reported by the node)
labels:                                                               # map[string]string (map of string keys and values that can be used to organize and categorize minions; labels of a minion assigned by the scheduler must match the scheduled pod's nodeSelector)
  [string]:                                                           # string
externalID:                                                           # string (external id of the node assigned by some machine database (e.g. a cloud provider). Defaults to node name when empty.)


MinionList
==========

MinionList is a list of minions.

kind: MinionList                                                      # string (kind of object, in CamelCase; cannot be updated)
id:                                                                   # string (name of the object; must be a DNS_SUBDOMAIN and unique among all objects of the same kind within the same namespace; used in resource URLs; cannot be updated)
uid:                                                                  # github.com/GoogleCloudPlatform/kubernetes/pkg/types.UID (unique UUID across space and time; populated by the system, read-only; cannot be updated)
creationTimestamp:                                                    # github.com/GoogleCloudPlatform/kubernetes/pkg/util.Time (RFC 3339 date and time at which the object was created; populated by the system, read-only; null for lists)
selfLink:                                                             # string (URL for the object; populated by the system, read-only)
resourceVersion:                                                      # uint64 (string that identifies the internal version of this object that can be used by clients to determine when objects have changed; populated by the system, read-only; value must be treated as opaque by clients and passed unmodified back to the server: https://github.com/GoogleCloudPlatform/kubernetes/blob/master/docs/api-conventions.md#concurrency-control-and-consistency)
apiVersion: v1beta1                                                   # string (version of the schema the object should have)
namespace:                                                            # string (namespace to which the object belongs; must be a DNS_SUBDOMAIN; 'default' by default; cannot be updated)
deletionTimestamp:                                                    # *github.com/GoogleCloudPlatform/kubernetes/pkg/util.Time (RFC 3339 date and time at which the object will be deleted; populated by the system when a graceful deletion is requested, read-only; if not set, graceful deletion of the object has not been requested)
generateName:                                                         # string (an optional prefix to use to generate a unique name; has the same validation rules as name; optional, and is applied only name if is not specified)
annotations:                                                          # map[string]string (map of string keys and values that can be used by external tooling to store and retrieve arbitrary metadata about the object)
  [string]:                                                           # string
minions:                                                              # []github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.Minion (list of nodes; deprecated)
- kind:                                                               # string (kind of object, in CamelCase; cannot be updated)
  id:                                                                 # string (name of the object; must be a DNS_SUBDOMAIN and unique among all objects of the same kind within the same namespace; used in resource URLs; cannot be updated)
  uid:                                                                # github.com/GoogleCloudPlatform/kubernetes/pkg/types.UID (unique UUID across space and time; populated by the system, read-only; cannot be updated)
  creationTimestamp:                                                  # github.com/GoogleCloudPlatform/kubernetes/pkg/util.Time (RFC 3339 date and time at which the object was created; populated by the system, read-only; null for lists)
  selfLink:                                                           # string (URL for the object; populated by the system, read-only)
  resourceVersion:                                                    # uint64 (string that identifies the internal version of this object that can be used by clients to determine when objects have changed; populated by the system, read-only; value must be treated as opaque by clients and passed unmodified back to the server: https://github.com/GoogleCloudPlatform/kubernetes/blob/master/docs/api-conventions.md#concurrency-control-and-consistency)
  apiVersion:                                                         # string (version of the schema the object should have)
  namespace:                                                          # string (namespace to which the object belongs; must be a DNS_SUBDOMAIN; 'default' by default; cannot be updated)
  deletionTimestamp:                                                  # *github.com/GoogleCloudPlatform/kubernetes/pkg/util.Time (RFC 3339 date and time at which the object will be deleted; populated by the system when a graceful deletion is requested, read-only; if not set, graceful deletion of the object has not been requested)
  generateName:                                                       # string (an optional prefix to use to generate a unique name; has the same validation rules as name; optional, and is applied only name if is not specified)
  annotations:                                                        # map[string]string (map of string keys and values that can be used by external tooling to store and retrieve arbitrary metadata about the object)
    [string]:                                                         # string
  hostIP:                                                             # string (IP address of the node)
  resources:                                                          # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.NodeResources (characterization of node resources)
    capacity:                                                         # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ResourceList (resource capacity of a node represented as a map of resource name to quantity of resource)
      [github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ResourceName]: # github.com/GoogleCloudPlatform/kubernetes/pkg/util.IntOrString
  podCIDR:                                                            # string (IP range assigned to the node)
  unschedulable:                                                      # bool (disable pod scheduling on the node)
  status:                                                             # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.NodeStatus (current status of node)
    phase: Pending|Running|Terminated                                 # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.NodePhase (node phase is the current lifecycle phase of the node)
    conditions:                                                       # []github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.NodeCondition (conditions is an array of current node conditions)
    - kind: Reachable|Ready|Schedulable                               # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.NodeConditionKind (kind of the condition, one of Reachable, Ready, Schedulable)
      status: Full|None|Unknown                                       # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ConditionStatus (status of the condition, one of Full, None, Unknown)
      lastProbeTime:                                                  # github.com/GoogleCloudPlatform/kubernetes/pkg/util.Time (last time the condition was probed)
      lastTransitionTime:                                             # github.com/GoogleCloudPlatform/kubernetes/pkg/util.Time (last time the condition transit from one status to another)
      reason:                                                         # string ((brief) reason for the condition's last transition)
      message:                                                        # string (human readable message indicating details about last transition)
    addresses:                                                        # []github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.NodeAddress (list of addresses reachable to the node)
    - type: ExternalIP|Hostname|InternalIP                            # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.NodeAddressType (type of the node address, e.g. external ip, internal ip, hostname, etc)
      address:                                                        # string (string representation of the address)
    nodeInfo:                                                         # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.NodeSystemInfo (node identity is a set of ids/uuids to uniquely identify the node)
      machineID:                                                      # string (machine id is the machine-id reported by the node)
      systemUUID:                                                     # string (system uuid is the system-uuid reported by the node)
      bootID:                                                         # string (boot id is the boot-id reported by the node)
      kernelVersion:                                                  # string (Kernel version reported by the node from 'uname -r' (e.g. 3.16.0-0.bpo.4-amd64))
      osImage:                                                        # string (OS image used reported by the node from /etc/os-release (e.g. Debian GNU/Linux 7 (wheezy)))
      containerRuntimeVersion:                                        # string (Container runtime version reported by the node through runtime remote API (e.g. docker://1.5.0))
      kubeletVersion:                                                 # string (Kubelet version reported by the node)
      KubeProxyVersion:                                               # string (Kube-proxy version reported by the node)
  labels:                                                             # map[string]string (map of string keys and values that can be used to organize and categorize minions; labels of a minion assigned by the scheduler must match the scheduled pod's nodeSelector)
    [string]:                                                         # string
  externalID:                                                         # string (external id of the node assigned by some machine database (e.g. a cloud provider). Defaults to node name when empty.)
items:                                                                # []github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.Minion (list of nodes)
- kind:                                                               # string (kind of object, in CamelCase; cannot be updated)
  id:                                                                 # string (name of the object; must be a DNS_SUBDOMAIN and unique among all objects of the same kind within the same namespace; used in resource URLs; cannot be updated)
  uid:                                                                # github.com/GoogleCloudPlatform/kubernetes/pkg/types.UID (unique UUID across space and time; populated by the system, read-only; cannot be updated)
  creationTimestamp:                                                  # github.com/GoogleCloudPlatform/kubernetes/pkg/util.Time (RFC 3339 date and time at which the object was created; populated by the system, read-only; null for lists)
  selfLink:                                                           # string (URL for the object; populated by the system, read-only)
  resourceVersion:                                                    # uint64 (string that identifies the internal version of this object that can be used by clients to determine when objects have changed; populated by the system, read-only; value must be treated as opaque by clients and passed unmodified back to the server: https://github.com/GoogleCloudPlatform/kubernetes/blob/master/docs/api-conventions.md#concurrency-control-and-consistency)
  apiVersion:                                                         # string (version of the schema the object should have)
  namespace:                                                          # string (namespace to which the object belongs; must be a DNS_SUBDOMAIN; 'default' by default; cannot be updated)
  deletionTimestamp:                                                  # *github.com/GoogleCloudPlatform/kubernetes/pkg/util.Time (RFC 3339 date and time at which the object will be deleted; populated by the system when a graceful deletion is requested, read-only; if not set, graceful deletion of the object has not been requested)
  generateName:                                                       # string (an optional prefix to use to generate a unique name; has the same validation rules as name; optional, and is applied only name if is not specified)
  annotations:                                                        # map[string]string (map of string keys and values that can be used by external tooling to store and retrieve arbitrary metadata about the object)
    [string]:                                                         # string
  hostIP:                                                             # string (IP address of the node)
  resources:                                                          # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.NodeResources (characterization of node resources)
    capacity:                                                         # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ResourceList (resource capacity of a node represented as a map of resource name to quantity of resource)
      [github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ResourceName]: # github.com/GoogleCloudPlatform/kubernetes/pkg/util.IntOrString
  podCIDR:                                                            # string (IP range assigned to the node)
  unschedulable:                                                      # bool (disable pod scheduling on the node)
  status:                                                             # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.NodeStatus (current status of node)
    phase: Pending|Running|Terminated                                 # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.NodePhase (node phase is the current lifecycle phase of the node)
    conditions:                                                       # []github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.NodeCondition (conditions is an array of current node conditions)
    - kind: Reachable|Ready|Schedulable                               # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.NodeConditionKind (kind of the condition, one of Reachable, Ready, Schedulable)
      status: Full|None|Unknown                                       # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ConditionStatus (status of the condition, one of Full, None, Unknown)
      lastProbeTime:                                                  # github.com/GoogleCloudPlatform/kubernetes/pkg/util.Time (last time the condition was probed)
      lastTransitionTime:                                             # github.com/GoogleCloudPlatform/kubernetes/pkg/util.Time (last time the condition transit from one status to another)
      reason:                                                         # string ((brief) reason for the condition's last transition)
      message:                                                        # string (human readable message indicating details about last transition)
    addresses:                                                        # []github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.NodeAddress (list of addresses reachable to the node)
    - type: ExternalIP|Hostname|InternalIP                            # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.NodeAddressType (type of the node address, e.g. external ip, internal ip, hostname, etc)
      address:                                                        # string (string representation of the address)
    nodeInfo:                                                         # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.NodeSystemInfo (node identity is a set of ids/uuids to uniquely identify the node)
      machineID:                                                      # string (machine id is the machine-id reported by the node)
      systemUUID:                                                     # string (system uuid is the system-uuid reported by the node)
      bootID:                                                         # string (boot id is the boot-id reported by the node)
      kernelVersion:                                                  # string (Kernel version reported by the node from 'uname -r' (e.g. 3.16.0-0.bpo.4-amd64))
      osImage:                                                        # string (OS image used reported by the node from /etc/os-release (e.g. Debian GNU/Linux 7 (wheezy)))
      containerRuntimeVersion:                                        # string (Container runtime version reported by the node through runtime remote API (e.g. docker://1.5.0))
      kubeletVersion:                                                 # string (Kubelet version reported by the node)
      KubeProxyVersion:                                               # string (Kube-proxy version reported by the node)
  labels:                                                             # map[string]string (map of string keys and values that can be used to organize and categorize minions; labels of a minion assigned by the scheduler must match the scheduled pod's nodeSelector)
    [string]:                                                         # string
  externalID:                                                         # string (external id of the node assigned by some machine database (e.g. a cloud provider). Defaults to node name when empty.)


Namespace
=========

A namespace provides a scope for Names.
Use of multiple namespaces is optional

kind: Namespace                                                       # string (kind of object, in CamelCase; cannot be updated)
id:                                                                   # string (name of the object; must be a DNS_SUBDOMAIN and unique among all objects of the same kind within the same namespace; used in resource URLs; cannot be updated)
uid:                                                                  # github.com/GoogleCloudPlatform/kubernetes/pkg/types.UID (unique UUID across space and time; populated by the system, read-only; cannot be updated)
creationTimestamp:                                                    # github.com/GoogleCloudPlatform/kubernetes/pkg/util.Time (RFC 3339 date and time at which the object was created; populated by the system, read-only; null for lists)
selfLink:                                                             # string (URL for the object; populated by the system, read-only)
resourceVersion:                                                      # uint64 (string that identifies the internal version of this object that can be used by clients to determine when objects have changed; populated by the system, read-only; value must be treated as opaque by clients and passed unmodified back to the server: https://github.com/GoogleCloudPlatform/kubernetes/blob/master/docs/api-conventions.md#concurrency-control-and-consistency)
apiVersion: v1beta1                                                   # string (version of the schema the object should have)
namespace:                                                            # string (namespace to which the object belongs; must be a DNS_SUBDOMAIN; 'default' by default; cannot be updated)
deletionTimestamp:                                                    # *github.com/GoogleCloudPlatform/kubernetes/pkg/util.Time (RFC 3339 date and time at which the object will be deleted; populated by the system when a graceful deletion is requested, read-only; if not set, graceful deletion of the object has not been requested)
generateName:                                                         # string (an optional prefix to use to generate a unique name; has the same validation rules as name; optional, and is applied only name if is not specified)
annotations:                                                          # map[string]string (map of string keys and values that can be used by external tooling to store and retrieve arbitrary metadata about the object)
  [string]:                                                           # string
labels:                                                               # map[string]string (map of string keys and values that can be used to organize and categorize namespaces)
  [string]:                                                           # string
spec:                                                                 # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.NamespaceSpec (spec defines the behavior of the Namespace)
  finalizers:                                                         # []github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.FinalizerName (an opaque list of values that must be empty to permanently remove object from storage)
  - [github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.FinalizerName] # 
status:                                                               # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.NamespaceStatus (status describes the current status of a Namespace; read-only)
  phase: Active|Terminating                                           # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.NamespacePhase (phase is the current lifecycle phase of the namespace)


NamespaceList
=============

NamespaceList is a list of Namespaces.

kind: NamespaceList                                                   # string (kind of object, in CamelCase; cannot be updated)
id:                                                                   # string (name of the object; must be a DNS_SUBDOMAIN and unique among all objects of the same kind within the same namespace; used in resource URLs; cannot be updated)
uid:                                                                  # github.com/GoogleCloudPlatform/kubernetes/pkg/types.UID (unique UUID across space and time; populated by the system, read-only; cannot be updated)
creationTimestamp:                                                    # github.com/GoogleCloudPlatform/kubernetes/pkg/util.Time (RFC 3339 date and time at which the object was created; populated by the system, read-only; null for lists)
selfLink:                                                             # string (URL for the object; populated by the system, read-only)
resourceVersion:                                                      # uint64 (string that identifies the internal version of this object that can be used by clients to determine when objects have changed; populated by the system, read-only; value must be treated as opaque by clients and passed unmodified back to the server: https://github.com/GoogleCloudPlatform/kubernetes/blob/master/docs/api-conventions.md#concurrency-control-and-consistency)
apiVersion: v1beta1                                                   # string (version of the schema the object should have)
namespace:                                                            # string (namespace to which the object belongs; must be a DNS_SUBDOMAIN; 'default' by default; cannot be updated)
deletionTimestamp:                                                    # *github.com/GoogleCloudPlatform/kubernetes/pkg/util.Time (RFC 3339 date and time at which the object will be deleted; populated by the system when a graceful deletion is requested, read-only; if not set, graceful deletion of the object has not been requested)
generateName:                                                         # string (an optional prefix to use to generate a unique name; has the same validation rules as name; optional, and is applied only name if is not specified)
annotations:                                                          # map[string]string (map of string keys and values that can be used by external tooling to store and retrieve arbitrary metadata about the object)
  [string]:                                                           # string
items:                                                                # []github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.Namespace (items is the list of Namespace objects in the list)
- kind:                                                               # string (kind of object, in CamelCase; cannot be updated)
  id:                                                                 # string (name of the object; must be a DNS_SUBDOMAIN and unique among all objects of the same kind within the same namespace; used in resource URLs; cannot be updated)
  uid:                                                                # github.com/GoogleCloudPlatform/kubernetes/pkg/types.UID (unique UUID across space and time; populated by the system, read-only; cannot be updated)
  creationTimestamp:                                                  # github.com/GoogleCloudPlatform/kubernetes/pkg/util.Time (RFC 3339 date and time at which the object was created; populated by the system, read-only; null for lists)
  selfLink:                                                           # string (URL for the object; populated by the system, read-only)
  resourceVersion:                                                    # uint64 (string that identifies the internal version of this object that can be used by clients to determine when objects have changed; populated by the system, read-only; value must be treated as opaque by clients and passed unmodified back to the server: https://github.com/GoogleCloudPlatform/kubernetes/blob/master/docs/api-conventions.md#concurrency-control-and-consistency)
  apiVersion:                                                         # string (version of the schema the object should have)
  namespace:                                                          # string (namespace to which the object belongs; must be a DNS_SUBDOMAIN; 'default' by default; cannot be updated)
  deletionTimestamp:                                                  # *github.com/GoogleCloudPlatform/kubernetes/pkg/util.Time (RFC 3339 date and time at which the object will be deleted; populated by the system when a graceful deletion is requested, read-only; if not set, graceful deletion of the object has not been requested)
  generateName:                                                       # string (an optional prefix to use to generate a unique name; has the same validation rules as name; optional, and is applied only name if is not specified)
  annotations:                                                        # map[string]string (map of string keys and values that can be used by external tooling to store and retrieve arbitrary metadata about the object)
    [string]:                                                         # string
  labels:                                                             # map[string]string (map of string keys and values that can be used to organize and categorize namespaces)
    [string]:                                                         # string
  spec:                                                               # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.NamespaceSpec (spec defines the behavior of the Namespace)
    finalizers:                                                       # []github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.FinalizerName (an opaque list of values that must be empty to permanently remove object from storage)
    - [github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.FinalizerName] # 
  status:                                                             # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.NamespaceStatus (status describes the current status of a Namespace; read-only)
    phase: Active|Terminating                                         # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.NamespacePhase (phase is the current lifecycle phase of the namespace)


NodeInfo
========

NodeInfo is the information collected on the node.

kind: NodeInfo                                                        # string (kind of object, in CamelCase; cannot be updated)
id:                                                                   # string (name of the object; must be a DNS_SUBDOMAIN and unique among all objects of the same kind within the same namespace; used in resource URLs; cannot be updated)
uid:                                                                  # github.com/GoogleCloudPlatform/kubernetes/pkg/types.UID (unique UUID across space and time; populated by the system, read-only; cannot be updated)
creationTimestamp:                                                    # github.com/GoogleCloudPlatform/kubernetes/pkg/util.Time (RFC 3339 date and time at which the object was created; populated by the system, read-only; null for lists)
selfLink:                                                             # string (URL for the object; populated by the system, read-only)
resourceVersion:                                                      # uint64 (string that identifies the internal version of this object that can be used by clients to determine when objects have changed; populated by the system, read-only; value must be treated as opaque by clients and passed unmodified back to the server: https://github.com/GoogleCloudPlatform/kubernetes/blob/master/docs/api-conventions.md#concurrency-control-and-consistency)
apiVersion: v1beta1                                                   # string (version of the schema the object should have)
namespace:                                                            # string (namespace to which the object belongs; must be a DNS_SUBDOMAIN; 'default' by default; cannot be updated)
deletionTimestamp:                                                    # *github.com/GoogleCloudPlatform/kubernetes/pkg/util.Time (RFC 3339 date and time at which the object will be deleted; populated by the system when a graceful deletion is requested, read-only; if not set, graceful deletion of the object has not been requested)
generateName:                                                         # string (an optional prefix to use to generate a unique name; has the same validation rules as name; optional, and is applied only name if is not specified)
annotations:                                                          # map[string]string (map of string keys and values that can be used by external tooling to store and retrieve arbitrary metadata about the object)
  [string]:                                                           # string
capacity:                                                             # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ResourceList (resource capacity of a node represented as a map of resource name to quantity of resource)
  [github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ResourceName]: # github.com/GoogleCloudPlatform/kubernetes/pkg/util.IntOrString
machineID:                                                            # string (machine id is the machine-id reported by the node)
systemUUID:                                                           # string (system uuid is the system-uuid reported by the node)
bootID:                                                               # string (boot id is the boot-id reported by the node)
kernelVersion:                                                        # string (Kernel version reported by the node from 'uname -r' (e.g. 3.16.0-0.bpo.4-amd64))
osImage:                                                              # string (OS image used reported by the node from /etc/os-release (e.g. Debian GNU/Linux 7 (wheezy)))
containerRuntimeVersion:                                              # string (Container runtime version reported by the node through runtime remote API (e.g. docker://1.5.0))
kubeletVersion:                                                       # string (Kubelet version reported by the node)
KubeProxyVersion:                                                     # string (Kube-proxy version reported by the node)


PersistentVolume
================


kind: PersistentVolume                                                # string (kind of object, in CamelCase; cannot be updated)
id:                                                                   # string (name of the object; must be a DNS_SUBDOMAIN and unique among all objects of the same kind within the same namespace; used in resource URLs; cannot be updated)
uid:                                                                  # github.com/GoogleCloudPlatform/kubernetes/pkg/types.UID (unique UUID across space and time; populated by the system, read-only; cannot be updated)
creationTimestamp:                                                    # github.com/GoogleCloudPlatform/kubernetes/pkg/util.Time (RFC 3339 date and time at which the object was created; populated by the system, read-only; null for lists)
selfLink:                                                             # string (URL for the object; populated by the system, read-only)
resourceVersion:                                                      # uint64 (string that identifies the internal version of this object that can be used by clients to determine when objects have changed; populated by the system, read-only; value must be treated as opaque by clients and passed unmodified back to the server: https://github.com/GoogleCloudPlatform/kubernetes/blob/master/docs/api-conventions.md#concurrency-control-and-consistency)
apiVersion: v1beta1                                                   # string (version of the schema the object should have)
namespace:                                                            # string (namespace to which the object belongs; must be a DNS_SUBDOMAIN; 'default' by default; cannot be updated)
deletionTimestamp:                                                    # *github.com/GoogleCloudPlatform/kubernetes/pkg/util.Time (RFC 3339 date and time at which the object will be deleted; populated by the system when a graceful deletion is requested, read-only; if not set, graceful deletion of the object has not been requested)
generateName:                                                         # string (an optional prefix to use to generate a unique name; has the same validation rules as name; optional, and is applied only name if is not specified)
annotations:                                                          # map[string]string (map of string keys and values that can be used by external tooling to store and retrieve arbitrary metadata about the object)
  [string]:                                                           # string
spec:                                                                 # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.PersistentVolumeSpec (specification of a persistent volume as provisioned by an administrator)
  capacity:                                                           # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ResourceList (a description of the persistent volume's resources and capacity)
    [github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ResourceName]: # github.com/GoogleCloudPlatform/kubernetes/pkg/util.IntOrString
  persistentDisk:                                                     # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.GCEPersistentDiskVolumeSource (GCE disk resource provisioned by an admin)
    pdName:                                                           # string (unique name of the PD resource in GCE)
    fsType:                                                           # string (file system type to mount, such as ext4, xfs, ntfs)
    partition:                                                        # int (partition on the disk to mount (e.g., '1' for /dev/sda1); if omitted the plain device name (e.g., /dev/sda) will be mounted)
    readOnly:                                                         # bool (read-only if true, read-write otherwise (false or unspecified))
  hostPath:                                                           # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.HostPathVolumeSource (a HostPath provisioned by a developer or tester; for develment use only)
    path:                                                             # string (path of the directory on the host)
  glusterfs:                                                          # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.GlusterfsVolumeSource (Glusterfs volume resource provisioned by an admin)
    endpoints:                                                        # string (gluster hosts endpoints name)
    path:                                                             # string (path to gluster volume)
    readOnly:                                                         # bool (Glusterfs volume to be mounted with read-only permissions)
  accessModes:                                                        # []github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.AccessModeType (all ways the volume can be mounted)
  - [github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.AccessModeType] # 
  claimRef:                                                           # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ObjectReference (the binding reference to a persistent volume claim)
    kind:                                                             # string (kind of the referent)
    namespace:                                                        # string (namespace of the referent)
    name:                                                             # string (id of the referent)
    uid:                                                              # github.com/GoogleCloudPlatform/kubernetes/pkg/types.UID (uid of the referent)
    apiVersion:                                                       # string (API version of the referent)
    resourceVersion:                                                  # string (specific resourceVersion to which this reference is made, if any: https://github.com/GoogleCloudPlatform/kubernetes/blob/master/docs/api-conventions.md#concurrency-control-and-consistency)
    fieldPath:                                                        # string (if referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2])
status:                                                               # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.PersistentVolumeStatus (current status of a persistent volume; populated by the system, read-only)
  phase: Available|Bound|Released                                     # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.PersistentVolumePhase (the current phase of a persistent volume)


PersistentVolumeClaim
=====================

PersistentVolumeClaim is a user's request for and claim to a persistent volume

kind: PersistentVolumeClaim                                           # string (kind of object, in CamelCase; cannot be updated)
id:                                                                   # string (name of the object; must be a DNS_SUBDOMAIN and unique among all objects of the same kind within the same namespace; used in resource URLs; cannot be updated)
uid:                                                                  # github.com/GoogleCloudPlatform/kubernetes/pkg/types.UID (unique UUID across space and time; populated by the system, read-only; cannot be updated)
creationTimestamp:                                                    # github.com/GoogleCloudPlatform/kubernetes/pkg/util.Time (RFC 3339 date and time at which the object was created; populated by the system, read-only; null for lists)
selfLink:                                                             # string (URL for the object; populated by the system, read-only)
resourceVersion:                                                      # uint64 (string that identifies the internal version of this object that can be used by clients to determine when objects have changed; populated by the system, read-only; value must be treated as opaque by clients and passed unmodified back to the server: https://github.com/GoogleCloudPlatform/kubernetes/blob/master/docs/api-conventions.md#concurrency-control-and-consistency)
apiVersion: v1beta1                                                   # string (version of the schema the object should have)
namespace:                                                            # string (namespace to which the object belongs; must be a DNS_SUBDOMAIN; 'default' by default; cannot be updated)
deletionTimestamp:                                                    # *github.com/GoogleCloudPlatform/kubernetes/pkg/util.Time (RFC 3339 date and time at which the object will be deleted; populated by the system when a graceful deletion is requested, read-only; if not set, graceful deletion of the object has not been requested)
generateName:                                                         # string (an optional prefix to use to generate a unique name; has the same validation rules as name; optional, and is applied only name if is not specified)
annotations:                                                          # map[string]string (map of string keys and values that can be used by external tooling to store and retrieve arbitrary metadata about the object)
  [string]:                                                           # string
spec:                                                                 # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.PersistentVolumeClaimSpec
  accessModes:                                                        # []github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.AccessModeType (the desired access modes the volume should have)
  - [github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.AccessModeType] # 
  resources:                                                          # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ResourceRequirements (the desired resources the volume should have)
    limits:                                                           # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ResourceList (Maximum amount of compute resources allowed)
      [github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ResourceName]: # github.com/GoogleCloudPlatform/kubernetes/pkg/util.IntOrString
    requests:                                                         # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ResourceList (Minimum amount of resources requested)
      [github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ResourceName]: # github.com/GoogleCloudPlatform/kubernetes/pkg/util.IntOrString
status:                                                               # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.PersistentVolumeClaimStatus (the current status of a persistent volume claim; read-only)
  phase: Bound|Pending                                                # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.PersistentVolumeClaimPhase (the current phase of the claim)
  accessModes:                                                        # []github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.AccessModeType (the actual access modes the volume has)
  - [github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.AccessModeType] # 
  capacity:                                                           # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ResourceList (the actual resources the volume has)
    [github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ResourceName]: # github.com/GoogleCloudPlatform/kubernetes/pkg/util.IntOrString
  volumeRef:                                                          # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ObjectReference (a reference to the backing persistent volume, when bound)
    kind:                                                             # string (kind of the referent)
    namespace:                                                        # string (namespace of the referent)
    name:                                                             # string (id of the referent)
    uid:                                                              # github.com/GoogleCloudPlatform/kubernetes/pkg/types.UID (uid of the referent)
    apiVersion:                                                       # string (API version of the referent)
    resourceVersion:                                                  # string (specific resourceVersion to which this reference is made, if any: https://github.com/GoogleCloudPlatform/kubernetes/blob/master/docs/api-conventions.md#concurrency-control-and-consistency)
    fieldPath:                                                        # string (if referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2])


PersistentVolumeClaimList
=========================


kind: PersistentVolumeClaimList                                       # string (kind of object, in CamelCase; cannot be updated)
id:                                                                   # string (name of the object; must be a DNS_SUBDOMAIN and unique among all objects of the same kind within the same namespace; used in resource URLs; cannot be updated)
uid:                                                                  # github.com/GoogleCloudPlatform/kubernetes/pkg/types.UID (unique UUID across space and time; populated by the system, read-only; cannot be updated)
creationTimestamp:                                                    # github.com/GoogleCloudPlatform/kubernetes/pkg/util.Time (RFC 3339 date and time at which the object was created; populated by the system, read-only; null for lists)
selfLink:                                                             # string (URL for the object; populated by the system, read-only)
resourceVersion:                                                      # uint64 (string that identifies the internal version of this object that can be used by clients to determine when objects have changed; populated by the system, read-only; value must be treated as opaque by clients and passed unmodified back to the server: https://github.com/GoogleCloudPlatform/kubernetes/blob/master/docs/api-conventions.md#concurrency-control-and-consistency)
apiVersion: v1beta1                                                   # string (version of the schema the object should have)
namespace:                                                            # string (namespace to which the object belongs; must be a DNS_SUBDOMAIN; 'default' by default; cannot be updated)
deletionTimestamp:                                                    # *github.com/GoogleCloudPlatform/kubernetes/pkg/util.Time (RFC 3339 date and time at which the object will be deleted; populated by the system when a graceful deletion is requested, read-only; if not set, graceful deletion of the object has not been requested)
generateName:                                                         # string (an optional prefix to use to generate a unique name; has the same validation rules as name; optional, and is applied only name if is not specified)
annotations:                                                          # map[string]string (map of string keys and values that can be used by external tooling to store and retrieve arbitrary metadata about the object)
  [string]:                                                           # string
items:                                                                # []github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.PersistentVolumeClaim
- kind:                                                               # string (kind of object, in CamelCase; cannot be updated)
  id:                                                                 # string (name of the object; must be a DNS_SUBDOMAIN and unique among all objects of the same kind within the same namespace; used in resource URLs; cannot be updated)
  uid:                                                                # github.com/GoogleCloudPlatform/kubernetes/pkg/types.UID (unique UUID across space and time; populated by the system, read-only; cannot be updated)
  creationTimestamp:                                                  # github.com/GoogleCloudPlatform/kubernetes/pkg/util.Time (RFC 3339 date and time at which the object was created; populated by the system, read-only; null for lists)
  selfLink:                                                           # string (URL for the object; populated by the system, read-only)
  resourceVersion:                                                    # uint64 (string that identifies the internal version of this object that can be used by clients to determine when objects have changed; populated by the system, read-only; value must be treated as opaque by clients and passed unmodified back to the server: https://github.com/GoogleCloudPlatform/kubernetes/blob/master/docs/api-conventions.md#concurrency-control-and-consistency)
  apiVersion:                                                         # string (version of the schema the object should have)
  namespace:                                                          # string (namespace to which the object belongs; must be a DNS_SUBDOMAIN; 'default' by default; cannot be updated)
  deletionTimestamp:                                                  # *github.com/GoogleCloudPlatform/kubernetes/pkg/util.Time (RFC 3339 date and time at which the object will be deleted; populated by the system when a graceful deletion is requested, read-only; if not set, graceful deletion of the object has not been requested)
  generateName:                                                       # string (an optional prefix to use to generate a unique name; has the same validation rules as name; optional, and is applied only name if is not specified)
  annotations:                                                        # map[string]string (map of string keys and values that can be used by external tooling to store and retrieve arbitrary metadata about the object)
    [string]:                                                         # string
  spec:                                                               # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.PersistentVolumeClaimSpec
    accessModes:                                                      # []github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.AccessModeType (the desired access modes the volume should have)
    - [github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.AccessModeType] # 
    resources:                                                        # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ResourceRequirements (the desired resources the volume should have)
      limits:                                                         # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ResourceList (Maximum amount of compute resources allowed)
        [github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ResourceName]: # github.com/GoogleCloudPlatform/kubernetes/pkg/util.IntOrString
      requests:                                                       # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ResourceList (Minimum amount of resources requested)
        [github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ResourceName]: # github.com/GoogleCloudPlatform/kubernetes/pkg/util.IntOrString
  status:                                                             # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.PersistentVolumeClaimStatus (the current status of a persistent volume claim; read-only)
    phase: Bound|Pending                                              # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.PersistentVolumeClaimPhase (the current phase of the claim)
    accessModes:                                                      # []github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.AccessModeType (the actual access modes the volume has)
    - [github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.AccessModeType] # 
    capacity:                                                         # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ResourceList (the actual resources the volume has)
      [github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ResourceName]: # github.com/GoogleCloudPlatform/kubernetes/pkg/util.IntOrString
    volumeRef:                                                        # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ObjectReference (a reference to the backing persistent volume, when bound)
      kind:                                                           # string (kind of the referent)
      namespace:                                                      # string (namespace of the referent)
      name:                                                           # string (id of the referent)
      uid:                                                            # github.com/GoogleCloudPlatform/kubernetes/pkg/types.UID (uid of the referent)
      apiVersion:                                                     # string (API version of the referent)
      resourceVersion:                                                # string (specific resourceVersion to which this reference is made, if any: https://github.com/GoogleCloudPlatform/kubernetes/blob/master/docs/api-conventions.md#concurrency-control-and-consistency)
      fieldPath:                                                      # string (if referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2])


PersistentVolumeList
====================


kind: PersistentVolumeList                                            # string (kind of object, in CamelCase; cannot be updated)
id:                                                                   # string (name of the object; must be a DNS_SUBDOMAIN and unique among all objects of the same kind within the same namespace; used in resource URLs; cannot be updated)
uid:                                                                  # github.com/GoogleCloudPlatform/kubernetes/pkg/types.UID (unique UUID across space and time; populated by the system, read-only; cannot be updated)
creationTimestamp:                                                    # github.com/GoogleCloudPlatform/kubernetes/pkg/util.Time (RFC 3339 date and time at which the object was created; populated by the system, read-only; null for lists)
selfLink:                                                             # string (URL for the object; populated by the system, read-only)
resourceVersion:                                                      # uint64 (string that identifies the internal version of this object that can be used by clients to determine when objects have changed; populated by the system, read-only; value must be treated as opaque by clients and passed unmodified back to the server: https://github.com/GoogleCloudPlatform/kubernetes/blob/master/docs/api-conventions.md#concurrency-control-and-consistency)
apiVersion: v1beta1                                                   # string (version of the schema the object should have)
namespace:                                                            # string (namespace to which the object belongs; must be a DNS_SUBDOMAIN; 'default' by default; cannot be updated)
deletionTimestamp:                                                    # *github.com/GoogleCloudPlatform/kubernetes/pkg/util.Time (RFC 3339 date and time at which the object will be deleted; populated by the system when a graceful deletion is requested, read-only; if not set, graceful deletion of the object has not been requested)
generateName:                                                         # string (an optional prefix to use to generate a unique name; has the same validation rules as name; optional, and is applied only name if is not specified)
annotations:                                                          # map[string]string (map of string keys and values that can be used by external tooling to store and retrieve arbitrary metadata about the object)
  [string]:                                                           # string
items:                                                                # []github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.PersistentVolume (list of persistent volumes)
- kind:                                                               # string (kind of object, in CamelCase; cannot be updated)
  id:                                                                 # string (name of the object; must be a DNS_SUBDOMAIN and unique among all objects of the same kind within the same namespace; used in resource URLs; cannot be updated)
  uid:                                                                # github.com/GoogleCloudPlatform/kubernetes/pkg/types.UID (unique UUID across space and time; populated by the system, read-only; cannot be updated)
  creationTimestamp:                                                  # github.com/GoogleCloudPlatform/kubernetes/pkg/util.Time (RFC 3339 date and time at which the object was created; populated by the system, read-only; null for lists)
  selfLink:                                                           # string (URL for the object; populated by the system, read-only)
  resourceVersion:                                                    # uint64 (string that identifies the internal version of this object that can be used by clients to determine when objects have changed; populated by the system, read-only; value must be treated as opaque by clients and passed unmodified back to the server: https://github.com/GoogleCloudPlatform/kubernetes/blob/master/docs/api-conventions.md#concurrency-control-and-consistency)
  apiVersion:                                                         # string (version of the schema the object should have)
  namespace:                                                          # string (namespace to which the object belongs; must be a DNS_SUBDOMAIN; 'default' by default; cannot be updated)
  deletionTimestamp:                                                  # *github.com/GoogleCloudPlatform/kubernetes/pkg/util.Time (RFC 3339 date and time at which the object will be deleted; populated by the system when a graceful deletion is requested, read-only; if not set, graceful deletion of the object has not been requested)
  generateName:                                                       # string (an optional prefix to use to generate a unique name; has the same validation rules as name; optional, and is applied only name if is not specified)
  annotations:                                                        # map[string]string (map of string keys and values that can be used by external tooling to store and retrieve arbitrary metadata about the object)
    [string]:                                                         # string
  spec:                                                               # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.PersistentVolumeSpec (specification of a persistent volume as provisioned by an administrator)
    capacity:                                                         # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ResourceList (a description of the persistent volume's resources and capacity)
      [github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ResourceName]: # github.com/GoogleCloudPlatform/kubernetes/pkg/util.IntOrString
    persistentDisk:                                                   # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.GCEPersistentDiskVolumeSource (GCE disk resource provisioned by an admin)
      pdName:                                                         # string (unique name of the PD resource in GCE)
      fsType:                                                         # string (file system type to mount, such as ext4, xfs, ntfs)
      partition:                                                      # int (partition on the disk to mount (e.g., '1' for /dev/sda1); if omitted the plain device name (e.g., /dev/sda) will be mounted)
      readOnly:                                                       # bool (read-only if true, read-write otherwise (false or unspecified))
    hostPath:                                                         # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.HostPathVolumeSource (a HostPath provisioned by a developer or tester; for develment use only)
      path:                                                           # string (path of the directory on the host)
    glusterfs:                                                        # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.GlusterfsVolumeSource (Glusterfs volume resource provisioned by an admin)
      endpoints:                                                      # string (gluster hosts endpoints name)
      path:                                                           # string (path to gluster volume)
      readOnly:                                                       # bool (Glusterfs volume to be mounted with read-only permissions)
    accessModes:                                                      # []github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.AccessModeType (all ways the volume can be mounted)
    - [github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.AccessModeType] # 
    claimRef:                                                         # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ObjectReference (the binding reference to a persistent volume claim)
      kind:                                                           # string (kind of the referent)
      namespace:                                                      # string (namespace of the referent)
      name:                                                           # string (id of the referent)
      uid:                                                            # github.com/GoogleCloudPlatform/kubernetes/pkg/types.UID (uid of the referent)
      apiVersion:                                                     # string (API version of the referent)
      resourceVersion:                                                # string (specific resourceVersion to which this reference is made, if any: https://github.com/GoogleCloudPlatform/kubernetes/blob/master/docs/api-conventions.md#concurrency-control-and-consistency)
      fieldPath:                                                      # string (if referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2])
  status:                                                             # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.PersistentVolumeStatus (current status of a persistent volume; populated by the system, read-only)
    phase: Available|Bound|Released                                   # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.PersistentVolumePhase (the current phase of a persistent volume)


Pod
===

Pod is a collection of containers, used as either input (create, update) or as output (list, get).

kind: Pod                                                             # string (kind of object, in CamelCase; cannot be updated)
id:                                                                   # string (name of the object; must be a DNS_SUBDOMAIN and unique among all objects of the same kind within the same namespace; used in resource URLs; cannot be updated)
uid:                                                                  # github.com/GoogleCloudPlatform/kubernetes/pkg/types.UID (unique UUID across space and time; populated by the system, read-only; cannot be updated)
creationTimestamp:                                                    # github.com/GoogleCloudPlatform/kubernetes/pkg/util.Time (RFC 3339 date and time at which the object was created; populated by the system, read-only; null for lists)
selfLink:                                                             # string (URL for the object; populated by the system, read-only)
resourceVersion:                                                      # uint64 (string that identifies the internal version of this object that can be used by clients to determine when objects have changed; populated by the system, read-only; value must be treated as opaque by clients and passed unmodified back to the server: https://github.com/GoogleCloudPlatform/kubernetes/blob/master/docs/api-conventions.md#concurrency-control-and-consistency)
apiVersion: v1beta1                                                   # string (version of the schema the object should have)
namespace:                                                            # string (namespace to which the object belongs; must be a DNS_SUBDOMAIN; 'default' by default; cannot be updated)
deletionTimestamp:                                                    # *github.com/GoogleCloudPlatform/kubernetes/pkg/util.Time (RFC 3339 date and time at which the object will be deleted; populated by the system when a graceful deletion is requested, read-only; if not set, graceful deletion of the object has not been requested)
generateName:                                                         # string (an optional prefix to use to generate a unique name; has the same validation rules as name; optional, and is applied only name if is not specified)
annotations:                                                          # map[string]string (map of string keys and values that can be used by external tooling to store and retrieve arbitrary metadata about the object)
  [string]:                                                           # string
labels:                                                               # map[string]string (map of string keys and values that can be used to organize and categorize pods; may match selectors of replication controllers and services)
  [string]:                                                           # string
desiredState:                                                         # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.PodState (specification of the desired state of the pod)
  manifest:                                                           # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ContainerManifest (manifest of containers and volumes comprising the pod)
    version:                                                          # string (manifest version; must be v1beta1)
    id:                                                               # string (manifest name; must be a DNS_SUBDOMAIN; cannot be updated)
    uuid:                                                             # github.com/GoogleCloudPlatform/kubernetes/pkg/types.UID (manifest UUID, populated by the system, read-only)
    volumes:                                                          # []github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.Volume (list of volumes that can be mounted by containers belonging to the pod)
    - name:                                                           # string (volume name; must be a DNS_LABEL and unique within the pod)
      source:                                                         # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.VolumeSource (location and type of volume to mount; at most one of HostDir, EmptyDir, GCEPersistentDisk, or GitRepo; default is EmptyDir)
        hostDir:                                                      # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.HostPathVolumeSource (pre-existing host file or directory; generally for privileged system daemons or other agents tied to the host)
          path:                                                       # string (path of the directory on the host)
        emptyDir:                                                     # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.EmptyDirVolumeSource (temporary directory that shares a pod's lifetime)
          medium: |Memory                                             # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.StorageType (type of storage used to back the volume; must be an empty string (default) or Memory)
        persistentDisk:                                               # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.GCEPersistentDiskVolumeSource (GCE disk resource attached to the host machine on demand)
          pdName:                                                     # string (unique name of the PD resource in GCE)
          fsType:                                                     # string (file system type to mount, such as ext4, xfs, ntfs)
          partition:                                                  # int (partition on the disk to mount (e.g., '1' for /dev/sda1); if omitted the plain device name (e.g., /dev/sda) will be mounted)
          readOnly:                                                   # bool (read-only if true, read-write otherwise (false or unspecified))
        gitRepo:                                                      # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.GitRepoVolumeSource (git repository at a particular revision)
          repository:                                                 # string (repository URL)
          revision:                                                   # string (commit hash for the specified revision)
        secret:                                                       # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.SecretVolumeSource (secret to populate volume with)
          target:                                                     # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ObjectReference (target is a reference to a secret)
            kind:                                                     # string (kind of the referent)
            namespace:                                                # string (namespace of the referent)
            name:                                                     # string (id of the referent)
            uid:                                                      # github.com/GoogleCloudPlatform/kubernetes/pkg/types.UID (uid of the referent)
            apiVersion:                                               # string (API version of the referent)
            resourceVersion:                                          # string (specific resourceVersion to which this reference is made, if any: https://github.com/GoogleCloudPlatform/kubernetes/blob/master/docs/api-conventions.md#concurrency-control-and-consistency)
            fieldPath:                                                # string (if referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2])
        nfs:                                                          # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.NFSVolumeSource (NFS volume that will be mounted in the host machine )
          server:                                                     # string (the hostname or IP address of the NFS server)
          path:                                                       # string (the path that is exported by the NFS server)
          readOnly:                                                   # bool (forces the NFS export to be mounted with read-only permissions)
        iscsi:                                                        # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ISCSIVolumeSource (iSCSI disk attached to host machine on demand)
          targetPortal:                                               # string (iSCSI target portal)
          iqn:                                                        # string (iSCSI Qualified Name)
          lun:                                                        # int (iscsi target lun number)
          fsType:                                                     # string (file system type to mount, such as ext4, xfs, ntfs)
          readOnly:                                                   # bool (read-only if true, read-write otherwise (false or unspecified))
        glusterfs:                                                    # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.GlusterfsVolumeSource (Glusterfs volume that will be mounted on the host machine )
          endpoints:                                                  # string (gluster hosts endpoints name)
          path:                                                       # string (path to gluster volume)
          readOnly:                                                   # bool (Glusterfs volume to be mounted with read-only permissions)
    containers:                                                       # []github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.Container (list of containers belonging to the pod; containers cannot currently be added or removed)
    - name:                                                           # string (name of the container; must be a DNS_LABEL and unique within the pod; cannot be updated)
      image:                                                          # string (Docker image name)
      entrypoint:                                                     # []string (entrypoint array; not executed within a shell; the image's entrypoint is used if this is not provided; cannot be updated)
      - [string]                                                      # 
      command:                                                        # []string (command argv array; not executed within a shell; the image's cmd is used if this is not provided; cannot be updated)
      - [string]                                                      # 
      workingDir:                                                     # string (container's working directory; defaults to image's default; cannot be updated)
      ports:                                                          # []github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ContainerPort (list of ports to expose from the container; cannot be updated)
      - name:                                                         # string (name for the port that can be referred to by services; must be a DNS_LABEL and unique without the pod)
        hostPort:                                                     # int (number of port to expose on the host; most containers do not need this)
        containerPort:                                                # int (number of port to expose on the pod's IP address)
        protocol: TCP|UDP                                             # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.Protocol (protocol for port; must be UDP or TCP; TCP if unspecified)
        hostIP:                                                       # string (host IP to bind the port to)
      env:                                                            # []github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.EnvVar (list of environment variables to set in the container; cannot be updated)
      - name:                                                         # string (name of the environment variable; must be a C_IDENTIFIER)
        key:                                                          # string (name of the environment variable; must be a C_IDENTIFIER; deprecated - use name instead)
        value:                                                        # string (value of the environment variable; defaults to empty string)
      resources:                                                      # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ResourceRequirements (Compute Resources required by this container; cannot be updated)
        limits:                                                       # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ResourceList (Maximum amount of compute resources allowed)
          [github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ResourceName]: # github.com/GoogleCloudPlatform/kubernetes/pkg/util.IntOrString
        requests:                                                     # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ResourceList (Minimum amount of resources requested)
          [github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ResourceName]: # github.com/GoogleCloudPlatform/kubernetes/pkg/util.IntOrString
      cpu:                                                            # int (CPU share in thousandths of a core; cannot be updated)
      memory:                                                         # int64 (memory limit in bytes; defaults to unlimited; cannot be updated)
      volumeMounts:                                                   # []github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.VolumeMount (pod volumes to mount into the container's filesystem; cannot be updated)
      - name:                                                         # string (name of the volume to mount)
        readOnly:                                                     # bool (mounted read-only if true, read-write otherwise (false or unspecified))
        mountPath:                                                    # string (path within the container at which the volume should be mounted; overrides path)
        path:                                                         # string (path within the container at which the volume should be mounted; deprecated)
        mountType:                                                    # string (LOCAL or HOST; defaults to LOCAL; deprecated)
      livenessProbe:                                                  # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.LivenessProbe (periodic probe of container liveness; container will be restarted if the probe fails; cannot be updated)
        httpGet:                                                      # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.HTTPGetAction (parameters for HTTP-based liveness probe)
          path:                                                       # string (path to access on the HTTP server)
          port:                                                       # github.com/GoogleCloudPlatform/kubernetes/pkg/util.IntOrString (number or name of the port to access on the container)
          host:                                                       # string (hostname to connect to; defaults to pod IP)
        tcpSocket:                                                    # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.TCPSocketAction (parameters for TCP-based liveness probe)
          port:                                                       # github.com/GoogleCloudPlatform/kubernetes/pkg/util.IntOrString (number of name of the port to access on the container)
        exec:                                                         # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ExecAction (parameters for exec-based liveness probe)
          command:                                                    # []string (command line to execute inside the container; working directory for the command is root ('/') in the container's file system; the command is exec'd, not run inside a shell; exit status of 0 is treated as live/healthy and non-zero is unhealthy)
          - [string]                                                  # 
        initialDelaySeconds:                                          # int64 (number of seconds after the container has started before liveness probes are initiated)
        timeoutSeconds:                                               # int64 (number of seconds after which liveness probes timeout; defaults to 1 second)
      readinessProbe:                                                 # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.LivenessProbe (periodic probe of container service readiness; container will be removed from service endpoints if the probe fails; cannot be updated)
        httpGet:                                                      # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.HTTPGetAction (parameters for HTTP-based liveness probe)
          path:                                                       # string (path to access on the HTTP server)
          port:                                                       # github.com/GoogleCloudPlatform/kubernetes/pkg/util.IntOrString (number or name of the port to access on the container)
          host:                                                       # string (hostname to connect to; defaults to pod IP)
        tcpSocket:                                                    # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.TCPSocketAction (parameters for TCP-based liveness probe)
          port:                                                       # github.com/GoogleCloudPlatform/kubernetes/pkg/util.IntOrString (number of name of the port to access on the container)
        exec:                                                         # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ExecAction (parameters for exec-based liveness probe)
          command:                                                    # []string (command line to execute inside the container; working directory for the command is root ('/') in the container's file system; the command is exec'd, not run inside a shell; exit status of 0 is treated as live/healthy and non-zero is unhealthy)
          - [string]                                                  # 
        initialDelaySeconds:                                          # int64 (number of seconds after the container has started before liveness probes are initiated)
        timeoutSeconds:                                               # int64 (number of seconds after which liveness probes timeout; defaults to 1 second)
      lifecycle:                                                      # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.Lifecycle (actions that the management system should take in response to container lifecycle events; cannot be updated)
        postStart:                                                    # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.Handler (called immediately after a container is started; if the handler fails, the container is terminated and restarted according to its restart policy; other management of the container blocks until the hook completes)
          exec:                                                       # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ExecAction (exec-based handler)
            command:                                                  # []string (command line to execute inside the container; working directory for the command is root ('/') in the container's file system; the command is exec'd, not run inside a shell; exit status of 0 is treated as live/healthy and non-zero is unhealthy)
            - [string]                                                # 
          httpGet:                                                    # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.HTTPGetAction (HTTP-based handler)
            path:                                                     # string (path to access on the HTTP server)
            port:                                                     # github.com/GoogleCloudPlatform/kubernetes/pkg/util.IntOrString (number or name of the port to access on the container)
            host:                                                     # string (hostname to connect to; defaults to pod IP)
          tcpSocket:                                                  # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.TCPSocketAction (TCP-based handler; TCP hooks not yet supported)
            port:                                                     # github.com/GoogleCloudPlatform/kubernetes/pkg/util.IntOrString (number of name of the port to access on the container)
        preStop:                                                      # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.Handler (called before a container is terminated; the container is terminated after the handler completes; other management of the container blocks until the hook completes)
          exec:                                                       # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ExecAction (exec-based handler)
            command:                                                  # []string (command line to execute inside the container; working directory for the command is root ('/') in the container's file system; the command is exec'd, not run inside a shell; exit status of 0 is treated as live/healthy and non-zero is unhealthy)
            - [string]                                                # 
          httpGet:                                                    # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.HTTPGetAction (HTTP-based handler)
            path:                                                     # string (path to access on the HTTP server)
            port:                                                     # github.com/GoogleCloudPlatform/kubernetes/pkg/util.IntOrString (number or name of the port to access on the container)
            host:                                                     # string (hostname to connect to; defaults to pod IP)
          tcpSocket:                                                  # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.TCPSocketAction (TCP-based handler; TCP hooks not yet supported)
            port:                                                     # github.com/GoogleCloudPlatform/kubernetes/pkg/util.IntOrString (number of name of the port to access on the container)
      terminationMessagePath:                                         # string (path at which the file to which the container's termination message will be written is mounted into the container's filesystem; message written is intended to be brief final status, such as an assertion failure message; defaults to /dev/termination-log; cannot be updated)
      privileged:                                                     # bool (whether or not the container is granted privileged status; defaults to false; cannot be updated)
      imagePullPolicy: PullAlways|PullIfNotPresent|PullNever          # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.PullPolicy (image pull policy; one of PullAlways, PullNever, PullIfNotPresent; defaults to PullAlways if :latest tag is specified, or PullIfNotPresent otherwise; cannot be updated)
      capabilities:                                                   # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.Capabilities (capabilities for container; cannot be updated)
        add:                                                          # []github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.CapabilityType (added capabilities)
        - [github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.CapabilityType] # 
        drop:                                                         # []github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.CapabilityType (droped capabilities)
        - [github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.CapabilityType] # 
    restartPolicy:                                                    # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.RestartPolicy (restart policy for all containers within the pod; one of RestartPolicyAlways, RestartPolicyOnFailure, RestartPolicyNever)
      always:                                                         # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.RestartPolicyAlways (always restart the container after termination)
      onFailure:                                                      # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.RestartPolicyOnFailure (restart the container if it fails for any reason, but not if it succeeds (exit 0))
      never:                                                          # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.RestartPolicyNever (never restart the container)
    dnsPolicy: ClusterFirst|Default                                   # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.DNSPolicy (DNS policy for containers within the pod; one of 'ClusterFirst' or 'Default')
    hostNetwork:                                                      # bool (host networking requested for this pod)
  status: Running|Succeeded|Terminated|Unknown|Waiting                # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.PodStatus (current condition of the pod, Waiting, Running, or Terminated)
  Condition:                                                          # []github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.PodCondition (current service state of pod)
  - kind: Ready                                                       # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.PodConditionKind (kind of the condition, currently only Ready)
    status: Full|None|Unknown                                         # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ConditionStatus (status of the condition, one of Full, None, Unknown)
  message:                                                            # string (human readable message indicating details about why the pod is in this condition)
  host:                                                               # string (host to which the pod is assigned; empty if not yet scheduled; cannot be updated)
  hostIP:                                                             # string (IP address of the host to which the pod is assigned; empty if not yet scheduled)
  podIP:                                                              # string (IP address allocated to the pod; routable at least within the cluster; empty if not yet allocated)
  info:                                                               # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.PodInfo (map of container name to container status)
    [string]:                                                         # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ContainerStatus
currentState:                                                         # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.PodState (current state of the pod; populated by the system, read-only)
  manifest:                                                           # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ContainerManifest (manifest of containers and volumes comprising the pod)
    version:                                                          # string (manifest version; must be v1beta1)
    id:                                                               # string (manifest name; must be a DNS_SUBDOMAIN; cannot be updated)
    uuid:                                                             # github.com/GoogleCloudPlatform/kubernetes/pkg/types.UID (manifest UUID, populated by the system, read-only)
    volumes:                                                          # []github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.Volume (list of volumes that can be mounted by containers belonging to the pod)
    - name:                                                           # string (volume name; must be a DNS_LABEL and unique within the pod)
      source:                                                         # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.VolumeSource (location and type of volume to mount; at most one of HostDir, EmptyDir, GCEPersistentDisk, or GitRepo; default is EmptyDir)
        hostDir:                                                      # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.HostPathVolumeSource (pre-existing host file or directory; generally for privileged system daemons or other agents tied to the host)
          path:                                                       # string (path of the directory on the host)
        emptyDir:                                                     # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.EmptyDirVolumeSource (temporary directory that shares a pod's lifetime)
          medium: |Memory                                             # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.StorageType (type of storage used to back the volume; must be an empty string (default) or Memory)
        persistentDisk:                                               # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.GCEPersistentDiskVolumeSource (GCE disk resource attached to the host machine on demand)
          pdName:                                                     # string (unique name of the PD resource in GCE)
          fsType:                                                     # string (file system type to mount, such as ext4, xfs, ntfs)
          partition:                                                  # int (partition on the disk to mount (e.g., '1' for /dev/sda1); if omitted the plain device name (e.g., /dev/sda) will be mounted)
          readOnly:                                                   # bool (read-only if true, read-write otherwise (false or unspecified))
        gitRepo:                                                      # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.GitRepoVolumeSource (git repository at a particular revision)
          repository:                                                 # string (repository URL)
          revision:                                                   # string (commit hash for the specified revision)
        secret:                                                       # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.SecretVolumeSource (secret to populate volume with)
          target:                                                     # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ObjectReference (target is a reference to a secret)
            kind:                                                     # string (kind of the referent)
            namespace:                                                # string (namespace of the referent)
            name:                                                     # string (id of the referent)
            uid:                                                      # github.com/GoogleCloudPlatform/kubernetes/pkg/types.UID (uid of the referent)
            apiVersion:                                               # string (API version of the referent)
            resourceVersion:                                          # string (specific resourceVersion to which this reference is made, if any: https://github.com/GoogleCloudPlatform/kubernetes/blob/master/docs/api-conventions.md#concurrency-control-and-consistency)
            fieldPath:                                                # string (if referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2])
        nfs:                                                          # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.NFSVolumeSource (NFS volume that will be mounted in the host machine )
          server:                                                     # string (the hostname or IP address of the NFS server)
          path:                                                       # string (the path that is exported by the NFS server)
          readOnly:                                                   # bool (forces the NFS export to be mounted with read-only permissions)
        iscsi:                                                        # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ISCSIVolumeSource (iSCSI disk attached to host machine on demand)
          targetPortal:                                               # string (iSCSI target portal)
          iqn:                                                        # string (iSCSI Qualified Name)
          lun:                                                        # int (iscsi target lun number)
          fsType:                                                     # string (file system type to mount, such as ext4, xfs, ntfs)
          readOnly:                                                   # bool (read-only if true, read-write otherwise (false or unspecified))
        glusterfs:                                                    # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.GlusterfsVolumeSource (Glusterfs volume that will be mounted on the host machine )
          endpoints:                                                  # string (gluster hosts endpoints name)
          path:                                                       # string (path to gluster volume)
          readOnly:                                                   # bool (Glusterfs volume to be mounted with read-only permissions)
    containers:                                                       # []github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.Container (list of containers belonging to the pod; containers cannot currently be added or removed)
    - name:                                                           # string (name of the container; must be a DNS_LABEL and unique within the pod; cannot be updated)
      image:                                                          # string (Docker image name)
      entrypoint:                                                     # []string (entrypoint array; not executed within a shell; the image's entrypoint is used if this is not provided; cannot be updated)
      - [string]                                                      # 
      command:                                                        # []string (command argv array; not executed within a shell; the image's cmd is used if this is not provided; cannot be updated)
      - [string]                                                      # 
      workingDir:                                                     # string (container's working directory; defaults to image's default; cannot be updated)
      ports:                                                          # []github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ContainerPort (list of ports to expose from the container; cannot be updated)
      - name:                                                         # string (name for the port that can be referred to by services; must be a DNS_LABEL and unique without the pod)
        hostPort:                                                     # int (number of port to expose on the host; most containers do not need this)
        containerPort:                                                # int (number of port to expose on the pod's IP address)
        protocol: TCP|UDP                                             # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.Protocol (protocol for port; must be UDP or TCP; TCP if unspecified)
        hostIP:                                                       # string (host IP to bind the port to)
      env:                                                            # []github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.EnvVar (list of environment variables to set in the container; cannot be updated)
      - name:                                                         # string (name of the environment variable; must be a C_IDENTIFIER)
        key:                                                          # string (name of the environment variable; must be a C_IDENTIFIER; deprecated - use name instead)
        value:                                                        # string (value of the environment variable; defaults to empty string)
      resources:                                                      # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ResourceRequirements (Compute Resources required by this container; cannot be updated)
        limits:                                                       # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ResourceList (Maximum amount of compute resources allowed)
          [github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ResourceName]: # github.com/GoogleCloudPlatform/kubernetes/pkg/util.IntOrString
        requests:                                                     # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ResourceList (Minimum amount of resources requested)
          [github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ResourceName]: # github.com/GoogleCloudPlatform/kubernetes/pkg/util.IntOrString
      cpu:                                                            # int (CPU share in thousandths of a core; cannot be updated)
      memory:                                                         # int64 (memory limit in bytes; defaults to unlimited; cannot be updated)
      volumeMounts:                                                   # []github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.VolumeMount (pod volumes to mount into the container's filesystem; cannot be updated)
      - name:                                                         # string (name of the volume to mount)
        readOnly:                                                     # bool (mounted read-only if true, read-write otherwise (false or unspecified))
        mountPath:                                                    # string (path within the container at which the volume should be mounted; overrides path)
        path:                                                         # string (path within the container at which the volume should be mounted; deprecated)
        mountType:                                                    # string (LOCAL or HOST; defaults to LOCAL; deprecated)
      livenessProbe:                                                  # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.LivenessProbe (periodic probe of container liveness; container will be restarted if the probe fails; cannot be updated)
        httpGet:                                                      # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.HTTPGetAction (parameters for HTTP-based liveness probe)
          path:                                                       # string (path to access on the HTTP server)
          port:                                                       # github.com/GoogleCloudPlatform/kubernetes/pkg/util.IntOrString (number or name of the port to access on the container)
          host:                                                       # string (hostname to connect to; defaults to pod IP)
        tcpSocket:                                                    # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.TCPSocketAction (parameters for TCP-based liveness probe)
          port:                                                       # github.com/GoogleCloudPlatform/kubernetes/pkg/util.IntOrString (number of name of the port to access on the container)
        exec:                                                         # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ExecAction (parameters for exec-based liveness probe)
          command:                                                    # []string (command line to execute inside the container; working directory for the command is root ('/') in the container's file system; the command is exec'd, not run inside a shell; exit status of 0 is treated as live/healthy and non-zero is unhealthy)
          - [string]                                                  # 
        initialDelaySeconds:                                          # int64 (number of seconds after the container has started before liveness probes are initiated)
        timeoutSeconds:                                               # int64 (number of seconds after which liveness probes timeout; defaults to 1 second)
      readinessProbe:                                                 # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.LivenessProbe (periodic probe of container service readiness; container will be removed from service endpoints if the probe fails; cannot be updated)
        httpGet:                                                      # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.HTTPGetAction (parameters for HTTP-based liveness probe)
          path:                                                       # string (path to access on the HTTP server)
          port:                                                       # github.com/GoogleCloudPlatform/kubernetes/pkg/util.IntOrString (number or name of the port to access on the container)
          host:                                                       # string (hostname to connect to; defaults to pod IP)
        tcpSocket:                                                    # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.TCPSocketAction (parameters for TCP-based liveness probe)
          port:                                                       # github.com/GoogleCloudPlatform/kubernetes/pkg/util.IntOrString (number of name of the port to access on the container)
        exec:                                                         # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ExecAction (parameters for exec-based liveness probe)
          command:                                                    # []string (command line to execute inside the container; working directory for the command is root ('/') in the container's file system; the command is exec'd, not run inside a shell; exit status of 0 is treated as live/healthy and non-zero is unhealthy)
          - [string]                                                  # 
        initialDelaySeconds:                                          # int64 (number of seconds after the container has started before liveness probes are initiated)
        timeoutSeconds:                                               # int64 (number of seconds after which liveness probes timeout; defaults to 1 second)
      lifecycle:                                                      # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.Lifecycle (actions that the management system should take in response to container lifecycle events; cannot be updated)
        postStart:                                                    # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.Handler (called immediately after a container is started; if the handler fails, the container is terminated and restarted according to its restart policy; other management of the container blocks until the hook completes)
          exec:                                                       # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ExecAction (exec-based handler)
            command:                                                  # []string (command line to execute inside the container; working directory for the command is root ('/') in the container's file system; the command is exec'd, not run inside a shell; exit status of 0 is treated as live/healthy and non-zero is unhealthy)
            - [string]                                                # 
          httpGet:                                                    # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.HTTPGetAction (HTTP-based handler)
            path:                                                     # string (path to access on the HTTP server)
            port:                                                     # github.com/GoogleCloudPlatform/kubernetes/pkg/util.IntOrString (number or name of the port to access on the container)
            host:                                                     # string (hostname to connect to; defaults to pod IP)
          tcpSocket:                                                  # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.TCPSocketAction (TCP-based handler; TCP hooks not yet supported)
            port:                                                     # github.com/GoogleCloudPlatform/kubernetes/pkg/util.IntOrString (number of name of the port to access on the container)
        preStop:                                                      # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.Handler (called before a container is terminated; the container is terminated after the handler completes; other management of the container blocks until the hook completes)
          exec:                                                       # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ExecAction (exec-based handler)
            command:                                                  # []string (command line to execute inside the container; working directory for the command is root ('/') in the container's file system; the command is exec'd, not run inside a shell; exit status of 0 is treated as live/healthy and non-zero is unhealthy)
            - [string]                                                # 
          httpGet:                                                    # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.HTTPGetAction (HTTP-based handler)
            path:                                                     # string (path to access on the HTTP server)
            port:                                                     # github.com/GoogleCloudPlatform/kubernetes/pkg/util.IntOrString (number or name of the port to access on the container)
            host:                                                     # string (hostname to connect to; defaults to pod IP)
          tcpSocket:                                                  # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.TCPSocketAction (TCP-based handler; TCP hooks not yet supported)
            port:                                                     # github.com/GoogleCloudPlatform/kubernetes/pkg/util.IntOrString (number of name of the port to access on the container)
      terminationMessagePath:                                         # string (path at which the file to which the container's termination message will be written is mounted into the container's filesystem; message written is intended to be brief final status, such as an assertion failure message; defaults to /dev/termination-log; cannot be updated)
      privileged:                                                     # bool (whether or not the container is granted privileged status; defaults to false; cannot be updated)
      imagePullPolicy: PullAlways|PullIfNotPresent|PullNever          # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.PullPolicy (image pull policy; one of PullAlways, PullNever, PullIfNotPresent; defaults to PullAlways if :latest tag is specified, or PullIfNotPresent otherwise; cannot be updated)
      capabilities:                                                   # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.Capabilities (capabilities for container; cannot be updated)
        add:                                                          # []github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.CapabilityType (added capabilities)
        - [github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.CapabilityType] # 
        drop:                                                         # []github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.CapabilityType (droped capabilities)
        - [github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.CapabilityType] # 
    restartPolicy:                                                    # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.RestartPolicy (restart policy for all containers within the pod; one of RestartPolicyAlways, RestartPolicyOnFailure, RestartPolicyNever)
      always:                                                         # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.RestartPolicyAlways (always restart the container after termination)
      onFailure:                                                      # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.RestartPolicyOnFailure (restart the container if it fails for any reason, but not if it succeeds (exit 0))
      never:                                                          # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.RestartPolicyNever (never restart the container)
    dnsPolicy: ClusterFirst|Default                                   # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.DNSPolicy (DNS policy for containers within the pod; one of 'ClusterFirst' or 'Default')
    hostNetwork:                                                      # bool (host networking requested for this pod)
  status: Running|Succeeded|Terminated|Unknown|Waiting                # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.PodStatus (current condition of the pod, Waiting, Running, or Terminated)
  Condition:                                                          # []github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.PodCondition (current service state of pod)
  - kind: Ready                                                       # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.PodConditionKind (kind of the condition, currently only Ready)
    status: Full|None|Unknown                                         # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ConditionStatus (status of the condition, one of Full, None, Unknown)
  message:                                                            # string (human readable message indicating details about why the pod is in this condition)
  host:                                                               # string (host to which the pod is assigned; empty if not yet scheduled; cannot be updated)
  hostIP:                                                             # string (IP address of the host to which the pod is assigned; empty if not yet scheduled)
  podIP:                                                              # string (IP address allocated to the pod; routable at least within the cluster; empty if not yet allocated)
  info:                                                               # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.PodInfo (map of container name to container status)
    [string]:                                                         # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ContainerStatus
nodeSelector:                                                         # map[string]string (selector which must match a node's labels for the pod to be scheduled on that node)
  [string]:                                                           # string


PodContainerInfo
================

PodContainerInfo is a wrapper for PodInfo that can be encode/decoded

kind: PodContainerInfo                                                # string (kind of object, in CamelCase; cannot be updated)
id:                                                                   # string (name of the object; must be a DNS_SUBDOMAIN and unique among all objects of the same kind within the same namespace; used in resource URLs; cannot be updated)
uid:                                                                  # github.com/GoogleCloudPlatform/kubernetes/pkg/types.UID (unique UUID across space and time; populated by the system, read-only; cannot be updated)
creationTimestamp:                                                    # github.com/GoogleCloudPlatform/kubernetes/pkg/util.Time (RFC 3339 date and time at which the object was created; populated by the system, read-only; null for lists)
selfLink:                                                             # string (URL for the object; populated by the system, read-only)
resourceVersion:                                                      # uint64 (string that identifies the internal version of this object that can be used by clients to determine when objects have changed; populated by the system, read-only; value must be treated as opaque by clients and passed unmodified back to the server: https://github.com/GoogleCloudPlatform/kubernetes/blob/master/docs/api-conventions.md#concurrency-control-and-consistency)
apiVersion: v1beta1                                                   # string (version of the schema the object should have)
namespace:                                                            # string (namespace to which the object belongs; must be a DNS_SUBDOMAIN; 'default' by default; cannot be updated)
deletionTimestamp:                                                    # *github.com/GoogleCloudPlatform/kubernetes/pkg/util.Time (RFC 3339 date and time at which the object will be deleted; populated by the system when a graceful deletion is requested, read-only; if not set, graceful deletion of the object has not been requested)
generateName:                                                         # string (an optional prefix to use to generate a unique name; has the same validation rules as name; optional, and is applied only name if is not specified)
annotations:                                                          # map[string]string (map of string keys and values that can be used by external tooling to store and retrieve arbitrary metadata about the object)
  [string]:                                                           # string
containerInfo:                                                        # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.PodInfo (information about each container in this pod)
  [string]:                                                           # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ContainerStatus


PodList
=======

PodList is a list of Pods.

kind: PodList                                                         # string (kind of object, in CamelCase; cannot be updated)
id:                                                                   # string (name of the object; must be a DNS_SUBDOMAIN and unique among all objects of the same kind within the same namespace; used in resource URLs; cannot be updated)
uid:                                                                  # github.com/GoogleCloudPlatform/kubernetes/pkg/types.UID (unique UUID across space and time; populated by the system, read-only; cannot be updated)
creationTimestamp:                                                    # github.com/GoogleCloudPlatform/kubernetes/pkg/util.Time (RFC 3339 date and time at which the object was created; populated by the system, read-only; null for lists)
selfLink:                                                             # string (URL for the object; populated by the system, read-only)
resourceVersion:                                                      # uint64 (string that identifies the internal version of this object that can be used by clients to determine when objects have changed; populated by the system, read-only; value must be treated as opaque by clients and passed unmodified back to the server: https://github.com/GoogleCloudPlatform/kubernetes/blob/master/docs/api-conventions.md#concurrency-control-and-consistency)
apiVersion: v1beta1                                                   # string (version of the schema the object should have)
namespace:                                                            # string (namespace to which the object belongs; must be a DNS_SUBDOMAIN; 'default' by default; cannot be updated)
deletionTimestamp:                                                    # *github.com/GoogleCloudPlatform/kubernetes/pkg/util.Time (RFC 3339 date and time at which the object will be deleted; populated by the system when a graceful deletion is requested, read-only; if not set, graceful deletion of the object has not been requested)
generateName:                                                         # string (an optional prefix to use to generate a unique name; has the same validation rules as name; optional, and is applied only name if is not specified)
annotations:                                                          # map[string]string (map of string keys and values that can be used by external tooling to store and retrieve arbitrary metadata about the object)
  [string]:                                                           # string
items:                                                                # []github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.Pod (list of pods)
- kind:                                                               # string (kind of object, in CamelCase; cannot be updated)
  id:                                                                 # string (name of the object; must be a DNS_SUBDOMAIN and unique among all objects of the same kind within the same namespace; used in resource URLs; cannot be updated)
  uid:                                                                # github.com/GoogleCloudPlatform/kubernetes/pkg/types.UID (unique UUID across space and time; populated by the system, read-only; cannot be updated)
  creationTimestamp:                                                  # github.com/GoogleCloudPlatform/kubernetes/pkg/util.Time (RFC 3339 date and time at which the object was created; populated by the system, read-only; null for lists)
  selfLink:                                                           # string (URL for the object; populated by the system, read-only)
  resourceVersion:                                                    # uint64 (string that identifies the internal version of this object that can be used by clients to determine when objects have changed; populated by the system, read-only; value must be treated as opaque by clients and passed unmodified back to the server: https://github.com/GoogleCloudPlatform/kubernetes/blob/master/docs/api-conventions.md#concurrency-control-and-consistency)
  apiVersion:                                                         # string (version of the schema the object should have)
  namespace:                                                          # string (namespace to which the object belongs; must be a DNS_SUBDOMAIN; 'default' by default; cannot be updated)
  deletionTimestamp:                                                  # *github.com/GoogleCloudPlatform/kubernetes/pkg/util.Time (RFC 3339 date and time at which the object will be deleted; populated by the system when a graceful deletion is requested, read-only; if not set, graceful deletion of the object has not been requested)
  generateName:                                                       # string (an optional prefix to use to generate a unique name; has the same validation rules as name; optional, and is applied only name if is not specified)
  annotations:                                                        # map[string]string (map of string keys and values that can be used by external tooling to store and retrieve arbitrary metadata about the object)
    [string]:                                                         # string
  labels:                                                             # map[string]string (map of string keys and values that can be used to organize and categorize pods; may match selectors of replication controllers and services)
    [string]:                                                         # string
  desiredState:                                                       # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.PodState (specification of the desired state of the pod)
    manifest:                                                         # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ContainerManifest (manifest of containers and volumes comprising the pod)
      version:                                                        # string (manifest version; must be v1beta1)
      id:                                                             # string (manifest name; must be a DNS_SUBDOMAIN; cannot be updated)
      uuid:                                                           # github.com/GoogleCloudPlatform/kubernetes/pkg/types.UID (manifest UUID, populated by the system, read-only)
      volumes:                                                        # []github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.Volume (list of volumes that can be mounted by containers belonging to the pod)
      - name:                                                         # string (volume name; must be a DNS_LABEL and unique within the pod)
        source:                                                       # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.VolumeSource (location and type of volume to mount; at most one of HostDir, EmptyDir, GCEPersistentDisk, or GitRepo; default is EmptyDir)
          hostDir:                                                    # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.HostPathVolumeSource (pre-existing host file or directory; generally for privileged system daemons or other agents tied to the host)
            path:                                                     # string (path of the directory on the host)
          emptyDir:                                                   # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.EmptyDirVolumeSource (temporary directory that shares a pod's lifetime)
            medium: |Memory                                           # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.StorageType (type of storage used to back the volume; must be an empty string (default) or Memory)
          persistentDisk:                                             # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.GCEPersistentDiskVolumeSource (GCE disk resource attached to the host machine on demand)
            pdName:                                                   # string (unique name of the PD resource in GCE)
            fsType:                                                   # string (file system type to mount, such as ext4, xfs, ntfs)
            partition:                                                # int (partition on the disk to mount (e.g., '1' for /dev/sda1); if omitted the plain device name (e.g., /dev/sda) will be mounted)
            readOnly:                                                 # bool (read-only if true, read-write otherwise (false or unspecified))
          gitRepo:                                                    # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.GitRepoVolumeSource (git repository at a particular revision)
            repository:                                               # string (repository URL)
            revision:                                                 # string (commit hash for the specified revision)
          secret:                                                     # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.SecretVolumeSource (secret to populate volume with)
            target:                                                   # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ObjectReference (target is a reference to a secret)
              kind:                                                   # string (kind of the referent)
              namespace:                                              # string (namespace of the referent)
              name:                                                   # string (id of the referent)
              uid:                                                    # github.com/GoogleCloudPlatform/kubernetes/pkg/types.UID (uid of the referent)
              apiVersion:                                             # string (API version of the referent)
              resourceVersion:                                        # string (specific resourceVersion to which this reference is made, if any: https://github.com/GoogleCloudPlatform/kubernetes/blob/master/docs/api-conventions.md#concurrency-control-and-consistency)
              fieldPath:                                              # string (if referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2])
          nfs:                                                        # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.NFSVolumeSource (NFS volume that will be mounted in the host machine )
            server:                                                   # string (the hostname or IP address of the NFS server)
            path:                                                     # string (the path that is exported by the NFS server)
            readOnly:                                                 # bool (forces the NFS export to be mounted with read-only permissions)
          iscsi:                                                      # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ISCSIVolumeSource (iSCSI disk attached to host machine on demand)
            targetPortal:                                             # string (iSCSI target portal)
            iqn:                                                      # string (iSCSI Qualified Name)
            lun:                                                      # int (iscsi target lun number)
            fsType:                                                   # string (file system type to mount, such as ext4, xfs, ntfs)
            readOnly:                                                 # bool (read-only if true, read-write otherwise (false or unspecified))
          glusterfs:                                                  # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.GlusterfsVolumeSource (Glusterfs volume that will be mounted on the host machine )
            endpoints:                                                # string (gluster hosts endpoints name)
            path:                                                     # string (path to gluster volume)
            readOnly:                                                 # bool (Glusterfs volume to be mounted with read-only permissions)
      containers:                                                     # []github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.Container (list of containers belonging to the pod; containers cannot currently be added or removed)
      - name:                                                         # string (name of the container; must be a DNS_LABEL and unique within the pod; cannot be updated)
        image:                                                        # string (Docker image name)
        entrypoint:                                                   # []string (entrypoint array; not executed within a shell; the image's entrypoint is used if this is not provided; cannot be updated)
        - [string]                                                    # 
        command:                                                      # []string (command argv array; not executed within a shell; the image's cmd is used if this is not provided; cannot be updated)
        - [string]                                                    # 
        workingDir:                                                   # string (container's working directory; defaults to image's default; cannot be updated)
        ports:                                                        # []github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ContainerPort (list of ports to expose from the container; cannot be updated)
        - name:                                                       # string (name for the port that can be referred to by services; must be a DNS_LABEL and unique without the pod)
          hostPort:                                                   # int (number of port to expose on the host; most containers do not need this)
          containerPort:                                              # int (number of port to expose on the pod's IP address)
          protocol: TCP|UDP                                           # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.Protocol (protocol for port; must be UDP or TCP; TCP if unspecified)
          hostIP:                                                     # string (host IP to bind the port to)
        env:                                                          # []github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.EnvVar (list of environment variables to set in the container; cannot be updated)
        - name:                                                       # string (name of the environment variable; must be a C_IDENTIFIER)
          key:                                                        # string (name of the environment variable; must be a C_IDENTIFIER; deprecated - use name instead)
          value:                                                      # string (value of the environment variable; defaults to empty string)
        resources:                                                    # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ResourceRequirements (Compute Resources required by this container; cannot be updated)
          limits:                                                     # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ResourceList (Maximum amount of compute resources allowed)
            [github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ResourceName]: # github.com/GoogleCloudPlatform/kubernetes/pkg/util.IntOrString
          requests:                                                   # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ResourceList (Minimum amount of resources requested)
            [github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ResourceName]: # github.com/GoogleCloudPlatform/kubernetes/pkg/util.IntOrString
        cpu:                                                          # int (CPU share in thousandths of a core; cannot be updated)
        memory:                                                       # int64 (memory limit in bytes; defaults to unlimited; cannot be updated)
        volumeMounts:                                                 # []github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.VolumeMount (pod volumes to mount into the container's filesystem; cannot be updated)
        - name:                                                       # string (name of the volume to mount)
          readOnly:                                                   # bool (mounted read-only if true, read-write otherwise (false or unspecified))
          mountPath:                                                  # string (path within the container at which the volume should be mounted; overrides path)
          path:                                                       # string (path within the container at which the volume should be mounted; deprecated)
          mountType:                                                  # string (LOCAL or HOST; defaults to LOCAL; deprecated)
        livenessProbe:                                                # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.LivenessProbe (periodic probe of container liveness; container will be restarted if the probe fails; cannot be updated)
          httpGet:                                                    # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.HTTPGetAction (parameters for HTTP-based liveness probe)
            path:                                                     # string (path to access on the HTTP server)
            port:                                                     # github.com/GoogleCloudPlatform/kubernetes/pkg/util.IntOrString (number or name of the port to access on the container)
            host:                                                     # string (hostname to connect to; defaults to pod IP)
          tcpSocket:                                                  # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.TCPSocketAction (parameters for TCP-based liveness probe)
            port:                                                     # github.com/GoogleCloudPlatform/kubernetes/pkg/util.IntOrString (number of name of the port to access on the container)
          exec:                                                       # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ExecAction (parameters for exec-based liveness probe)
            command:                                                  # []string (command line to execute inside the container; working directory for the command is root ('/') in the container's file system; the command is exec'd, not run inside a shell; exit status of 0 is treated as live/healthy and non-zero is unhealthy)
            - [string]                                                # 
          initialDelaySeconds:                                        # int64 (number of seconds after the container has started before liveness probes are initiated)
          timeoutSeconds:                                             # int64 (number of seconds after which liveness probes timeout; defaults to 1 second)
        readinessProbe:                                               # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.LivenessProbe (periodic probe of container service readiness; container will be removed from service endpoints if the probe fails; cannot be updated)
          httpGet:                                                    # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.HTTPGetAction (parameters for HTTP-based liveness probe)
            path:                                                     # string (path to access on the HTTP server)
            port:                                                     # github.com/GoogleCloudPlatform/kubernetes/pkg/util.IntOrString (number or name of the port to access on the container)
            host:                                                     # string (hostname to connect to; defaults to pod IP)
          tcpSocket:                                                  # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.TCPSocketAction (parameters for TCP-based liveness probe)
            port:                                                     # github.com/GoogleCloudPlatform/kubernetes/pkg/util.IntOrString (number of name of the port to access on the container)
          exec:                                                       # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ExecAction (parameters for exec-based liveness probe)
            command:                                                  # []string (command line to execute inside the container; working directory for the command is root ('/') in the container's file system; the command is exec'd, not run inside a shell; exit status of 0 is treated as live/healthy and non-zero is unhealthy)
            - [string]                                                # 
          initialDelaySeconds:                                        # int64 (number of seconds after the container has started before liveness probes are initiated)
          timeoutSeconds:                                             # int64 (number of seconds after which liveness probes timeout; defaults to 1 second)
        lifecycle:                                                    # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.Lifecycle (actions that the management system should take in response to container lifecycle events; cannot be updated)
          postStart:                                                  # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.Handler (called immediately after a container is started; if the handler fails, the container is terminated and restarted according to its restart policy; other management of the container blocks until the hook completes)
            exec:                                                     # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ExecAction (exec-based handler)
              command:                                                # []string (command line to execute inside the container; working directory for the command is root ('/') in the container's file system; the command is exec'd, not run inside a shell; exit status of 0 is treated as live/healthy and non-zero is unhealthy)
              - [string]                                              # 
            httpGet:                                                  # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.HTTPGetAction (HTTP-based handler)
              path:                                                   # string (path to access on the HTTP server)
              port:                                                   # github.com/GoogleCloudPlatform/kubernetes/pkg/util.IntOrString (number or name of the port to access on the container)
              host:                                                   # string (hostname to connect to; defaults to pod IP)
            tcpSocket:                                                # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.TCPSocketAction (TCP-based handler; TCP hooks not yet supported)
              port:                                                   # github.com/GoogleCloudPlatform/kubernetes/pkg/util.IntOrString (number of name of the port to access on the container)
          preStop:                                                    # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.Handler (called before a container is terminated; the container is terminated after the handler completes; other management of the container blocks until the hook completes)
            exec:                                                     # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ExecAction (exec-based handler)
              command:                                                # []string (command line to execute inside the container; working directory for the command is root ('/') in the container's file system; the command is exec'd, not run inside a shell; exit status of 0 is treated as live/healthy and non-zero is unhealthy)
              - [string]                                              # 
            httpGet:                                                  # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.HTTPGetAction (HTTP-based handler)
              path:                                                   # string (path to access on the HTTP server)
              port:                                                   # github.com/GoogleCloudPlatform/kubernetes/pkg/util.IntOrString (number or name of the port to access on the container)
              host:                                                   # string (hostname to connect to; defaults to pod IP)
            tcpSocket:                                                # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.TCPSocketAction (TCP-based handler; TCP hooks not yet supported)
              port:                                                   # github.com/GoogleCloudPlatform/kubernetes/pkg/util.IntOrString (number of name of the port to access on the container)
        terminationMessagePath:                                       # string (path at which the file to which the container's termination message will be written is mounted into the container's filesystem; message written is intended to be brief final status, such as an assertion failure message; defaults to /dev/termination-log; cannot be updated)
        privileged:                                                   # bool (whether or not the container is granted privileged status; defaults to false; cannot be updated)
        imagePullPolicy: PullAlways|PullIfNotPresent|PullNever        # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.PullPolicy (image pull policy; one of PullAlways, PullNever, PullIfNotPresent; defaults to PullAlways if :latest tag is specified, or PullIfNotPresent otherwise; cannot be updated)
        capabilities:                                                 # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.Capabilities (capabilities for container; cannot be updated)
          add:                                                        # []github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.CapabilityType (added capabilities)
          - [github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.CapabilityType] # 
          drop:                                                       # []github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.CapabilityType (droped capabilities)
          - [github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.CapabilityType] # 
      restartPolicy:                                                  # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.RestartPolicy (restart policy for all containers within the pod; one of RestartPolicyAlways, RestartPolicyOnFailure, RestartPolicyNever)
        always:                                                       # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.RestartPolicyAlways (always restart the container after termination)
        onFailure:                                                    # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.RestartPolicyOnFailure (restart the container if it fails for any reason, but not if it succeeds (exit 0))
        never:                                                        # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.RestartPolicyNever (never restart the container)
      dnsPolicy: ClusterFirst|Default                                 # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.DNSPolicy (DNS policy for containers within the pod; one of 'ClusterFirst' or 'Default')
      hostNetwork:                                                    # bool (host networking requested for this pod)
    status: Running|Succeeded|Terminated|Unknown|Waiting              # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.PodStatus (current condition of the pod, Waiting, Running, or Terminated)
    Condition:                                                        # []github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.PodCondition (current service state of pod)
    - kind: Ready                                                     # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.PodConditionKind (kind of the condition, currently only Ready)
      status: Full|None|Unknown                                       # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ConditionStatus (status of the condition, one of Full, None, Unknown)
    message:                                                          # string (human readable message indicating details about why the pod is in this condition)
    host:                                                             # string (host to which the pod is assigned; empty if not yet scheduled; cannot be updated)
    hostIP:                                                           # string (IP address of the host to which the pod is assigned; empty if not yet scheduled)
    podIP:                                                            # string (IP address allocated to the pod; routable at least within the cluster; empty if not yet allocated)
    info:                                                             # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.PodInfo (map of container name to container status)
      [string]:                                                       # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ContainerStatus
  currentState:                                                       # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.PodState (current state of the pod; populated by the system, read-only)
    manifest:                                                         # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ContainerManifest (manifest of containers and volumes comprising the pod)
      version:                                                        # string (manifest version; must be v1beta1)
      id:                                                             # string (manifest name; must be a DNS_SUBDOMAIN; cannot be updated)
      uuid:                                                           # github.com/GoogleCloudPlatform/kubernetes/pkg/types.UID (manifest UUID, populated by the system, read-only)
      volumes:                                                        # []github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.Volume (list of volumes that can be mounted by containers belonging to the pod)
      - name:                                                         # string (volume name; must be a DNS_LABEL and unique within the pod)
        source:                                                       # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.VolumeSource (location and type of volume to mount; at most one of HostDir, EmptyDir, GCEPersistentDisk, or GitRepo; default is EmptyDir)
          hostDir:                                                    # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.HostPathVolumeSource (pre-existing host file or directory; generally for privileged system daemons or other agents tied to the host)
            path:                                                     # string (path of the directory on the host)
          emptyDir:                                                   # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.EmptyDirVolumeSource (temporary directory that shares a pod's lifetime)
            medium: |Memory                                           # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.StorageType (type of storage used to back the volume; must be an empty string (default) or Memory)
          persistentDisk:                                             # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.GCEPersistentDiskVolumeSource (GCE disk resource attached to the host machine on demand)
            pdName:                                                   # string (unique name of the PD resource in GCE)
            fsType:                                                   # string (file system type to mount, such as ext4, xfs, ntfs)
            partition:                                                # int (partition on the disk to mount (e.g., '1' for /dev/sda1); if omitted the plain device name (e.g., /dev/sda) will be mounted)
            readOnly:                                                 # bool (read-only if true, read-write otherwise (false or unspecified))
          gitRepo:                                                    # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.GitRepoVolumeSource (git repository at a particular revision)
            repository:                                               # string (repository URL)
            revision:                                                 # string (commit hash for the specified revision)
          secret:                                                     # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.SecretVolumeSource (secret to populate volume with)
            target:                                                   # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ObjectReference (target is a reference to a secret)
              kind:                                                   # string (kind of the referent)
              namespace:                                              # string (namespace of the referent)
              name:                                                   # string (id of the referent)
              uid:                                                    # github.com/GoogleCloudPlatform/kubernetes/pkg/types.UID (uid of the referent)
              apiVersion:                                             # string (API version of the referent)
              resourceVersion:                                        # string (specific resourceVersion to which this reference is made, if any: https://github.com/GoogleCloudPlatform/kubernetes/blob/master/docs/api-conventions.md#concurrency-control-and-consistency)
              fieldPath:                                              # string (if referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2])
          nfs:                                                        # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.NFSVolumeSource (NFS volume that will be mounted in the host machine )
            server:                                                   # string (the hostname or IP address of the NFS server)
            path:                                                     # string (the path that is exported by the NFS server)
            readOnly:                                                 # bool (forces the NFS export to be mounted with read-only permissions)
          iscsi:                                                      # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ISCSIVolumeSource (iSCSI disk attached to host machine on demand)
            targetPortal:                                             # string (iSCSI target portal)
            iqn:                                                      # string (iSCSI Qualified Name)
            lun:                                                      # int (iscsi target lun number)
            fsType:                                                   # string (file system type to mount, such as ext4, xfs, ntfs)
            readOnly:                                                 # bool (read-only if true, read-write otherwise (false or unspecified))
          glusterfs:                                                  # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.GlusterfsVolumeSource (Glusterfs volume that will be mounted on the host machine )
            endpoints:                                                # string (gluster hosts endpoints name)
            path:                                                     # string (path to gluster volume)
            readOnly:                                                 # bool (Glusterfs volume to be mounted with read-only permissions)
      containers:                                                     # []github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.Container (list of containers belonging to the pod; containers cannot currently be added or removed)
      - name:                                                         # string (name of the container; must be a DNS_LABEL and unique within the pod; cannot be updated)
        image:                                                        # string (Docker image name)
        entrypoint:                                                   # []string (entrypoint array; not executed within a shell; the image's entrypoint is used if this is not provided; cannot be updated)
        - [string]                                                    # 
        command:                                                      # []string (command argv array; not executed within a shell; the image's cmd is used if this is not provided; cannot be updated)
        - [string]                                                    # 
        workingDir:                                                   # string (container's working directory; defaults to image's default; cannot be updated)
        ports:                                                        # []github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ContainerPort (list of ports to expose from the container; cannot be updated)
        - name:                                                       # string (name for the port that can be referred to by services; must be a DNS_LABEL and unique without the pod)
          hostPort:                                                   # int (number of port to expose on the host; most containers do not need this)
          containerPort:                                              # int (number of port to expose on the pod's IP address)
          protocol: TCP|UDP                                           # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.Protocol (protocol for port; must be UDP or TCP; TCP if unspecified)
          hostIP:                                                     # string (host IP to bind the port to)
        env:                                                          # []github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.EnvVar (list of environment variables to set in the container; cannot be updated)
        - name:                                                       # string (name of the environment variable; must be a C_IDENTIFIER)
          key:                                                        # string (name of the environment variable; must be a C_IDENTIFIER; deprecated - use name instead)
          value:                                                      # string (value of the environment variable; defaults to empty string)
        resources:                                                    # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ResourceRequirements (Compute Resources required by this container; cannot be updated)
          limits:                                                     # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ResourceList (Maximum amount of compute resources allowed)
            [github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ResourceName]: # github.com/GoogleCloudPlatform/kubernetes/pkg/util.IntOrString
          requests:                                                   # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ResourceList (Minimum amount of resources requested)
            [github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ResourceName]: # github.com/GoogleCloudPlatform/kubernetes/pkg/util.IntOrString
        cpu:                                                          # int (CPU share in thousandths of a core; cannot be updated)
        memory:                                                       # int64 (memory limit in bytes; defaults to unlimited; cannot be updated)
        volumeMounts:                                                 # []github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.VolumeMount (pod volumes to mount into the container's filesystem; cannot be updated)
        - name:                                                       # string (name of the volume to mount)
          readOnly:                                                   # bool (mounted read-only if true, read-write otherwise (false or unspecified))
          mountPath:                                                  # string (path within the container at which the volume should be mounted; overrides path)
          path:                                                       # string (path within the container at which the volume should be mounted; deprecated)
          mountType:                                                  # string (LOCAL or HOST; defaults to LOCAL; deprecated)
        livenessProbe:                                                # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.LivenessProbe (periodic probe of container liveness; container will be restarted if the probe fails; cannot be updated)
          httpGet:                                                    # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.HTTPGetAction (parameters for HTTP-based liveness probe)
            path:                                                     # string (path to access on the HTTP server)
            port:                                                     # github.com/GoogleCloudPlatform/kubernetes/pkg/util.IntOrString (number or name of the port to access on the container)
            host:                                                     # string (hostname to connect to; defaults to pod IP)
          tcpSocket:                                                  # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.TCPSocketAction (parameters for TCP-based liveness probe)
            port:                                                     # github.com/GoogleCloudPlatform/kubernetes/pkg/util.IntOrString (number of name of the port to access on the container)
          exec:                                                       # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ExecAction (parameters for exec-based liveness probe)
            command:                                                  # []string (command line to execute inside the container; working directory for the command is root ('/') in the container's file system; the command is exec'd, not run inside a shell; exit status of 0 is treated as live/healthy and non-zero is unhealthy)
            - [string]                                                # 
          initialDelaySeconds:                                        # int64 (number of seconds after the container has started before liveness probes are initiated)
          timeoutSeconds:                                             # int64 (number of seconds after which liveness probes timeout; defaults to 1 second)
        readinessProbe:                                               # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.LivenessProbe (periodic probe of container service readiness; container will be removed from service endpoints if the probe fails; cannot be updated)
          httpGet:                                                    # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.HTTPGetAction (parameters for HTTP-based liveness probe)
            path:                                                     # string (path to access on the HTTP server)
            port:                                                     # github.com/GoogleCloudPlatform/kubernetes/pkg/util.IntOrString (number or name of the port to access on the container)
            host:                                                     # string (hostname to connect to; defaults to pod IP)
          tcpSocket:                                                  # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.TCPSocketAction (parameters for TCP-based liveness probe)
            port:                                                     # github.com/GoogleCloudPlatform/kubernetes/pkg/util.IntOrString (number of name of the port to access on the container)
          exec:                                                       # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ExecAction (parameters for exec-based liveness probe)
            command:                                                  # []string (command line to execute inside the container; working directory for the command is root ('/') in the container's file system; the command is exec'd, not run inside a shell; exit status of 0 is treated as live/healthy and non-zero is unhealthy)
            - [string]                                                # 
          initialDelaySeconds:                                        # int64 (number of seconds after the container has started before liveness probes are initiated)
          timeoutSeconds:                                             # int64 (number of seconds after which liveness probes timeout; defaults to 1 second)
        lifecycle:                                                    # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.Lifecycle (actions that the management system should take in response to container lifecycle events; cannot be updated)
          postStart:                                                  # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.Handler (called immediately after a container is started; if the handler fails, the container is terminated and restarted according to its restart policy; other management of the container blocks until the hook completes)
            exec:                                                     # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ExecAction (exec-based handler)
              command:                                                # []string (command line to execute inside the container; working directory for the command is root ('/') in the container's file system; the command is exec'd, not run inside a shell; exit status of 0 is treated as live/healthy and non-zero is unhealthy)
              - [string]                                              # 
            httpGet:                                                  # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.HTTPGetAction (HTTP-based handler)
              path:                                                   # string (path to access on the HTTP server)
              port:                                                   # github.com/GoogleCloudPlatform/kubernetes/pkg/util.IntOrString (number or name of the port to access on the container)
              host:                                                   # string (hostname to connect to; defaults to pod IP)
            tcpSocket:                                                # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.TCPSocketAction (TCP-based handler; TCP hooks not yet supported)
              port:                                                   # github.com/GoogleCloudPlatform/kubernetes/pkg/util.IntOrString (number of name of the port to access on the container)
          preStop:                                                    # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.Handler (called before a container is terminated; the container is terminated after the handler completes; other management of the container blocks until the hook completes)
            exec:                                                     # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ExecAction (exec-based handler)
              command:                                                # []string (command line to execute inside the container; working directory for the command is root ('/') in the container's file system; the command is exec'd, not run inside a shell; exit status of 0 is treated as live/healthy and non-zero is unhealthy)
              - [string]                                              # 
            httpGet:                                                  # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.HTTPGetAction (HTTP-based handler)
              path:                                                   # string (path to access on the HTTP server)
              port:                                                   # github.com/GoogleCloudPlatform/kubernetes/pkg/util.IntOrString (number or name of the port to access on the container)
              host:                                                   # string (hostname to connect to; defaults to pod IP)
            tcpSocket:                                                # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.TCPSocketAction (TCP-based handler; TCP hooks not yet supported)
              port:                                                   # github.com/GoogleCloudPlatform/kubernetes/pkg/util.IntOrString (number of name of the port to access on the container)
        terminationMessagePath:                                       # string (path at which the file to which the container's termination message will be written is mounted into the container's filesystem; message written is intended to be brief final status, such as an assertion failure message; defaults to /dev/termination-log; cannot be updated)
        privileged:                                                   # bool (whether or not the container is granted privileged status; defaults to false; cannot be updated)
        imagePullPolicy: PullAlways|PullIfNotPresent|PullNever        # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.PullPolicy (image pull policy; one of PullAlways, PullNever, PullIfNotPresent; defaults to PullAlways if :latest tag is specified, or PullIfNotPresent otherwise; cannot be updated)
        capabilities:                                                 # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.Capabilities (capabilities for container; cannot be updated)
          add:                                                        # []github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.CapabilityType (added capabilities)
          - [github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.CapabilityType] # 
          drop:                                                       # []github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.CapabilityType (droped capabilities)
          - [github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.CapabilityType] # 
      restartPolicy:                                                  # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.RestartPolicy (restart policy for all containers within the pod; one of RestartPolicyAlways, RestartPolicyOnFailure, RestartPolicyNever)
        always:                                                       # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.RestartPolicyAlways (always restart the container after termination)
        onFailure:                                                    # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.RestartPolicyOnFailure (restart the container if it fails for any reason, but not if it succeeds (exit 0))
        never:                                                        # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.RestartPolicyNever (never restart the container)
      dnsPolicy: ClusterFirst|Default                                 # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.DNSPolicy (DNS policy for containers within the pod; one of 'ClusterFirst' or 'Default')
      hostNetwork:                                                    # bool (host networking requested for this pod)
    status: Running|Succeeded|Terminated|Unknown|Waiting              # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.PodStatus (current condition of the pod, Waiting, Running, or Terminated)
    Condition:                                                        # []github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.PodCondition (current service state of pod)
    - kind: Ready                                                     # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.PodConditionKind (kind of the condition, currently only Ready)
      status: Full|None|Unknown                                       # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ConditionStatus (status of the condition, one of Full, None, Unknown)
    message:                                                          # string (human readable message indicating details about why the pod is in this condition)
    host:                                                             # string (host to which the pod is assigned; empty if not yet scheduled; cannot be updated)
    hostIP:                                                           # string (IP address of the host to which the pod is assigned; empty if not yet scheduled)
    podIP:                                                            # string (IP address allocated to the pod; routable at least within the cluster; empty if not yet allocated)
    info:                                                             # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.PodInfo (map of container name to container status)
      [string]:                                                       # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ContainerStatus
  nodeSelector:                                                       # map[string]string (selector which must match a node's labels for the pod to be scheduled on that node)
    [string]:                                                         # string


PodLogOptions
=============

PodLogOptions is the query options for a Pod's logs REST call

kind: PodLogOptions                                                   # string (kind of object, in CamelCase; cannot be updated)
id:                                                                   # string (name of the object; must be a DNS_SUBDOMAIN and unique among all objects of the same kind within the same namespace; used in resource URLs; cannot be updated)
uid:                                                                  # github.com/GoogleCloudPlatform/kubernetes/pkg/types.UID (unique UUID across space and time; populated by the system, read-only; cannot be updated)
creationTimestamp:                                                    # github.com/GoogleCloudPlatform/kubernetes/pkg/util.Time (RFC 3339 date and time at which the object was created; populated by the system, read-only; null for lists)
selfLink:                                                             # string (URL for the object; populated by the system, read-only)
resourceVersion:                                                      # uint64 (string that identifies the internal version of this object that can be used by clients to determine when objects have changed; populated by the system, read-only; value must be treated as opaque by clients and passed unmodified back to the server: https://github.com/GoogleCloudPlatform/kubernetes/blob/master/docs/api-conventions.md#concurrency-control-and-consistency)
apiVersion: v1beta1                                                   # string (version of the schema the object should have)
namespace:                                                            # string (namespace to which the object belongs; must be a DNS_SUBDOMAIN; 'default' by default; cannot be updated)
deletionTimestamp:                                                    # *github.com/GoogleCloudPlatform/kubernetes/pkg/util.Time (RFC 3339 date and time at which the object will be deleted; populated by the system when a graceful deletion is requested, read-only; if not set, graceful deletion of the object has not been requested)
generateName:                                                         # string (an optional prefix to use to generate a unique name; has the same validation rules as name; optional, and is applied only name if is not specified)
annotations:                                                          # map[string]string (map of string keys and values that can be used by external tooling to store and retrieve arbitrary metadata about the object)
  [string]:                                                           # string
container:                                                            # string (the container for which to stream logs; defaults to only container if there is one container in the pod)
follow:                                                               # bool (follow the log stream of the pod; defaults to false)


PodStatusResult
===============


kind: PodStatusResult                                                 # string (kind of object, in CamelCase; cannot be updated)
id:                                                                   # string (name of the object; must be a DNS_SUBDOMAIN and unique among all objects of the same kind within the same namespace; used in resource URLs; cannot be updated)
uid:                                                                  # github.com/GoogleCloudPlatform/kubernetes/pkg/types.UID (unique UUID across space and time; populated by the system, read-only; cannot be updated)
creationTimestamp:                                                    # github.com/GoogleCloudPlatform/kubernetes/pkg/util.Time (RFC 3339 date and time at which the object was created; populated by the system, read-only; null for lists)
selfLink:                                                             # string (URL for the object; populated by the system, read-only)
resourceVersion:                                                      # uint64 (string that identifies the internal version of this object that can be used by clients to determine when objects have changed; populated by the system, read-only; value must be treated as opaque by clients and passed unmodified back to the server: https://github.com/GoogleCloudPlatform/kubernetes/blob/master/docs/api-conventions.md#concurrency-control-and-consistency)
apiVersion: v1beta1                                                   # string (version of the schema the object should have)
namespace:                                                            # string (namespace to which the object belongs; must be a DNS_SUBDOMAIN; 'default' by default; cannot be updated)
deletionTimestamp:                                                    # *github.com/GoogleCloudPlatform/kubernetes/pkg/util.Time (RFC 3339 date and time at which the object will be deleted; populated by the system when a graceful deletion is requested, read-only; if not set, graceful deletion of the object has not been requested)
generateName:                                                         # string (an optional prefix to use to generate a unique name; has the same validation rules as name; optional, and is applied only name if is not specified)
annotations:                                                          # map[string]string (map of string keys and values that can be used by external tooling to store and retrieve arbitrary metadata about the object)
  [string]:                                                           # string
state:                                                                # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.PodState (current state of the pod)
  manifest:                                                           # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ContainerManifest (manifest of containers and volumes comprising the pod)
    version:                                                          # string (manifest version; must be v1beta1)
    id:                                                               # string (manifest name; must be a DNS_SUBDOMAIN; cannot be updated)
    uuid:                                                             # github.com/GoogleCloudPlatform/kubernetes/pkg/types.UID (manifest UUID, populated by the system, read-only)
    volumes:                                                          # []github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.Volume (list of volumes that can be mounted by containers belonging to the pod)
    - name:                                                           # string (volume name; must be a DNS_LABEL and unique within the pod)
      source:                                                         # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.VolumeSource (location and type of volume to mount; at most one of HostDir, EmptyDir, GCEPersistentDisk, or GitRepo; default is EmptyDir)
        hostDir:                                                      # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.HostPathVolumeSource (pre-existing host file or directory; generally for privileged system daemons or other agents tied to the host)
          path:                                                       # string (path of the directory on the host)
        emptyDir:                                                     # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.EmptyDirVolumeSource (temporary directory that shares a pod's lifetime)
          medium: |Memory                                             # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.StorageType (type of storage used to back the volume; must be an empty string (default) or Memory)
        persistentDisk:                                               # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.GCEPersistentDiskVolumeSource (GCE disk resource attached to the host machine on demand)
          pdName:                                                     # string (unique name of the PD resource in GCE)
          fsType:                                                     # string (file system type to mount, such as ext4, xfs, ntfs)
          partition:                                                  # int (partition on the disk to mount (e.g., '1' for /dev/sda1); if omitted the plain device name (e.g., /dev/sda) will be mounted)
          readOnly:                                                   # bool (read-only if true, read-write otherwise (false or unspecified))
        gitRepo:                                                      # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.GitRepoVolumeSource (git repository at a particular revision)
          repository:                                                 # string (repository URL)
          revision:                                                   # string (commit hash for the specified revision)
        secret:                                                       # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.SecretVolumeSource (secret to populate volume with)
          target:                                                     # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ObjectReference (target is a reference to a secret)
            kind:                                                     # string (kind of the referent)
            namespace:                                                # string (namespace of the referent)
            name:                                                     # string (id of the referent)
            uid:                                                      # github.com/GoogleCloudPlatform/kubernetes/pkg/types.UID (uid of the referent)
            apiVersion:                                               # string (API version of the referent)
            resourceVersion:                                          # string (specific resourceVersion to which this reference is made, if any: https://github.com/GoogleCloudPlatform/kubernetes/blob/master/docs/api-conventions.md#concurrency-control-and-consistency)
            fieldPath:                                                # string (if referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2])
        nfs:                                                          # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.NFSVolumeSource (NFS volume that will be mounted in the host machine )
          server:                                                     # string (the hostname or IP address of the NFS server)
          path:                                                       # string (the path that is exported by the NFS server)
          readOnly:                                                   # bool (forces the NFS export to be mounted with read-only permissions)
        iscsi:                                                        # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ISCSIVolumeSource (iSCSI disk attached to host machine on demand)
          targetPortal:                                               # string (iSCSI target portal)
          iqn:                                                        # string (iSCSI Qualified Name)
          lun:                                                        # int (iscsi target lun number)
          fsType:                                                     # string (file system type to mount, such as ext4, xfs, ntfs)
          readOnly:                                                   # bool (read-only if true, read-write otherwise (false or unspecified))
        glusterfs:                                                    # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.GlusterfsVolumeSource (Glusterfs volume that will be mounted on the host machine )
          endpoints:                                                  # string (gluster hosts endpoints name)
          path:                                                       # string (path to gluster volume)
          readOnly:                                                   # bool (Glusterfs volume to be mounted with read-only permissions)
    containers:                                                       # []github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.Container (list of containers belonging to the pod; containers cannot currently be added or removed)
    - name:                                                           # string (name of the container; must be a DNS_LABEL and unique within the pod; cannot be updated)
      image:                                                          # string (Docker image name)
      entrypoint:                                                     # []string (entrypoint array; not executed within a shell; the image's entrypoint is used if this is not provided; cannot be updated)
      - [string]                                                      # 
      command:                                                        # []string (command argv array; not executed within a shell; the image's cmd is used if this is not provided; cannot be updated)
      - [string]                                                      # 
      workingDir:                                                     # string (container's working directory; defaults to image's default; cannot be updated)
      ports:                                                          # []github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ContainerPort (list of ports to expose from the container; cannot be updated)
      - name:                                                         # string (name for the port that can be referred to by services; must be a DNS_LABEL and unique without the pod)
        hostPort:                                                     # int (number of port to expose on the host; most containers do not need this)
        containerPort:                                                # int (number of port to expose on the pod's IP address)
        protocol: TCP|UDP                                             # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.Protocol (protocol for port; must be UDP or TCP; TCP if unspecified)
        hostIP:                                                       # string (host IP to bind the port to)
      env:                                                            # []github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.EnvVar (list of environment variables to set in the container; cannot be updated)
      - name:                                                         # string (name of the environment variable; must be a C_IDENTIFIER)
        key:                                                          # string (name of the environment variable; must be a C_IDENTIFIER; deprecated - use name instead)
        value:                                                        # string (value of the environment variable; defaults to empty string)
      resources:                                                      # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ResourceRequirements (Compute Resources required by this container; cannot be updated)
        limits:                                                       # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ResourceList (Maximum amount of compute resources allowed)
          [github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ResourceName]: # github.com/GoogleCloudPlatform/kubernetes/pkg/util.IntOrString
        requests:                                                     # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ResourceList (Minimum amount of resources requested)
          [github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ResourceName]: # github.com/GoogleCloudPlatform/kubernetes/pkg/util.IntOrString
      cpu:                                                            # int (CPU share in thousandths of a core; cannot be updated)
      memory:                                                         # int64 (memory limit in bytes; defaults to unlimited; cannot be updated)
      volumeMounts:                                                   # []github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.VolumeMount (pod volumes to mount into the container's filesystem; cannot be updated)
      - name:                                                         # string (name of the volume to mount)
        readOnly:                                                     # bool (mounted read-only if true, read-write otherwise (false or unspecified))
        mountPath:                                                    # string (path within the container at which the volume should be mounted; overrides path)
        path:                                                         # string (path within the container at which the volume should be mounted; deprecated)
        mountType:                                                    # string (LOCAL or HOST; defaults to LOCAL; deprecated)
      livenessProbe:                                                  # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.LivenessProbe (periodic probe of container liveness; container will be restarted if the probe fails; cannot be updated)
        httpGet:                                                      # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.HTTPGetAction (parameters for HTTP-based liveness probe)
          path:                                                       # string (path to access on the HTTP server)
          port:                                                       # github.com/GoogleCloudPlatform/kubernetes/pkg/util.IntOrString (number or name of the port to access on the container)
          host:                                                       # string (hostname to connect to; defaults to pod IP)
        tcpSocket:                                                    # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.TCPSocketAction (parameters for TCP-based liveness probe)
          port:                                                       # github.com/GoogleCloudPlatform/kubernetes/pkg/util.IntOrString (number of name of the port to access on the container)
        exec:                                                         # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ExecAction (parameters for exec-based liveness probe)
          command:                                                    # []string (command line to execute inside the container; working directory for the command is root ('/') in the container's file system; the command is exec'd, not run inside a shell; exit status of 0 is treated as live/healthy and non-zero is unhealthy)
          - [string]                                                  # 
        initialDelaySeconds:                                          # int64 (number of seconds after the container has started before liveness probes are initiated)
        timeoutSeconds:                                               # int64 (number of seconds after which liveness probes timeout; defaults to 1 second)
      readinessProbe:                                                 # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.LivenessProbe (periodic probe of container service readiness; container will be removed from service endpoints if the probe fails; cannot be updated)
        httpGet:                                                      # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.HTTPGetAction (parameters for HTTP-based liveness probe)
          path:                                                       # string (path to access on the HTTP server)
          port:                                                       # github.com/GoogleCloudPlatform/kubernetes/pkg/util.IntOrString (number or name of the port to access on the container)
          host:                                                       # string (hostname to connect to; defaults to pod IP)
        tcpSocket:                                                    # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.TCPSocketAction (parameters for TCP-based liveness probe)
          port:                                                       # github.com/GoogleCloudPlatform/kubernetes/pkg/util.IntOrString (number of name of the port to access on the container)
        exec:                                                         # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ExecAction (parameters for exec-based liveness probe)
          command:                                                    # []string (command line to execute inside the container; working directory for the command is root ('/') in the container's file system; the command is exec'd, not run inside a shell; exit status of 0 is treated as live/healthy and non-zero is unhealthy)
          - [string]                                                  # 
        initialDelaySeconds:                                          # int64 (number of seconds after the container has started before liveness probes are initiated)
        timeoutSeconds:                                               # int64 (number of seconds after which liveness probes timeout; defaults to 1 second)
      lifecycle:                                                      # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.Lifecycle (actions that the management system should take in response to container lifecycle events; cannot be updated)
        postStart:                                                    # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.Handler (called immediately after a container is started; if the handler fails, the container is terminated and restarted according to its restart policy; other management of the container blocks until the hook completes)
          exec:                                                       # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ExecAction (exec-based handler)
            command:                                                  # []string (command line to execute inside the container; working directory for the command is root ('/') in the container's file system; the command is exec'd, not run inside a shell; exit status of 0 is treated as live/healthy and non-zero is unhealthy)
            - [string]                                                # 
          httpGet:                                                    # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.HTTPGetAction (HTTP-based handler)
            path:                                                     # string (path to access on the HTTP server)
            port:                                                     # github.com/GoogleCloudPlatform/kubernetes/pkg/util.IntOrString (number or name of the port to access on the container)
            host:                                                     # string (hostname to connect to; defaults to pod IP)
          tcpSocket:                                                  # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.TCPSocketAction (TCP-based handler; TCP hooks not yet supported)
            port:                                                     # github.com/GoogleCloudPlatform/kubernetes/pkg/util.IntOrString (number of name of the port to access on the container)
        preStop:                                                      # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.Handler (called before a container is terminated; the container is terminated after the handler completes; other management of the container blocks until the hook completes)
          exec:                                                       # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ExecAction (exec-based handler)
            command:                                                  # []string (command line to execute inside the container; working directory for the command is root ('/') in the container's file system; the command is exec'd, not run inside a shell; exit status of 0 is treated as live/healthy and non-zero is unhealthy)
            - [string]                                                # 
          httpGet:                                                    # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.HTTPGetAction (HTTP-based handler)
            path:                                                     # string (path to access on the HTTP server)
            port:                                                     # github.com/GoogleCloudPlatform/kubernetes/pkg/util.IntOrString (number or name of the port to access on the container)
            host:                                                     # string (hostname to connect to; defaults to pod IP)
          tcpSocket:                                                  # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.TCPSocketAction (TCP-based handler; TCP hooks not yet supported)
            port:                                                     # github.com/GoogleCloudPlatform/kubernetes/pkg/util.IntOrString (number of name of the port to access on the container)
      terminationMessagePath:                                         # string (path at which the file to which the container's termination message will be written is mounted into the container's filesystem; message written is intended to be brief final status, such as an assertion failure message; defaults to /dev/termination-log; cannot be updated)
      privileged:                                                     # bool (whether or not the container is granted privileged status; defaults to false; cannot be updated)
      imagePullPolicy: PullAlways|PullIfNotPresent|PullNever          # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.PullPolicy (image pull policy; one of PullAlways, PullNever, PullIfNotPresent; defaults to PullAlways if :latest tag is specified, or PullIfNotPresent otherwise; cannot be updated)
      capabilities:                                                   # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.Capabilities (capabilities for container; cannot be updated)
        add:                                                          # []github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.CapabilityType (added capabilities)
        - [github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.CapabilityType] # 
        drop:                                                         # []github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.CapabilityType (droped capabilities)
        - [github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.CapabilityType] # 
    restartPolicy:                                                    # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.RestartPolicy (restart policy for all containers within the pod; one of RestartPolicyAlways, RestartPolicyOnFailure, RestartPolicyNever)
      always:                                                         # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.RestartPolicyAlways (always restart the container after termination)
      onFailure:                                                      # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.RestartPolicyOnFailure (restart the container if it fails for any reason, but not if it succeeds (exit 0))
      never:                                                          # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.RestartPolicyNever (never restart the container)
    dnsPolicy: ClusterFirst|Default                                   # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.DNSPolicy (DNS policy for containers within the pod; one of 'ClusterFirst' or 'Default')
    hostNetwork:                                                      # bool (host networking requested for this pod)
  status: Running|Succeeded|Terminated|Unknown|Waiting                # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.PodStatus (current condition of the pod, Waiting, Running, or Terminated)
  Condition:                                                          # []github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.PodCondition (current service state of pod)
  - kind: Ready                                                       # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.PodConditionKind (kind of the condition, currently only Ready)
    status: Full|None|Unknown                                         # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ConditionStatus (status of the condition, one of Full, None, Unknown)
  message:                                                            # string (human readable message indicating details about why the pod is in this condition)
  host:                                                               # string (host to which the pod is assigned; empty if not yet scheduled; cannot be updated)
  hostIP:                                                             # string (IP address of the host to which the pod is assigned; empty if not yet scheduled)
  podIP:                                                              # string (IP address allocated to the pod; routable at least within the cluster; empty if not yet allocated)
  info:                                                               # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.PodInfo (map of container name to container status)
    [string]:                                                         # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ContainerStatus


ReplicationController
=====================

ReplicationController represents the configuration of a replication controller.

kind: ReplicationController                                           # string (kind of object, in CamelCase; cannot be updated)
id:                                                                   # string (name of the object; must be a DNS_SUBDOMAIN and unique among all objects of the same kind within the same namespace; used in resource URLs; cannot be updated)
uid:                                                                  # github.com/GoogleCloudPlatform/kubernetes/pkg/types.UID (unique UUID across space and time; populated by the system, read-only; cannot be updated)
creationTimestamp:                                                    # github.com/GoogleCloudPlatform/kubernetes/pkg/util.Time (RFC 3339 date and time at which the object was created; populated by the system, read-only; null for lists)
selfLink:                                                             # string (URL for the object; populated by the system, read-only)
resourceVersion:                                                      # uint64 (string that identifies the internal version of this object that can be used by clients to determine when objects have changed; populated by the system, read-only; value must be treated as opaque by clients and passed unmodified back to the server: https://github.com/GoogleCloudPlatform/kubernetes/blob/master/docs/api-conventions.md#concurrency-control-and-consistency)
apiVersion: v1beta1                                                   # string (version of the schema the object should have)
namespace:                                                            # string (namespace to which the object belongs; must be a DNS_SUBDOMAIN; 'default' by default; cannot be updated)
deletionTimestamp:                                                    # *github.com/GoogleCloudPlatform/kubernetes/pkg/util.Time (RFC 3339 date and time at which the object will be deleted; populated by the system when a graceful deletion is requested, read-only; if not set, graceful deletion of the object has not been requested)
generateName:                                                         # string (an optional prefix to use to generate a unique name; has the same validation rules as name; optional, and is applied only name if is not specified)
annotations:                                                          # map[string]string (map of string keys and values that can be used by external tooling to store and retrieve arbitrary metadata about the object)
  [string]:                                                           # string
desiredState:                                                         # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ReplicationControllerState (specification of the desired state of the replication controller)
  replicas:                                                           # int (number of replicas (desired or observed, as appropriate))
  replicaSelector:                                                    # map[string]string (label keys and values that must match in order to be controlled by this replication controller)
    [string]:                                                         # string
  podTemplate:                                                        # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.PodTemplate (template for pods to be created by this replication controller when the observed number of replicas is less than the desired number of replicas)
    desiredState:                                                     # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.PodState (specification of the desired state of pods created from this template)
      manifest:                                                       # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ContainerManifest (manifest of containers and volumes comprising the pod)
        version:                                                      # string (manifest version; must be v1beta1)
        id:                                                           # string (manifest name; must be a DNS_SUBDOMAIN; cannot be updated)
        uuid:                                                         # github.com/GoogleCloudPlatform/kubernetes/pkg/types.UID (manifest UUID, populated by the system, read-only)
        volumes:                                                      # []github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.Volume (list of volumes that can be mounted by containers belonging to the pod)
        - name:                                                       # string (volume name; must be a DNS_LABEL and unique within the pod)
          source:                                                     # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.VolumeSource (location and type of volume to mount; at most one of HostDir, EmptyDir, GCEPersistentDisk, or GitRepo; default is EmptyDir)
            hostDir:                                                  # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.HostPathVolumeSource (pre-existing host file or directory; generally for privileged system daemons or other agents tied to the host)
              path:                                                   # string (path of the directory on the host)
            emptyDir:                                                 # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.EmptyDirVolumeSource (temporary directory that shares a pod's lifetime)
              medium: |Memory                                         # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.StorageType (type of storage used to back the volume; must be an empty string (default) or Memory)
            persistentDisk:                                           # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.GCEPersistentDiskVolumeSource (GCE disk resource attached to the host machine on demand)
              pdName:                                                 # string (unique name of the PD resource in GCE)
              fsType:                                                 # string (file system type to mount, such as ext4, xfs, ntfs)
              partition:                                              # int (partition on the disk to mount (e.g., '1' for /dev/sda1); if omitted the plain device name (e.g., /dev/sda) will be mounted)
              readOnly:                                               # bool (read-only if true, read-write otherwise (false or unspecified))
            gitRepo:                                                  # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.GitRepoVolumeSource (git repository at a particular revision)
              repository:                                             # string (repository URL)
              revision:                                               # string (commit hash for the specified revision)
            secret:                                                   # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.SecretVolumeSource (secret to populate volume with)
              target:                                                 # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ObjectReference (target is a reference to a secret)
                kind:                                                 # string (kind of the referent)
                namespace:                                            # string (namespace of the referent)
                name:                                                 # string (id of the referent)
                uid:                                                  # github.com/GoogleCloudPlatform/kubernetes/pkg/types.UID (uid of the referent)
                apiVersion:                                           # string (API version of the referent)
                resourceVersion:                                      # string (specific resourceVersion to which this reference is made, if any: https://github.com/GoogleCloudPlatform/kubernetes/blob/master/docs/api-conventions.md#concurrency-control-and-consistency)
                fieldPath:                                            # string (if referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2])
            nfs:                                                      # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.NFSVolumeSource (NFS volume that will be mounted in the host machine )
              server:                                                 # string (the hostname or IP address of the NFS server)
              path:                                                   # string (the path that is exported by the NFS server)
              readOnly:                                               # bool (forces the NFS export to be mounted with read-only permissions)
            iscsi:                                                    # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ISCSIVolumeSource (iSCSI disk attached to host machine on demand)
              targetPortal:                                           # string (iSCSI target portal)
              iqn:                                                    # string (iSCSI Qualified Name)
              lun:                                                    # int (iscsi target lun number)
              fsType:                                                 # string (file system type to mount, such as ext4, xfs, ntfs)
              readOnly:                                               # bool (read-only if true, read-write otherwise (false or unspecified))
            glusterfs:                                                # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.GlusterfsVolumeSource (Glusterfs volume that will be mounted on the host machine )
              endpoints:                                              # string (gluster hosts endpoints name)
              path:                                                   # string (path to gluster volume)
              readOnly:                                               # bool (Glusterfs volume to be mounted with read-only permissions)
        containers:                                                   # []github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.Container (list of containers belonging to the pod; containers cannot currently be added or removed)
        - name:                                                       # string (name of the container; must be a DNS_LABEL and unique within the pod; cannot be updated)
          image:                                                      # string (Docker image name)
          entrypoint:                                                 # []string (entrypoint array; not executed within a shell; the image's entrypoint is used if this is not provided; cannot be updated)
          - [string]                                                  # 
          command:                                                    # []string (command argv array; not executed within a shell; the image's cmd is used if this is not provided; cannot be updated)
          - [string]                                                  # 
          workingDir:                                                 # string (container's working directory; defaults to image's default; cannot be updated)
          ports:                                                      # []github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ContainerPort (list of ports to expose from the container; cannot be updated)
          - name:                                                     # string (name for the port that can be referred to by services; must be a DNS_LABEL and unique without the pod)
            hostPort:                                                 # int (number of port to expose on the host; most containers do not need this)
            containerPort:                                            # int (number of port to expose on the pod's IP address)
            protocol: TCP|UDP                                         # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.Protocol (protocol for port; must be UDP or TCP; TCP if unspecified)
            hostIP:                                                   # string (host IP to bind the port to)
          env:                                                        # []github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.EnvVar (list of environment variables to set in the container; cannot be updated)
          - name:                                                     # string (name of the environment variable; must be a C_IDENTIFIER)
            key:                                                      # string (name of the environment variable; must be a C_IDENTIFIER; deprecated - use name instead)
            value:                                                    # string (value of the environment variable; defaults to empty string)
          resources:                                                  # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ResourceRequirements (Compute Resources required by this container; cannot be updated)
            limits:                                                   # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ResourceList (Maximum amount of compute resources allowed)
              [github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ResourceName]: # github.com/GoogleCloudPlatform/kubernetes/pkg/util.IntOrString
            requests:                                                 # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ResourceList (Minimum amount of resources requested)
              [github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ResourceName]: # github.com/GoogleCloudPlatform/kubernetes/pkg/util.IntOrString
          cpu:                                                        # int (CPU share in thousandths of a core; cannot be updated)
          memory:                                                     # int64 (memory limit in bytes; defaults to unlimited; cannot be updated)
          volumeMounts:                                               # []github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.VolumeMount (pod volumes to mount into the container's filesystem; cannot be updated)
          - name:                                                     # string (name of the volume to mount)
            readOnly:                                                 # bool (mounted read-only if true, read-write otherwise (false or unspecified))
            mountPath:                                                # string (path within the container at which the volume should be mounted; overrides path)
            path:                                                     # string (path within the container at which the volume should be mounted; deprecated)
            mountType:                                                # string (LOCAL or HOST; defaults to LOCAL; deprecated)
          livenessProbe:                                              # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.LivenessProbe (periodic probe of container liveness; container will be restarted if the probe fails; cannot be updated)
            httpGet:                                                  # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.HTTPGetAction (parameters for HTTP-based liveness probe)
              path:                                                   # string (path to access on the HTTP server)
              port:                                                   # github.com/GoogleCloudPlatform/kubernetes/pkg/util.IntOrString (number or name of the port to access on the container)
              host:                                                   # string (hostname to connect to; defaults to pod IP)
            tcpSocket:                                                # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.TCPSocketAction (parameters for TCP-based liveness probe)
              port:                                                   # github.com/GoogleCloudPlatform/kubernetes/pkg/util.IntOrString (number of name of the port to access on the container)
            exec:                                                     # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ExecAction (parameters for exec-based liveness probe)
              command:                                                # []string (command line to execute inside the container; working directory for the command is root ('/') in the container's file system; the command is exec'd, not run inside a shell; exit status of 0 is treated as live/healthy and non-zero is unhealthy)
              - [string]                                              # 
            initialDelaySeconds:                                      # int64 (number of seconds after the container has started before liveness probes are initiated)
            timeoutSeconds:                                           # int64 (number of seconds after which liveness probes timeout; defaults to 1 second)
          readinessProbe:                                             # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.LivenessProbe (periodic probe of container service readiness; container will be removed from service endpoints if the probe fails; cannot be updated)
            httpGet:                                                  # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.HTTPGetAction (parameters for HTTP-based liveness probe)
              path:                                                   # string (path to access on the HTTP server)
              port:                                                   # github.com/GoogleCloudPlatform/kubernetes/pkg/util.IntOrString (number or name of the port to access on the container)
              host:                                                   # string (hostname to connect to; defaults to pod IP)
            tcpSocket:                                                # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.TCPSocketAction (parameters for TCP-based liveness probe)
              port:                                                   # github.com/GoogleCloudPlatform/kubernetes/pkg/util.IntOrString (number of name of the port to access on the container)
            exec:                                                     # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ExecAction (parameters for exec-based liveness probe)
              command:                                                # []string (command line to execute inside the container; working directory for the command is root ('/') in the container's file system; the command is exec'd, not run inside a shell; exit status of 0 is treated as live/healthy and non-zero is unhealthy)
              - [string]                                              # 
            initialDelaySeconds:                                      # int64 (number of seconds after the container has started before liveness probes are initiated)
            timeoutSeconds:                                           # int64 (number of seconds after which liveness probes timeout; defaults to 1 second)
          lifecycle:                                                  # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.Lifecycle (actions that the management system should take in response to container lifecycle events; cannot be updated)
            postStart:                                                # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.Handler (called immediately after a container is started; if the handler fails, the container is terminated and restarted according to its restart policy; other management of the container blocks until the hook completes)
              exec:                                                   # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ExecAction (exec-based handler)
                command:                                              # []string (command line to execute inside the container; working directory for the command is root ('/') in the container's file system; the command is exec'd, not run inside a shell; exit status of 0 is treated as live/healthy and non-zero is unhealthy)
                - [string]                                            # 
              httpGet:                                                # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.HTTPGetAction (HTTP-based handler)
                path:                                                 # string (path to access on the HTTP server)
                port:                                                 # github.com/GoogleCloudPlatform/kubernetes/pkg/util.IntOrString (number or name of the port to access on the container)
                host:                                                 # string (hostname to connect to; defaults to pod IP)
              tcpSocket:                                              # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.TCPSocketAction (TCP-based handler; TCP hooks not yet supported)
                port:                                                 # github.com/GoogleCloudPlatform/kubernetes/pkg/util.IntOrString (number of name of the port to access on the container)
            preStop:                                                  # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.Handler (called before a container is terminated; the container is terminated after the handler completes; other management of the container blocks until the hook completes)
              exec:                                                   # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ExecAction (exec-based handler)
                command:                                              # []string (command line to execute inside the container; working directory for the command is root ('/') in the container's file system; the command is exec'd, not run inside a shell; exit status of 0 is treated as live/healthy and non-zero is unhealthy)
                - [string]                                            # 
              httpGet:                                                # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.HTTPGetAction (HTTP-based handler)
                path:                                                 # string (path to access on the HTTP server)
                port:                                                 # github.com/GoogleCloudPlatform/kubernetes/pkg/util.IntOrString (number or name of the port to access on the container)
                host:                                                 # string (hostname to connect to; defaults to pod IP)
              tcpSocket:                                              # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.TCPSocketAction (TCP-based handler; TCP hooks not yet supported)
                port:                                                 # github.com/GoogleCloudPlatform/kubernetes/pkg/util.IntOrString (number of name of the port to access on the container)
          terminationMessagePath:                                     # string (path at which the file to which the container's termination message will be written is mounted into the container's filesystem; message written is intended to be brief final status, such as an assertion failure message; defaults to /dev/termination-log; cannot be updated)
          privileged:                                                 # bool (whether or not the container is granted privileged status; defaults to false; cannot be updated)
          imagePullPolicy: PullAlways|PullIfNotPresent|PullNever      # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.PullPolicy (image pull policy; one of PullAlways, PullNever, PullIfNotPresent; defaults to PullAlways if :latest tag is specified, or PullIfNotPresent otherwise; cannot be updated)
          capabilities:                                               # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.Capabilities (capabilities for container; cannot be updated)
            add:                                                      # []github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.CapabilityType (added capabilities)
            - [github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.CapabilityType] # 
            drop:                                                     # []github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.CapabilityType (droped capabilities)
            - [github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.CapabilityType] # 
        restartPolicy:                                                # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.RestartPolicy (restart policy for all containers within the pod; one of RestartPolicyAlways, RestartPolicyOnFailure, RestartPolicyNever)
          always:                                                     # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.RestartPolicyAlways (always restart the container after termination)
          onFailure:                                                  # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.RestartPolicyOnFailure (restart the container if it fails for any reason, but not if it succeeds (exit 0))
          never:                                                      # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.RestartPolicyNever (never restart the container)
        dnsPolicy: ClusterFirst|Default                               # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.DNSPolicy (DNS policy for containers within the pod; one of 'ClusterFirst' or 'Default')
        hostNetwork:                                                  # bool (host networking requested for this pod)
      status: Running|Succeeded|Terminated|Unknown|Waiting            # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.PodStatus (current condition of the pod, Waiting, Running, or Terminated)
      Condition:                                                      # []github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.PodCondition (current service state of pod)
      - kind: Ready                                                   # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.PodConditionKind (kind of the condition, currently only Ready)
        status: Full|None|Unknown                                     # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ConditionStatus (status of the condition, one of Full, None, Unknown)
      message:                                                        # string (human readable message indicating details about why the pod is in this condition)
      host:                                                           # string (host to which the pod is assigned; empty if not yet scheduled; cannot be updated)
      hostIP:                                                         # string (IP address of the host to which the pod is assigned; empty if not yet scheduled)
      podIP:                                                          # string (IP address allocated to the pod; routable at least within the cluster; empty if not yet allocated)
      info:                                                           # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.PodInfo (map of container name to container status)
        [string]:                                                     # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ContainerStatus
    nodeSelector:                                                     # map[string]string (a selector which must be true for the pod to fit on a node)
      [string]:                                                       # string
    labels:                                                           # map[string]string (map of string keys and values that can be used to organize and categorize the pods created from the template; must match the selector of the replication controller to which the template belongs; may match selectors of services)
      [string]:                                                       # string
    annotations:                                                      # map[string]string (map of string keys and values that can be used by external tooling to store and retrieve arbitrary metadata about pods created from the template)
      [string]:                                                       # string
currentState:                                                         # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ReplicationControllerState (current state of the replication controller; populated by the system, read-only)
  replicas:                                                           # int (number of replicas (desired or observed, as appropriate))
  replicaSelector:                                                    # map[string]string (label keys and values that must match in order to be controlled by this replication controller)
    [string]:                                                         # string
  podTemplate:                                                        # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.PodTemplate (template for pods to be created by this replication controller when the observed number of replicas is less than the desired number of replicas)
    desiredState:                                                     # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.PodState (specification of the desired state of pods created from this template)
      manifest:                                                       # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ContainerManifest (manifest of containers and volumes comprising the pod)
        version:                                                      # string (manifest version; must be v1beta1)
        id:                                                           # string (manifest name; must be a DNS_SUBDOMAIN; cannot be updated)
        uuid:                                                         # github.com/GoogleCloudPlatform/kubernetes/pkg/types.UID (manifest UUID, populated by the system, read-only)
        volumes:                                                      # []github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.Volume (list of volumes that can be mounted by containers belonging to the pod)
        - name:                                                       # string (volume name; must be a DNS_LABEL and unique within the pod)
          source:                                                     # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.VolumeSource (location and type of volume to mount; at most one of HostDir, EmptyDir, GCEPersistentDisk, or GitRepo; default is EmptyDir)
            hostDir:                                                  # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.HostPathVolumeSource (pre-existing host file or directory; generally for privileged system daemons or other agents tied to the host)
              path:                                                   # string (path of the directory on the host)
            emptyDir:                                                 # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.EmptyDirVolumeSource (temporary directory that shares a pod's lifetime)
              medium: |Memory                                         # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.StorageType (type of storage used to back the volume; must be an empty string (default) or Memory)
            persistentDisk:                                           # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.GCEPersistentDiskVolumeSource (GCE disk resource attached to the host machine on demand)
              pdName:                                                 # string (unique name of the PD resource in GCE)
              fsType:                                                 # string (file system type to mount, such as ext4, xfs, ntfs)
              partition:                                              # int (partition on the disk to mount (e.g., '1' for /dev/sda1); if omitted the plain device name (e.g., /dev/sda) will be mounted)
              readOnly:                                               # bool (read-only if true, read-write otherwise (false or unspecified))
            gitRepo:                                                  # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.GitRepoVolumeSource (git repository at a particular revision)
              repository:                                             # string (repository URL)
              revision:                                               # string (commit hash for the specified revision)
            secret:                                                   # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.SecretVolumeSource (secret to populate volume with)
              target:                                                 # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ObjectReference (target is a reference to a secret)
                kind:                                                 # string (kind of the referent)
                namespace:                                            # string (namespace of the referent)
                name:                                                 # string (id of the referent)
                uid:                                                  # github.com/GoogleCloudPlatform/kubernetes/pkg/types.UID (uid of the referent)
                apiVersion:                                           # string (API version of the referent)
                resourceVersion:                                      # string (specific resourceVersion to which this reference is made, if any: https://github.com/GoogleCloudPlatform/kubernetes/blob/master/docs/api-conventions.md#concurrency-control-and-consistency)
                fieldPath:                                            # string (if referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2])
            nfs:                                                      # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.NFSVolumeSource (NFS volume that will be mounted in the host machine )
              server:                                                 # string (the hostname or IP address of the NFS server)
              path:                                                   # string (the path that is exported by the NFS server)
              readOnly:                                               # bool (forces the NFS export to be mounted with read-only permissions)
            iscsi:                                                    # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ISCSIVolumeSource (iSCSI disk attached to host machine on demand)
              targetPortal:                                           # string (iSCSI target portal)
              iqn:                                                    # string (iSCSI Qualified Name)
              lun:                                                    # int (iscsi target lun number)
              fsType:                                                 # string (file system type to mount, such as ext4, xfs, ntfs)
              readOnly:                                               # bool (read-only if true, read-write otherwise (false or unspecified))
            glusterfs:                                                # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.GlusterfsVolumeSource (Glusterfs volume that will be mounted on the host machine )
              endpoints:                                              # string (gluster hosts endpoints name)
              path:                                                   # string (path to gluster volume)
              readOnly:                                               # bool (Glusterfs volume to be mounted with read-only permissions)
        containers:                                                   # []github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.Container (list of containers belonging to the pod; containers cannot currently be added or removed)
        - name:                                                       # string (name of the container; must be a DNS_LABEL and unique within the pod; cannot be updated)
          image:                                                      # string (Docker image name)
          entrypoint:                                                 # []string (entrypoint array; not executed within a shell; the image's entrypoint is used if this is not provided; cannot be updated)
          - [string]                                                  # 
          command:                                                    # []string (command argv array; not executed within a shell; the image's cmd is used if this is not provided; cannot be updated)
          - [string]                                                  # 
          workingDir:                                                 # string (container's working directory; defaults to image's default; cannot be updated)
          ports:                                                      # []github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ContainerPort (list of ports to expose from the container; cannot be updated)
          - name:                                                     # string (name for the port that can be referred to by services; must be a DNS_LABEL and unique without the pod)
            hostPort:                                                 # int (number of port to expose on the host; most containers do not need this)
            containerPort:                                            # int (number of port to expose on the pod's IP address)
            protocol: TCP|UDP                                         # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.Protocol (protocol for port; must be UDP or TCP; TCP if unspecified)
            hostIP:                                                   # string (host IP to bind the port to)
          env:                                                        # []github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.EnvVar (list of environment variables to set in the container; cannot be updated)
          - name:                                                     # string (name of the environment variable; must be a C_IDENTIFIER)
            key:                                                      # string (name of the environment variable; must be a C_IDENTIFIER; deprecated - use name instead)
            value:                                                    # string (value of the environment variable; defaults to empty string)
          resources:                                                  # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ResourceRequirements (Compute Resources required by this container; cannot be updated)
            limits:                                                   # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ResourceList (Maximum amount of compute resources allowed)
              [github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ResourceName]: # github.com/GoogleCloudPlatform/kubernetes/pkg/util.IntOrString
            requests:                                                 # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ResourceList (Minimum amount of resources requested)
              [github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ResourceName]: # github.com/GoogleCloudPlatform/kubernetes/pkg/util.IntOrString
          cpu:                                                        # int (CPU share in thousandths of a core; cannot be updated)
          memory:                                                     # int64 (memory limit in bytes; defaults to unlimited; cannot be updated)
          volumeMounts:                                               # []github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.VolumeMount (pod volumes to mount into the container's filesystem; cannot be updated)
          - name:                                                     # string (name of the volume to mount)
            readOnly:                                                 # bool (mounted read-only if true, read-write otherwise (false or unspecified))
            mountPath:                                                # string (path within the container at which the volume should be mounted; overrides path)
            path:                                                     # string (path within the container at which the volume should be mounted; deprecated)
            mountType:                                                # string (LOCAL or HOST; defaults to LOCAL; deprecated)
          livenessProbe:                                              # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.LivenessProbe (periodic probe of container liveness; container will be restarted if the probe fails; cannot be updated)
            httpGet:                                                  # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.HTTPGetAction (parameters for HTTP-based liveness probe)
              path:                                                   # string (path to access on the HTTP server)
              port:                                                   # github.com/GoogleCloudPlatform/kubernetes/pkg/util.IntOrString (number or name of the port to access on the container)
              host:                                                   # string (hostname to connect to; defaults to pod IP)
            tcpSocket:                                                # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.TCPSocketAction (parameters for TCP-based liveness probe)
              port:                                                   # github.com/GoogleCloudPlatform/kubernetes/pkg/util.IntOrString (number of name of the port to access on the container)
            exec:                                                     # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ExecAction (parameters for exec-based liveness probe)
              command:                                                # []string (command line to execute inside the container; working directory for the command is root ('/') in the container's file system; the command is exec'd, not run inside a shell; exit status of 0 is treated as live/healthy and non-zero is unhealthy)
              - [string]                                              # 
            initialDelaySeconds:                                      # int64 (number of seconds after the container has started before liveness probes are initiated)
            timeoutSeconds:                                           # int64 (number of seconds after which liveness probes timeout; defaults to 1 second)
          readinessProbe:                                             # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.LivenessProbe (periodic probe of container service readiness; container will be removed from service endpoints if the probe fails; cannot be updated)
            httpGet:                                                  # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.HTTPGetAction (parameters for HTTP-based liveness probe)
              path:                                                   # string (path to access on the HTTP server)
              port:                                                   # github.com/GoogleCloudPlatform/kubernetes/pkg/util.IntOrString (number or name of the port to access on the container)
              host:                                                   # string (hostname to connect to; defaults to pod IP)
            tcpSocket:                                                # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.TCPSocketAction (parameters for TCP-based liveness probe)
              port:                                                   # github.com/GoogleCloudPlatform/kubernetes/pkg/util.IntOrString (number of name of the port to access on the container)
            exec:                                                     # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ExecAction (parameters for exec-based liveness probe)
              command:                                                # []string (command line to execute inside the container; working directory for the command is root ('/') in the container's file system; the command is exec'd, not run inside a shell; exit status of 0 is treated as live/healthy and non-zero is unhealthy)
              - [string]                                              # 
            initialDelaySeconds:                                      # int64 (number of seconds after the container has started before liveness probes are initiated)
            timeoutSeconds:                                           # int64 (number of seconds after which liveness probes timeout; defaults to 1 second)
          lifecycle:                                                  # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.Lifecycle (actions that the management system should take in response to container lifecycle events; cannot be updated)
            postStart:                                                # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.Handler (called immediately after a container is started; if the handler fails, the container is terminated and restarted according to its restart policy; other management of the container blocks until the hook completes)
              exec:                                                   # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ExecAction (exec-based handler)
                command:                                              # []string (command line to execute inside the container; working directory for the command is root ('/') in the container's file system; the command is exec'd, not run inside a shell; exit status of 0 is treated as live/healthy and non-zero is unhealthy)
                - [string]                                            # 
              httpGet:                                                # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.HTTPGetAction (HTTP-based handler)
                path:                                                 # string (path to access on the HTTP server)
                port:                                                 # github.com/GoogleCloudPlatform/kubernetes/pkg/util.IntOrString (number or name of the port to access on the container)
                host:                                                 # string (hostname to connect to; defaults to pod IP)
              tcpSocket:                                              # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.TCPSocketAction (TCP-based handler; TCP hooks not yet supported)
                port:                                                 # github.com/GoogleCloudPlatform/kubernetes/pkg/util.IntOrString (number of name of the port to access on the container)
            preStop:                                                  # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.Handler (called before a container is terminated; the container is terminated after the handler completes; other management of the container blocks until the hook completes)
              exec:                                                   # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ExecAction (exec-based handler)
                command:                                              # []string (command line to execute inside the container; working directory for the command is root ('/') in the container's file system; the command is exec'd, not run inside a shell; exit status of 0 is treated as live/healthy and non-zero is unhealthy)
                - [string]                                            # 
              httpGet:                                                # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.HTTPGetAction (HTTP-based handler)
                path:                                                 # string (path to access on the HTTP server)
                port:                                                 # github.com/GoogleCloudPlatform/kubernetes/pkg/util.IntOrString (number or name of the port to access on the container)
                host:                                                 # string (hostname to connect to; defaults to pod IP)
              tcpSocket:                                              # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.TCPSocketAction (TCP-based handler; TCP hooks not yet supported)
                port:                                                 # github.com/GoogleCloudPlatform/kubernetes/pkg/util.IntOrString (number of name of the port to access on the container)
          terminationMessagePath:                                     # string (path at which the file to which the container's termination message will be written is mounted into the container's filesystem; message written is intended to be brief final status, such as an assertion failure message; defaults to /dev/termination-log; cannot be updated)
          privileged:                                                 # bool (whether or not the container is granted privileged status; defaults to false; cannot be updated)
          imagePullPolicy: PullAlways|PullIfNotPresent|PullNever      # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.PullPolicy (image pull policy; one of PullAlways, PullNever, PullIfNotPresent; defaults to PullAlways if :latest tag is specified, or PullIfNotPresent otherwise; cannot be updated)
          capabilities:                                               # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.Capabilities (capabilities for container; cannot be updated)
            add:                                                      # []github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.CapabilityType (added capabilities)
            - [github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.CapabilityType] # 
            drop:                                                     # []github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.CapabilityType (droped capabilities)
            - [github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.CapabilityType] # 
        restartPolicy:                                                # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.RestartPolicy (restart policy for all containers within the pod; one of RestartPolicyAlways, RestartPolicyOnFailure, RestartPolicyNever)
          always:                                                     # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.RestartPolicyAlways (always restart the container after termination)
          onFailure:                                                  # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.RestartPolicyOnFailure (restart the container if it fails for any reason, but not if it succeeds (exit 0))
          never:                                                      # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.RestartPolicyNever (never restart the container)
        dnsPolicy: ClusterFirst|Default                               # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.DNSPolicy (DNS policy for containers within the pod; one of 'ClusterFirst' or 'Default')
        hostNetwork:                                                  # bool (host networking requested for this pod)
      status: Running|Succeeded|Terminated|Unknown|Waiting            # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.PodStatus (current condition of the pod, Waiting, Running, or Terminated)
      Condition:                                                      # []github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.PodCondition (current service state of pod)
      - kind: Ready                                                   # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.PodConditionKind (kind of the condition, currently only Ready)
        status: Full|None|Unknown                                     # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ConditionStatus (status of the condition, one of Full, None, Unknown)
      message:                                                        # string (human readable message indicating details about why the pod is in this condition)
      host:                                                           # string (host to which the pod is assigned; empty if not yet scheduled; cannot be updated)
      hostIP:                                                         # string (IP address of the host to which the pod is assigned; empty if not yet scheduled)
      podIP:                                                          # string (IP address allocated to the pod; routable at least within the cluster; empty if not yet allocated)
      info:                                                           # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.PodInfo (map of container name to container status)
        [string]:                                                     # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ContainerStatus
    nodeSelector:                                                     # map[string]string (a selector which must be true for the pod to fit on a node)
      [string]:                                                       # string
    labels:                                                           # map[string]string (map of string keys and values that can be used to organize and categorize the pods created from the template; must match the selector of the replication controller to which the template belongs; may match selectors of services)
      [string]:                                                       # string
    annotations:                                                      # map[string]string (map of string keys and values that can be used by external tooling to store and retrieve arbitrary metadata about pods created from the template)
      [string]:                                                       # string
labels:                                                               # map[string]string (map of string keys and values that can be used to organize and categorize replication controllers)
  [string]:                                                           # string


ReplicationControllerList
=========================

ReplicationControllerList is a collection of replication controllers.

kind: ReplicationControllerList                                       # string (kind of object, in CamelCase; cannot be updated)
id:                                                                   # string (name of the object; must be a DNS_SUBDOMAIN and unique among all objects of the same kind within the same namespace; used in resource URLs; cannot be updated)
uid:                                                                  # github.com/GoogleCloudPlatform/kubernetes/pkg/types.UID (unique UUID across space and time; populated by the system, read-only; cannot be updated)
creationTimestamp:                                                    # github.com/GoogleCloudPlatform/kubernetes/pkg/util.Time (RFC 3339 date and time at which the object was created; populated by the system, read-only; null for lists)
selfLink:                                                             # string (URL for the object; populated by the system, read-only)
resourceVersion:                                                      # uint64 (string that identifies the internal version of this object that can be used by clients to determine when objects have changed; populated by the system, read-only; value must be treated as opaque by clients and passed unmodified back to the server: https://github.com/GoogleCloudPlatform/kubernetes/blob/master/docs/api-conventions.md#concurrency-control-and-consistency)
apiVersion: v1beta1                                                   # string (version of the schema the object should have)
namespace:                                                            # string (namespace to which the object belongs; must be a DNS_SUBDOMAIN; 'default' by default; cannot be updated)
deletionTimestamp:                                                    # *github.com/GoogleCloudPlatform/kubernetes/pkg/util.Time (RFC 3339 date and time at which the object will be deleted; populated by the system when a graceful deletion is requested, read-only; if not set, graceful deletion of the object has not been requested)
generateName:                                                         # string (an optional prefix to use to generate a unique name; has the same validation rules as name; optional, and is applied only name if is not specified)
annotations:                                                          # map[string]string (map of string keys and values that can be used by external tooling to store and retrieve arbitrary metadata about the object)
  [string]:                                                           # string
items:                                                                # []github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ReplicationController (list of replication controllers)
- kind:                                                               # string (kind of object, in CamelCase; cannot be updated)
  id:                                                                 # string (name of the object; must be a DNS_SUBDOMAIN and unique among all objects of the same kind within the same namespace; used in resource URLs; cannot be updated)
  uid:                                                                # github.com/GoogleCloudPlatform/kubernetes/pkg/types.UID (unique UUID across space and time; populated by the system, read-only; cannot be updated)
  creationTimestamp:                                                  # github.com/GoogleCloudPlatform/kubernetes/pkg/util.Time (RFC 3339 date and time at which the object was created; populated by the system, read-only; null for lists)
  selfLink:                                                           # string (URL for the object; populated by the system, read-only)
  resourceVersion:                                                    # uint64 (string that identifies the internal version of this object that can be used by clients to determine when objects have changed; populated by the system, read-only; value must be treated as opaque by clients and passed unmodified back to the server: https://github.com/GoogleCloudPlatform/kubernetes/blob/master/docs/api-conventions.md#concurrency-control-and-consistency)
  apiVersion:                                                         # string (version of the schema the object should have)
  namespace:                                                          # string (namespace to which the object belongs; must be a DNS_SUBDOMAIN; 'default' by default; cannot be updated)
  deletionTimestamp:                                                  # *github.com/GoogleCloudPlatform/kubernetes/pkg/util.Time (RFC 3339 date and time at which the object will be deleted; populated by the system when a graceful deletion is requested, read-only; if not set, graceful deletion of the object has not been requested)
  generateName:                                                       # string (an optional prefix to use to generate a unique name; has the same validation rules as name; optional, and is applied only name if is not specified)
  annotations:                                                        # map[string]string (map of string keys and values that can be used by external tooling to store and retrieve arbitrary metadata about the object)
    [string]:                                                         # string
  desiredState:                                                       # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ReplicationControllerState (specification of the desired state of the replication controller)
    replicas:                                                         # int (number of replicas (desired or observed, as appropriate))
    replicaSelector:                                                  # map[string]string (label keys and values that must match in order to be controlled by this replication controller)
      [string]:                                                       # string
    podTemplate:                                                      # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.PodTemplate (template for pods to be created by this replication controller when the observed number of replicas is less than the desired number of replicas)
      desiredState:                                                   # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.PodState (specification of the desired state of pods created from this template)
        manifest:                                                     # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ContainerManifest (manifest of containers and volumes comprising the pod)
          version:                                                    # string (manifest version; must be v1beta1)
          id:                                                         # string (manifest name; must be a DNS_SUBDOMAIN; cannot be updated)
          uuid:                                                       # github.com/GoogleCloudPlatform/kubernetes/pkg/types.UID (manifest UUID, populated by the system, read-only)
          volumes:                                                    # []github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.Volume (list of volumes that can be mounted by containers belonging to the pod)
          - name:                                                     # string (volume name; must be a DNS_LABEL and unique within the pod)
            source:                                                   # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.VolumeSource (location and type of volume to mount; at most one of HostDir, EmptyDir, GCEPersistentDisk, or GitRepo; default is EmptyDir)
              hostDir:                                                # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.HostPathVolumeSource (pre-existing host file or directory; generally for privileged system daemons or other agents tied to the host)
                path:                                                 # string (path of the directory on the host)
              emptyDir:                                               # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.EmptyDirVolumeSource (temporary directory that shares a pod's lifetime)
                medium: |Memory                                       # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.StorageType (type of storage used to back the volume; must be an empty string (default) or Memory)
              persistentDisk:                                         # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.GCEPersistentDiskVolumeSource (GCE disk resource attached to the host machine on demand)
                pdName:                                               # string (unique name of the PD resource in GCE)
                fsType:                                               # string (file system type to mount, such as ext4, xfs, ntfs)
                partition:                                            # int (partition on the disk to mount (e.g., '1' for /dev/sda1); if omitted the plain device name (e.g., /dev/sda) will be mounted)
                readOnly:                                             # bool (read-only if true, read-write otherwise (false or unspecified))
              gitRepo:                                                # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.GitRepoVolumeSource (git repository at a particular revision)
                repository:                                           # string (repository URL)
                revision:                                             # string (commit hash for the specified revision)
              secret:                                                 # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.SecretVolumeSource (secret to populate volume with)
                target:                                               # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ObjectReference (target is a reference to a secret)
                  kind:                                               # string (kind of the referent)
                  namespace:                                          # string (namespace of the referent)
                  name:                                               # string (id of the referent)
                  uid:                                                # github.com/GoogleCloudPlatform/kubernetes/pkg/types.UID (uid of the referent)
                  apiVersion:                                         # string (API version of the referent)
                  resourceVersion:                                    # string (specific resourceVersion to which this reference is made, if any: https://github.com/GoogleCloudPlatform/kubernetes/blob/master/docs/api-conventions.md#concurrency-control-and-consistency)
                  fieldPath:                                          # string (if referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2])
              nfs:                                                    # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.NFSVolumeSource (NFS volume that will be mounted in the host machine )
                server:                                               # string (the hostname or IP address of the NFS server)
                path:                                                 # string (the path that is exported by the NFS server)
                readOnly:                                             # bool (forces the NFS export to be mounted with read-only permissions)
              iscsi:                                                  # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ISCSIVolumeSource (iSCSI disk attached to host machine on demand)
                targetPortal:                                         # string (iSCSI target portal)
                iqn:                                                  # string (iSCSI Qualified Name)
                lun:                                                  # int (iscsi target lun number)
                fsType:                                               # string (file system type to mount, such as ext4, xfs, ntfs)
                readOnly:                                             # bool (read-only if true, read-write otherwise (false or unspecified))
              glusterfs:                                              # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.GlusterfsVolumeSource (Glusterfs volume that will be mounted on the host machine )
                endpoints:                                            # string (gluster hosts endpoints name)
                path:                                                 # string (path to gluster volume)
                readOnly:                                             # bool (Glusterfs volume to be mounted with read-only permissions)
          containers:                                                 # []github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.Container (list of containers belonging to the pod; containers cannot currently be added or removed)
          - name:                                                     # string (name of the container; must be a DNS_LABEL and unique within the pod; cannot be updated)
            image:                                                    # string (Docker image name)
            entrypoint:                                               # []string (entrypoint array; not executed within a shell; the image's entrypoint is used if this is not provided; cannot be updated)
            - [string]                                                # 
            command:                                                  # []string (command argv array; not executed within a shell; the image's cmd is used if this is not provided; cannot be updated)
            - [string]                                                # 
            workingDir:                                               # string (container's working directory; defaults to image's default; cannot be updated)
            ports:                                                    # []github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ContainerPort (list of ports to expose from the container; cannot be updated)
            - name:                                                   # string (name for the port that can be referred to by services; must be a DNS_LABEL and unique without the pod)
              hostPort:                                               # int (number of port to expose on the host; most containers do not need this)
              containerPort:                                          # int (number of port to expose on the pod's IP address)
              protocol: TCP|UDP                                       # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.Protocol (protocol for port; must be UDP or TCP; TCP if unspecified)
              hostIP:                                                 # string (host IP to bind the port to)
            env:                                                      # []github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.EnvVar (list of environment variables to set in the container; cannot be updated)
            - name:                                                   # string (name of the environment variable; must be a C_IDENTIFIER)
              key:                                                    # string (name of the environment variable; must be a C_IDENTIFIER; deprecated - use name instead)
              value:                                                  # string (value of the environment variable; defaults to empty string)
            resources:                                                # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ResourceRequirements (Compute Resources required by this container; cannot be updated)
              limits:                                                 # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ResourceList (Maximum amount of compute resources allowed)
                [github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ResourceName]: # github.com/GoogleCloudPlatform/kubernetes/pkg/util.IntOrString
              requests:                                               # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ResourceList (Minimum amount of resources requested)
                [github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ResourceName]: # github.com/GoogleCloudPlatform/kubernetes/pkg/util.IntOrString
            cpu:                                                      # int (CPU share in thousandths of a core; cannot be updated)
            memory:                                                   # int64 (memory limit in bytes; defaults to unlimited; cannot be updated)
            volumeMounts:                                             # []github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.VolumeMount (pod volumes to mount into the container's filesystem; cannot be updated)
            - name:                                                   # string (name of the volume to mount)
              readOnly:                                               # bool (mounted read-only if true, read-write otherwise (false or unspecified))
              mountPath:                                              # string (path within the container at which the volume should be mounted; overrides path)
              path:                                                   # string (path within the container at which the volume should be mounted; deprecated)
              mountType:                                              # string (LOCAL or HOST; defaults to LOCAL; deprecated)
            livenessProbe:                                            # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.LivenessProbe (periodic probe of container liveness; container will be restarted if the probe fails; cannot be updated)
              httpGet:                                                # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.HTTPGetAction (parameters for HTTP-based liveness probe)
                path:                                                 # string (path to access on the HTTP server)
                port:                                                 # github.com/GoogleCloudPlatform/kubernetes/pkg/util.IntOrString (number or name of the port to access on the container)
                host:                                                 # string (hostname to connect to; defaults to pod IP)
              tcpSocket:                                              # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.TCPSocketAction (parameters for TCP-based liveness probe)
                port:                                                 # github.com/GoogleCloudPlatform/kubernetes/pkg/util.IntOrString (number of name of the port to access on the container)
              exec:                                                   # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ExecAction (parameters for exec-based liveness probe)
                command:                                              # []string (command line to execute inside the container; working directory for the command is root ('/') in the container's file system; the command is exec'd, not run inside a shell; exit status of 0 is treated as live/healthy and non-zero is unhealthy)
                - [string]                                            # 
              initialDelaySeconds:                                    # int64 (number of seconds after the container has started before liveness probes are initiated)
              timeoutSeconds:                                         # int64 (number of seconds after which liveness probes timeout; defaults to 1 second)
            readinessProbe:                                           # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.LivenessProbe (periodic probe of container service readiness; container will be removed from service endpoints if the probe fails; cannot be updated)
              httpGet:                                                # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.HTTPGetAction (parameters for HTTP-based liveness probe)
                path:                                                 # string (path to access on the HTTP server)
                port:                                                 # github.com/GoogleCloudPlatform/kubernetes/pkg/util.IntOrString (number or name of the port to access on the container)
                host:                                                 # string (hostname to connect to; defaults to pod IP)
              tcpSocket:                                              # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.TCPSocketAction (parameters for TCP-based liveness probe)
                port:                                                 # github.com/GoogleCloudPlatform/kubernetes/pkg/util.IntOrString (number of name of the port to access on the container)
              exec:                                                   # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ExecAction (parameters for exec-based liveness probe)
                command:                                              # []string (command line to execute inside the container; working directory for the command is root ('/') in the container's file system; the command is exec'd, not run inside a shell; exit status of 0 is treated as live/healthy and non-zero is unhealthy)
                - [string]                                            # 
              initialDelaySeconds:                                    # int64 (number of seconds after the container has started before liveness probes are initiated)
              timeoutSeconds:                                         # int64 (number of seconds after which liveness probes timeout; defaults to 1 second)
            lifecycle:                                                # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.Lifecycle (actions that the management system should take in response to container lifecycle events; cannot be updated)
              postStart:                                              # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.Handler (called immediately after a container is started; if the handler fails, the container is terminated and restarted according to its restart policy; other management of the container blocks until the hook completes)
                exec:                                                 # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ExecAction (exec-based handler)
                  command:                                            # []string (command line to execute inside the container; working directory for the command is root ('/') in the container's file system; the command is exec'd, not run inside a shell; exit status of 0 is treated as live/healthy and non-zero is unhealthy)
                  - [string]                                          # 
                httpGet:                                              # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.HTTPGetAction (HTTP-based handler)
                  path:                                               # string (path to access on the HTTP server)
                  port:                                               # github.com/GoogleCloudPlatform/kubernetes/pkg/util.IntOrString (number or name of the port to access on the container)
                  host:                                               # string (hostname to connect to; defaults to pod IP)
                tcpSocket:                                            # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.TCPSocketAction (TCP-based handler; TCP hooks not yet supported)
                  port:                                               # github.com/GoogleCloudPlatform/kubernetes/pkg/util.IntOrString (number of name of the port to access on the container)
              preStop:                                                # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.Handler (called before a container is terminated; the container is terminated after the handler completes; other management of the container blocks until the hook completes)
                exec:                                                 # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ExecAction (exec-based handler)
                  command:                                            # []string (command line to execute inside the container; working directory for the command is root ('/') in the container's file system; the command is exec'd, not run inside a shell; exit status of 0 is treated as live/healthy and non-zero is unhealthy)
                  - [string]                                          # 
                httpGet:                                              # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.HTTPGetAction (HTTP-based handler)
                  path:                                               # string (path to access on the HTTP server)
                  port:                                               # github.com/GoogleCloudPlatform/kubernetes/pkg/util.IntOrString (number or name of the port to access on the container)
                  host:                                               # string (hostname to connect to; defaults to pod IP)
                tcpSocket:                                            # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.TCPSocketAction (TCP-based handler; TCP hooks not yet supported)
                  port:                                               # github.com/GoogleCloudPlatform/kubernetes/pkg/util.IntOrString (number of name of the port to access on the container)
            terminationMessagePath:                                   # string (path at which the file to which the container's termination message will be written is mounted into the container's filesystem; message written is intended to be brief final status, such as an assertion failure message; defaults to /dev/termination-log; cannot be updated)
            privileged:                                               # bool (whether or not the container is granted privileged status; defaults to false; cannot be updated)
            imagePullPolicy: PullAlways|PullIfNotPresent|PullNever    # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.PullPolicy (image pull policy; one of PullAlways, PullNever, PullIfNotPresent; defaults to PullAlways if :latest tag is specified, or PullIfNotPresent otherwise; cannot be updated)
            capabilities:                                             # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.Capabilities (capabilities for container; cannot be updated)
              add:                                                    # []github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.CapabilityType (added capabilities)
              - [github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.CapabilityType] # 
              drop:                                                   # []github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.CapabilityType (droped capabilities)
              - [github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.CapabilityType] # 
          restartPolicy:                                              # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.RestartPolicy (restart policy for all containers within the pod; one of RestartPolicyAlways, RestartPolicyOnFailure, RestartPolicyNever)
            always:                                                   # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.RestartPolicyAlways (always restart the container after termination)
            onFailure:                                                # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.RestartPolicyOnFailure (restart the container if it fails for any reason, but not if it succeeds (exit 0))
            never:                                                    # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.RestartPolicyNever (never restart the container)
          dnsPolicy: ClusterFirst|Default                             # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.DNSPolicy (DNS policy for containers within the pod; one of 'ClusterFirst' or 'Default')
          hostNetwork:                                                # bool (host networking requested for this pod)
        status: Running|Succeeded|Terminated|Unknown|Waiting          # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.PodStatus (current condition of the pod, Waiting, Running, or Terminated)
        Condition:                                                    # []github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.PodCondition (current service state of pod)
        - kind: Ready                                                 # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.PodConditionKind (kind of the condition, currently only Ready)
          status: Full|None|Unknown                                   # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ConditionStatus (status of the condition, one of Full, None, Unknown)
        message:                                                      # string (human readable message indicating details about why the pod is in this condition)
        host:                                                         # string (host to which the pod is assigned; empty if not yet scheduled; cannot be updated)
        hostIP:                                                       # string (IP address of the host to which the pod is assigned; empty if not yet scheduled)
        podIP:                                                        # string (IP address allocated to the pod; routable at least within the cluster; empty if not yet allocated)
        info:                                                         # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.PodInfo (map of container name to container status)
          [string]:                                                   # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ContainerStatus
      nodeSelector:                                                   # map[string]string (a selector which must be true for the pod to fit on a node)
        [string]:                                                     # string
      labels:                                                         # map[string]string (map of string keys and values that can be used to organize and categorize the pods created from the template; must match the selector of the replication controller to which the template belongs; may match selectors of services)
        [string]:                                                     # string
      annotations:                                                    # map[string]string (map of string keys and values that can be used by external tooling to store and retrieve arbitrary metadata about pods created from the template)
        [string]:                                                     # string
  currentState:                                                       # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ReplicationControllerState (current state of the replication controller; populated by the system, read-only)
    replicas:                                                         # int (number of replicas (desired or observed, as appropriate))
    replicaSelector:                                                  # map[string]string (label keys and values that must match in order to be controlled by this replication controller)
      [string]:                                                       # string
    podTemplate:                                                      # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.PodTemplate (template for pods to be created by this replication controller when the observed number of replicas is less than the desired number of replicas)
      desiredState:                                                   # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.PodState (specification of the desired state of pods created from this template)
        manifest:                                                     # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ContainerManifest (manifest of containers and volumes comprising the pod)
          version:                                                    # string (manifest version; must be v1beta1)
          id:                                                         # string (manifest name; must be a DNS_SUBDOMAIN; cannot be updated)
          uuid:                                                       # github.com/GoogleCloudPlatform/kubernetes/pkg/types.UID (manifest UUID, populated by the system, read-only)
          volumes:                                                    # []github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.Volume (list of volumes that can be mounted by containers belonging to the pod)
          - name:                                                     # string (volume name; must be a DNS_LABEL and unique within the pod)
            source:                                                   # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.VolumeSource (location and type of volume to mount; at most one of HostDir, EmptyDir, GCEPersistentDisk, or GitRepo; default is EmptyDir)
              hostDir:                                                # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.HostPathVolumeSource (pre-existing host file or directory; generally for privileged system daemons or other agents tied to the host)
                path:                                                 # string (path of the directory on the host)
              emptyDir:                                               # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.EmptyDirVolumeSource (temporary directory that shares a pod's lifetime)
                medium: |Memory                                       # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.StorageType (type of storage used to back the volume; must be an empty string (default) or Memory)
              persistentDisk:                                         # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.GCEPersistentDiskVolumeSource (GCE disk resource attached to the host machine on demand)
                pdName:                                               # string (unique name of the PD resource in GCE)
                fsType:                                               # string (file system type to mount, such as ext4, xfs, ntfs)
                partition:                                            # int (partition on the disk to mount (e.g., '1' for /dev/sda1); if omitted the plain device name (e.g., /dev/sda) will be mounted)
                readOnly:                                             # bool (read-only if true, read-write otherwise (false or unspecified))
              gitRepo:                                                # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.GitRepoVolumeSource (git repository at a particular revision)
                repository:                                           # string (repository URL)
                revision:                                             # string (commit hash for the specified revision)
              secret:                                                 # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.SecretVolumeSource (secret to populate volume with)
                target:                                               # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ObjectReference (target is a reference to a secret)
                  kind:                                               # string (kind of the referent)
                  namespace:                                          # string (namespace of the referent)
                  name:                                               # string (id of the referent)
                  uid:                                                # github.com/GoogleCloudPlatform/kubernetes/pkg/types.UID (uid of the referent)
                  apiVersion:                                         # string (API version of the referent)
                  resourceVersion:                                    # string (specific resourceVersion to which this reference is made, if any: https://github.com/GoogleCloudPlatform/kubernetes/blob/master/docs/api-conventions.md#concurrency-control-and-consistency)
                  fieldPath:                                          # string (if referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2])
              nfs:                                                    # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.NFSVolumeSource (NFS volume that will be mounted in the host machine )
                server:                                               # string (the hostname or IP address of the NFS server)
                path:                                                 # string (the path that is exported by the NFS server)
                readOnly:                                             # bool (forces the NFS export to be mounted with read-only permissions)
              iscsi:                                                  # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ISCSIVolumeSource (iSCSI disk attached to host machine on demand)
                targetPortal:                                         # string (iSCSI target portal)
                iqn:                                                  # string (iSCSI Qualified Name)
                lun:                                                  # int (iscsi target lun number)
                fsType:                                               # string (file system type to mount, such as ext4, xfs, ntfs)
                readOnly:                                             # bool (read-only if true, read-write otherwise (false or unspecified))
              glusterfs:                                              # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.GlusterfsVolumeSource (Glusterfs volume that will be mounted on the host machine )
                endpoints:                                            # string (gluster hosts endpoints name)
                path:                                                 # string (path to gluster volume)
                readOnly:                                             # bool (Glusterfs volume to be mounted with read-only permissions)
          containers:                                                 # []github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.Container (list of containers belonging to the pod; containers cannot currently be added or removed)
          - name:                                                     # string (name of the container; must be a DNS_LABEL and unique within the pod; cannot be updated)
            image:                                                    # string (Docker image name)
            entrypoint:                                               # []string (entrypoint array; not executed within a shell; the image's entrypoint is used if this is not provided; cannot be updated)
            - [string]                                                # 
            command:                                                  # []string (command argv array; not executed within a shell; the image's cmd is used if this is not provided; cannot be updated)
            - [string]                                                # 
            workingDir:                                               # string (container's working directory; defaults to image's default; cannot be updated)
            ports:                                                    # []github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ContainerPort (list of ports to expose from the container; cannot be updated)
            - name:                                                   # string (name for the port that can be referred to by services; must be a DNS_LABEL and unique without the pod)
              hostPort:                                               # int (number of port to expose on the host; most containers do not need this)
              containerPort:                                          # int (number of port to expose on the pod's IP address)
              protocol: TCP|UDP                                       # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.Protocol (protocol for port; must be UDP or TCP; TCP if unspecified)
              hostIP:                                                 # string (host IP to bind the port to)
            env:                                                      # []github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.EnvVar (list of environment variables to set in the container; cannot be updated)
            - name:                                                   # string (name of the environment variable; must be a C_IDENTIFIER)
              key:                                                    # string (name of the environment variable; must be a C_IDENTIFIER; deprecated - use name instead)
              value:                                                  # string (value of the environment variable; defaults to empty string)
            resources:                                                # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ResourceRequirements (Compute Resources required by this container; cannot be updated)
              limits:                                                 # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ResourceList (Maximum amount of compute resources allowed)
                [github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ResourceName]: # github.com/GoogleCloudPlatform/kubernetes/pkg/util.IntOrString
              requests:                                               # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ResourceList (Minimum amount of resources requested)
                [github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ResourceName]: # github.com/GoogleCloudPlatform/kubernetes/pkg/util.IntOrString
            cpu:                                                      # int (CPU share in thousandths of a core; cannot be updated)
            memory:                                                   # int64 (memory limit in bytes; defaults to unlimited; cannot be updated)
            volumeMounts:                                             # []github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.VolumeMount (pod volumes to mount into the container's filesystem; cannot be updated)
            - name:                                                   # string (name of the volume to mount)
              readOnly:                                               # bool (mounted read-only if true, read-write otherwise (false or unspecified))
              mountPath:                                              # string (path within the container at which the volume should be mounted; overrides path)
              path:                                                   # string (path within the container at which the volume should be mounted; deprecated)
              mountType:                                              # string (LOCAL or HOST; defaults to LOCAL; deprecated)
            livenessProbe:                                            # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.LivenessProbe (periodic probe of container liveness; container will be restarted if the probe fails; cannot be updated)
              httpGet:                                                # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.HTTPGetAction (parameters for HTTP-based liveness probe)
                path:                                                 # string (path to access on the HTTP server)
                port:                                                 # github.com/GoogleCloudPlatform/kubernetes/pkg/util.IntOrString (number or name of the port to access on the container)
                host:                                                 # string (hostname to connect to; defaults to pod IP)
              tcpSocket:                                              # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.TCPSocketAction (parameters for TCP-based liveness probe)
                port:                                                 # github.com/GoogleCloudPlatform/kubernetes/pkg/util.IntOrString (number of name of the port to access on the container)
              exec:                                                   # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ExecAction (parameters for exec-based liveness probe)
                command:                                              # []string (command line to execute inside the container; working directory for the command is root ('/') in the container's file system; the command is exec'd, not run inside a shell; exit status of 0 is treated as live/healthy and non-zero is unhealthy)
                - [string]                                            # 
              initialDelaySeconds:                                    # int64 (number of seconds after the container has started before liveness probes are initiated)
              timeoutSeconds:                                         # int64 (number of seconds after which liveness probes timeout; defaults to 1 second)
            readinessProbe:                                           # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.LivenessProbe (periodic probe of container service readiness; container will be removed from service endpoints if the probe fails; cannot be updated)
              httpGet:                                                # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.HTTPGetAction (parameters for HTTP-based liveness probe)
                path:                                                 # string (path to access on the HTTP server)
                port:                                                 # github.com/GoogleCloudPlatform/kubernetes/pkg/util.IntOrString (number or name of the port to access on the container)
                host:                                                 # string (hostname to connect to; defaults to pod IP)
              tcpSocket:                                              # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.TCPSocketAction (parameters for TCP-based liveness probe)
                port:                                                 # github.com/GoogleCloudPlatform/kubernetes/pkg/util.IntOrString (number of name of the port to access on the container)
              exec:                                                   # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ExecAction (parameters for exec-based liveness probe)
                command:                                              # []string (command line to execute inside the container; working directory for the command is root ('/') in the container's file system; the command is exec'd, not run inside a shell; exit status of 0 is treated as live/healthy and non-zero is unhealthy)
                - [string]                                            # 
              initialDelaySeconds:                                    # int64 (number of seconds after the container has started before liveness probes are initiated)
              timeoutSeconds:                                         # int64 (number of seconds after which liveness probes timeout; defaults to 1 second)
            lifecycle:                                                # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.Lifecycle (actions that the management system should take in response to container lifecycle events; cannot be updated)
              postStart:                                              # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.Handler (called immediately after a container is started; if the handler fails, the container is terminated and restarted according to its restart policy; other management of the container blocks until the hook completes)
                exec:                                                 # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ExecAction (exec-based handler)
                  command:                                            # []string (command line to execute inside the container; working directory for the command is root ('/') in the container's file system; the command is exec'd, not run inside a shell; exit status of 0 is treated as live/healthy and non-zero is unhealthy)
                  - [string]                                          # 
                httpGet:                                              # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.HTTPGetAction (HTTP-based handler)
                  path:                                               # string (path to access on the HTTP server)
                  port:                                               # github.com/GoogleCloudPlatform/kubernetes/pkg/util.IntOrString (number or name of the port to access on the container)
                  host:                                               # string (hostname to connect to; defaults to pod IP)
                tcpSocket:                                            # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.TCPSocketAction (TCP-based handler; TCP hooks not yet supported)
                  port:                                               # github.com/GoogleCloudPlatform/kubernetes/pkg/util.IntOrString (number of name of the port to access on the container)
              preStop:                                                # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.Handler (called before a container is terminated; the container is terminated after the handler completes; other management of the container blocks until the hook completes)
                exec:                                                 # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ExecAction (exec-based handler)
                  command:                                            # []string (command line to execute inside the container; working directory for the command is root ('/') in the container's file system; the command is exec'd, not run inside a shell; exit status of 0 is treated as live/healthy and non-zero is unhealthy)
                  - [string]                                          # 
                httpGet:                                              # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.HTTPGetAction (HTTP-based handler)
                  path:                                               # string (path to access on the HTTP server)
                  port:                                               # github.com/GoogleCloudPlatform/kubernetes/pkg/util.IntOrString (number or name of the port to access on the container)
                  host:                                               # string (hostname to connect to; defaults to pod IP)
                tcpSocket:                                            # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.TCPSocketAction (TCP-based handler; TCP hooks not yet supported)
                  port:                                               # github.com/GoogleCloudPlatform/kubernetes/pkg/util.IntOrString (number of name of the port to access on the container)
            terminationMessagePath:                                   # string (path at which the file to which the container's termination message will be written is mounted into the container's filesystem; message written is intended to be brief final status, such as an assertion failure message; defaults to /dev/termination-log; cannot be updated)
            privileged:                                               # bool (whether or not the container is granted privileged status; defaults to false; cannot be updated)
            imagePullPolicy: PullAlways|PullIfNotPresent|PullNever    # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.PullPolicy (image pull policy; one of PullAlways, PullNever, PullIfNotPresent; defaults to PullAlways if :latest tag is specified, or PullIfNotPresent otherwise; cannot be updated)
            capabilities:                                             # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.Capabilities (capabilities for container; cannot be updated)
              add:                                                    # []github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.CapabilityType (added capabilities)
              - [github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.CapabilityType] # 
              drop:                                                   # []github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.CapabilityType (droped capabilities)
              - [github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.CapabilityType] # 
          restartPolicy:                                              # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.RestartPolicy (restart policy for all containers within the pod; one of RestartPolicyAlways, RestartPolicyOnFailure, RestartPolicyNever)
            always:                                                   # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.RestartPolicyAlways (always restart the container after termination)
            onFailure:                                                # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.RestartPolicyOnFailure (restart the container if it fails for any reason, but not if it succeeds (exit 0))
            never:                                                    # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.RestartPolicyNever (never restart the container)
          dnsPolicy: ClusterFirst|Default                             # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.DNSPolicy (DNS policy for containers within the pod; one of 'ClusterFirst' or 'Default')
          hostNetwork:                                                # bool (host networking requested for this pod)
        status: Running|Succeeded|Terminated|Unknown|Waiting          # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.PodStatus (current condition of the pod, Waiting, Running, or Terminated)
        Condition:                                                    # []github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.PodCondition (current service state of pod)
        - kind: Ready                                                 # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.PodConditionKind (kind of the condition, currently only Ready)
          status: Full|None|Unknown                                   # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ConditionStatus (status of the condition, one of Full, None, Unknown)
        message:                                                      # string (human readable message indicating details about why the pod is in this condition)
        host:                                                         # string (host to which the pod is assigned; empty if not yet scheduled; cannot be updated)
        hostIP:                                                       # string (IP address of the host to which the pod is assigned; empty if not yet scheduled)
        podIP:                                                        # string (IP address allocated to the pod; routable at least within the cluster; empty if not yet allocated)
        info:                                                         # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.PodInfo (map of container name to container status)
          [string]:                                                   # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ContainerStatus
      nodeSelector:                                                   # map[string]string (a selector which must be true for the pod to fit on a node)
        [string]:                                                     # string
      labels:                                                         # map[string]string (map of string keys and values that can be used to organize and categorize the pods created from the template; must match the selector of the replication controller to which the template belongs; may match selectors of services)
        [string]:                                                     # string
      annotations:                                                    # map[string]string (map of string keys and values that can be used by external tooling to store and retrieve arbitrary metadata about pods created from the template)
        [string]:                                                     # string
  labels:                                                             # map[string]string (map of string keys and values that can be used to organize and categorize replication controllers)
    [string]:                                                         # string


ResourceQuota
=============

ResourceQuota sets aggregate quota restrictions enforced per namespace

kind: ResourceQuota                                                   # string (kind of object, in CamelCase; cannot be updated)
id:                                                                   # string (name of the object; must be a DNS_SUBDOMAIN and unique among all objects of the same kind within the same namespace; used in resource URLs; cannot be updated)
uid:                                                                  # github.com/GoogleCloudPlatform/kubernetes/pkg/types.UID (unique UUID across space and time; populated by the system, read-only; cannot be updated)
creationTimestamp:                                                    # github.com/GoogleCloudPlatform/kubernetes/pkg/util.Time (RFC 3339 date and time at which the object was created; populated by the system, read-only; null for lists)
selfLink:                                                             # string (URL for the object; populated by the system, read-only)
resourceVersion:                                                      # uint64 (string that identifies the internal version of this object that can be used by clients to determine when objects have changed; populated by the system, read-only; value must be treated as opaque by clients and passed unmodified back to the server: https://github.com/GoogleCloudPlatform/kubernetes/blob/master/docs/api-conventions.md#concurrency-control-and-consistency)
apiVersion: v1beta1                                                   # string (version of the schema the object should have)
namespace:                                                            # string (namespace to which the object belongs; must be a DNS_SUBDOMAIN; 'default' by default; cannot be updated)
deletionTimestamp:                                                    # *github.com/GoogleCloudPlatform/kubernetes/pkg/util.Time (RFC 3339 date and time at which the object will be deleted; populated by the system when a graceful deletion is requested, read-only; if not set, graceful deletion of the object has not been requested)
generateName:                                                         # string (an optional prefix to use to generate a unique name; has the same validation rules as name; optional, and is applied only name if is not specified)
annotations:                                                          # map[string]string (map of string keys and values that can be used by external tooling to store and retrieve arbitrary metadata about the object)
  [string]:                                                           # string
labels:                                                               # map[string]string (map of string keys and values that can be used to organize and categorize resource quotas)
  [string]:                                                           # string
spec:                                                                 # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ResourceQuotaSpec (spec defines the desired quota)
  hard:                                                               # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ResourceList (hard is the set of desired hard limits for each named resource)
    [github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ResourceName]: # github.com/GoogleCloudPlatform/kubernetes/pkg/util.IntOrString
status:                                                               # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ResourceQuotaStatus (status defines the actual enforced quota and current usage)
  hard:                                                               # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ResourceList (hard is the set of enforced hard limits for each named resource)
    [github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ResourceName]: # github.com/GoogleCloudPlatform/kubernetes/pkg/util.IntOrString
  used:                                                               # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ResourceList (used is the current observed total usage of the resource in the namespace)
    [github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ResourceName]: # github.com/GoogleCloudPlatform/kubernetes/pkg/util.IntOrString


ResourceQuotaList
=================

ResourceQuotaList is a list of ResourceQuota items

kind: ResourceQuotaList                                               # string (kind of object, in CamelCase; cannot be updated)
id:                                                                   # string (name of the object; must be a DNS_SUBDOMAIN and unique among all objects of the same kind within the same namespace; used in resource URLs; cannot be updated)
uid:                                                                  # github.com/GoogleCloudPlatform/kubernetes/pkg/types.UID (unique UUID across space and time; populated by the system, read-only; cannot be updated)
creationTimestamp:                                                    # github.com/GoogleCloudPlatform/kubernetes/pkg/util.Time (RFC 3339 date and time at which the object was created; populated by the system, read-only; null for lists)
selfLink:                                                             # string (URL for the object; populated by the system, read-only)
resourceVersion:                                                      # uint64 (string that identifies the internal version of this object that can be used by clients to determine when objects have changed; populated by the system, read-only; value must be treated as opaque by clients and passed unmodified back to the server: https://github.com/GoogleCloudPlatform/kubernetes/blob/master/docs/api-conventions.md#concurrency-control-and-consistency)
apiVersion: v1beta1                                                   # string (version of the schema the object should have)
namespace:                                                            # string (namespace to which the object belongs; must be a DNS_SUBDOMAIN; 'default' by default; cannot be updated)
deletionTimestamp:                                                    # *github.com/GoogleCloudPlatform/kubernetes/pkg/util.Time (RFC 3339 date and time at which the object will be deleted; populated by the system when a graceful deletion is requested, read-only; if not set, graceful deletion of the object has not been requested)
generateName:                                                         # string (an optional prefix to use to generate a unique name; has the same validation rules as name; optional, and is applied only name if is not specified)
annotations:                                                          # map[string]string (map of string keys and values that can be used by external tooling to store and retrieve arbitrary metadata about the object)
  [string]:                                                           # string
items:                                                                # []github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ResourceQuota (items is a list of ResourceQuota objects)
- kind:                                                               # string (kind of object, in CamelCase; cannot be updated)
  id:                                                                 # string (name of the object; must be a DNS_SUBDOMAIN and unique among all objects of the same kind within the same namespace; used in resource URLs; cannot be updated)
  uid:                                                                # github.com/GoogleCloudPlatform/kubernetes/pkg/types.UID (unique UUID across space and time; populated by the system, read-only; cannot be updated)
  creationTimestamp:                                                  # github.com/GoogleCloudPlatform/kubernetes/pkg/util.Time (RFC 3339 date and time at which the object was created; populated by the system, read-only; null for lists)
  selfLink:                                                           # string (URL for the object; populated by the system, read-only)
  resourceVersion:                                                    # uint64 (string that identifies the internal version of this object that can be used by clients to determine when objects have changed; populated by the system, read-only; value must be treated as opaque by clients and passed unmodified back to the server: https://github.com/GoogleCloudPlatform/kubernetes/blob/master/docs/api-conventions.md#concurrency-control-and-consistency)
  apiVersion:                                                         # string (version of the schema the object should have)
  namespace:                                                          # string (namespace to which the object belongs; must be a DNS_SUBDOMAIN; 'default' by default; cannot be updated)
  deletionTimestamp:                                                  # *github.com/GoogleCloudPlatform/kubernetes/pkg/util.Time (RFC 3339 date and time at which the object will be deleted; populated by the system when a graceful deletion is requested, read-only; if not set, graceful deletion of the object has not been requested)
  generateName:                                                       # string (an optional prefix to use to generate a unique name; has the same validation rules as name; optional, and is applied only name if is not specified)
  annotations:                                                        # map[string]string (map of string keys and values that can be used by external tooling to store and retrieve arbitrary metadata about the object)
    [string]:                                                         # string
  labels:                                                             # map[string]string (map of string keys and values that can be used to organize and categorize resource quotas)
    [string]:                                                         # string
  spec:                                                               # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ResourceQuotaSpec (spec defines the desired quota)
    hard:                                                             # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ResourceList (hard is the set of desired hard limits for each named resource)
      [github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ResourceName]: # github.com/GoogleCloudPlatform/kubernetes/pkg/util.IntOrString
  status:                                                             # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ResourceQuotaStatus (status defines the actual enforced quota and current usage)
    hard:                                                             # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ResourceList (hard is the set of enforced hard limits for each named resource)
      [github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ResourceName]: # github.com/GoogleCloudPlatform/kubernetes/pkg/util.IntOrString
    used:                                                             # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ResourceList (used is the current observed total usage of the resource in the namespace)
      [github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ResourceName]: # github.com/GoogleCloudPlatform/kubernetes/pkg/util.IntOrString


Secret
======

Secret holds secret data of a certain type.  The total bytes of the values in
the Data field must be less than MaxSecretSize bytes.

kind: Secret                                                          # string (kind of object, in CamelCase; cannot be updated)
id:                                                                   # string (name of the object; must be a DNS_SUBDOMAIN and unique among all objects of the same kind within the same namespace; used in resource URLs; cannot be updated)
uid:                                                                  # github.com/GoogleCloudPlatform/kubernetes/pkg/types.UID (unique UUID across space and time; populated by the system, read-only; cannot be updated)
creationTimestamp:                                                    # github.com/GoogleCloudPlatform/kubernetes/pkg/util.Time (RFC 3339 date and time at which the object was created; populated by the system, read-only; null for lists)
selfLink:                                                             # string (URL for the object; populated by the system, read-only)
resourceVersion:                                                      # uint64 (string that identifies the internal version of this object that can be used by clients to determine when objects have changed; populated by the system, read-only; value must be treated as opaque by clients and passed unmodified back to the server: https://github.com/GoogleCloudPlatform/kubernetes/blob/master/docs/api-conventions.md#concurrency-control-and-consistency)
apiVersion: v1beta1                                                   # string (version of the schema the object should have)
namespace:                                                            # string (namespace to which the object belongs; must be a DNS_SUBDOMAIN; 'default' by default; cannot be updated)
deletionTimestamp:                                                    # *github.com/GoogleCloudPlatform/kubernetes/pkg/util.Time (RFC 3339 date and time at which the object will be deleted; populated by the system when a graceful deletion is requested, read-only; if not set, graceful deletion of the object has not been requested)
generateName:                                                         # string (an optional prefix to use to generate a unique name; has the same validation rules as name; optional, and is applied only name if is not specified)
annotations:                                                          # map[string]string (map of string keys and values that can be used by external tooling to store and retrieve arbitrary metadata about the object)
  [string]:                                                           # string
data:                                                                 # map[string][]byte (data contains the secret data.  Each key must be a valid DNS_SUBDOMAIN.  Each value must be a base64 encoded string)
  [string]:                                                           # []byte
type: Opaque                                                          # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.SecretType (type facilitates programmatic handling of secret data)


SecretList
==========


kind: SecretList                                                      # string (kind of object, in CamelCase; cannot be updated)
id:                                                                   # string (name of the object; must be a DNS_SUBDOMAIN and unique among all objects of the same kind within the same namespace; used in resource URLs; cannot be updated)
uid:                                                                  # github.com/GoogleCloudPlatform/kubernetes/pkg/types.UID (unique UUID across space and time; populated by the system, read-only; cannot be updated)
creationTimestamp:                                                    # github.com/GoogleCloudPlatform/kubernetes/pkg/util.Time (RFC 3339 date and time at which the object was created; populated by the system, read-only; null for lists)
selfLink:                                                             # string (URL for the object; populated by the system, read-only)
resourceVersion:                                                      # uint64 (string that identifies the internal version of this object that can be used by clients to determine when objects have changed; populated by the system, read-only; value must be treated as opaque by clients and passed unmodified back to the server: https://github.com/GoogleCloudPlatform/kubernetes/blob/master/docs/api-conventions.md#concurrency-control-and-consistency)
apiVersion: v1beta1                                                   # string (version of the schema the object should have)
namespace:                                                            # string (namespace to which the object belongs; must be a DNS_SUBDOMAIN; 'default' by default; cannot be updated)
deletionTimestamp:                                                    # *github.com/GoogleCloudPlatform/kubernetes/pkg/util.Time (RFC 3339 date and time at which the object will be deleted; populated by the system when a graceful deletion is requested, read-only; if not set, graceful deletion of the object has not been requested)
generateName:                                                         # string (an optional prefix to use to generate a unique name; has the same validation rules as name; optional, and is applied only name if is not specified)
annotations:                                                          # map[string]string (map of string keys and values that can be used by external tooling to store and retrieve arbitrary metadata about the object)
  [string]:                                                           # string
items:                                                                # []github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.Secret (items is a list of secret objects)
- kind:                                                               # string (kind of object, in CamelCase; cannot be updated)
  id:                                                                 # string (name of the object; must be a DNS_SUBDOMAIN and unique among all objects of the same kind within the same namespace; used in resource URLs; cannot be updated)
  uid:                                                                # github.com/GoogleCloudPlatform/kubernetes/pkg/types.UID (unique UUID across space and time; populated by the system, read-only; cannot be updated)
  creationTimestamp:                                                  # github.com/GoogleCloudPlatform/kubernetes/pkg/util.Time (RFC 3339 date and time at which the object was created; populated by the system, read-only; null for lists)
  selfLink:                                                           # string (URL for the object; populated by the system, read-only)
  resourceVersion:                                                    # uint64 (string that identifies the internal version of this object that can be used by clients to determine when objects have changed; populated by the system, read-only; value must be treated as opaque by clients and passed unmodified back to the server: https://github.com/GoogleCloudPlatform/kubernetes/blob/master/docs/api-conventions.md#concurrency-control-and-consistency)
  apiVersion:                                                         # string (version of the schema the object should have)
  namespace:                                                          # string (namespace to which the object belongs; must be a DNS_SUBDOMAIN; 'default' by default; cannot be updated)
  deletionTimestamp:                                                  # *github.com/GoogleCloudPlatform/kubernetes/pkg/util.Time (RFC 3339 date and time at which the object will be deleted; populated by the system when a graceful deletion is requested, read-only; if not set, graceful deletion of the object has not been requested)
  generateName:                                                       # string (an optional prefix to use to generate a unique name; has the same validation rules as name; optional, and is applied only name if is not specified)
  annotations:                                                        # map[string]string (map of string keys and values that can be used by external tooling to store and retrieve arbitrary metadata about the object)
    [string]:                                                         # string
  data:                                                               # map[string][]byte (data contains the secret data.  Each key must be a valid DNS_SUBDOMAIN.  Each value must be a base64 encoded string)
    [string]:                                                         # []byte
  type: Opaque                                                        # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.SecretType (type facilitates programmatic handling of secret data)


Service
=======

Service is a named abstraction of software service (for example, mysql) consisting of local port
(for example 3306) that the proxy listens on, and the selector that determines which pods
will answer requests sent through the proxy.

kind: Service                                                         # string (kind of object, in CamelCase; cannot be updated)
id:                                                                   # string (name of the object; must be a DNS_SUBDOMAIN and unique among all objects of the same kind within the same namespace; used in resource URLs; cannot be updated)
uid:                                                                  # github.com/GoogleCloudPlatform/kubernetes/pkg/types.UID (unique UUID across space and time; populated by the system, read-only; cannot be updated)
creationTimestamp:                                                    # github.com/GoogleCloudPlatform/kubernetes/pkg/util.Time (RFC 3339 date and time at which the object was created; populated by the system, read-only; null for lists)
selfLink:                                                             # string (URL for the object; populated by the system, read-only)
resourceVersion:                                                      # uint64 (string that identifies the internal version of this object that can be used by clients to determine when objects have changed; populated by the system, read-only; value must be treated as opaque by clients and passed unmodified back to the server: https://github.com/GoogleCloudPlatform/kubernetes/blob/master/docs/api-conventions.md#concurrency-control-and-consistency)
apiVersion: v1beta1                                                   # string (version of the schema the object should have)
namespace:                                                            # string (namespace to which the object belongs; must be a DNS_SUBDOMAIN; 'default' by default; cannot be updated)
deletionTimestamp:                                                    # *github.com/GoogleCloudPlatform/kubernetes/pkg/util.Time (RFC 3339 date and time at which the object will be deleted; populated by the system when a graceful deletion is requested, read-only; if not set, graceful deletion of the object has not been requested)
generateName:                                                         # string (an optional prefix to use to generate a unique name; has the same validation rules as name; optional, and is applied only name if is not specified)
annotations:                                                          # map[string]string (map of string keys and values that can be used by external tooling to store and retrieve arbitrary metadata about the object)
  [string]:                                                           # string
port:                                                                 # int (port exposed by the service)
portName:                                                             # string (the name of the first port; optional)
protocol: TCP|UDP                                                     # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.Protocol (protocol for port; must be UDP or TCP; TCP if unspecified)
containerPort:                                                        # github.com/GoogleCloudPlatform/kubernetes/pkg/util.IntOrString (number or name of the port to access on the containers belonging to pods targeted by the service; defaults to the container's first open port)
labels:                                                               # map[string]string (map of string keys and values that can be used to organize and categorize services)
  [string]:                                                           # string
selector:                                                             # map[string]string (label keys and values that must match in order to receive traffic for this service; if empty, all pods are selected, if not specified, endpoints must be manually specified)
  [string]:                                                           # string
createExternalLoadBalancer:                                           # bool (set up a cloud-provider-specific load balancer on an external IP)
publicIPs:                                                            # []string (externally visible IPs (e.g. load balancers) that should be proxied to this service)
- [string]                                                            # 
portalIP:                                                             # string (IP address of the service; usually assigned by the system; if specified, it will be allocated to the service if unused, and creation of the service will fail otherwise; cannot be updated; 'None' can be specified for a headless service when proxying is not required)
proxyPort:                                                            # int (if non-zero, a pre-allocated host port used for this service by the proxy on each node; assigned by the master and ignored on input)
sessionAffinity: ClientIP|None                                        # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.AffinityType (enable client IP based session affinity; must be ClientIP or None; defaults to None)
ports:                                                                # []github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ServicePort (ports to be exposed on the service; if this field is specified, the legacy fields (Port, PortName, Protocol, and ContainerPort) will be overwritten by the first member of this array; if this field is not specified, it will be populated from the legacy fields)
- name:                                                               # string (the name of this port; optional if only one port is defined)
  protocol: TCP|UDP                                                   # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.Protocol (the protocol used by this port; must be UDP or TCP; TCP if unspecified)
  port:                                                               # int (the port number that is exposed)
  containerPort:                                                      # github.com/GoogleCloudPlatform/kubernetes/pkg/util.IntOrString (the port to access on the containers belonging to pods targeted by the service; defaults to the service port)


ServiceList
===========

ServiceList holds a list of services.

kind: ServiceList                                                     # string (kind of object, in CamelCase; cannot be updated)
id:                                                                   # string (name of the object; must be a DNS_SUBDOMAIN and unique among all objects of the same kind within the same namespace; used in resource URLs; cannot be updated)
uid:                                                                  # github.com/GoogleCloudPlatform/kubernetes/pkg/types.UID (unique UUID across space and time; populated by the system, read-only; cannot be updated)
creationTimestamp:                                                    # github.com/GoogleCloudPlatform/kubernetes/pkg/util.Time (RFC 3339 date and time at which the object was created; populated by the system, read-only; null for lists)
selfLink:                                                             # string (URL for the object; populated by the system, read-only)
resourceVersion:                                                      # uint64 (string that identifies the internal version of this object that can be used by clients to determine when objects have changed; populated by the system, read-only; value must be treated as opaque by clients and passed unmodified back to the server: https://github.com/GoogleCloudPlatform/kubernetes/blob/master/docs/api-conventions.md#concurrency-control-and-consistency)
apiVersion: v1beta1                                                   # string (version of the schema the object should have)
namespace:                                                            # string (namespace to which the object belongs; must be a DNS_SUBDOMAIN; 'default' by default; cannot be updated)
deletionTimestamp:                                                    # *github.com/GoogleCloudPlatform/kubernetes/pkg/util.Time (RFC 3339 date and time at which the object will be deleted; populated by the system when a graceful deletion is requested, read-only; if not set, graceful deletion of the object has not been requested)
generateName:                                                         # string (an optional prefix to use to generate a unique name; has the same validation rules as name; optional, and is applied only name if is not specified)
annotations:                                                          # map[string]string (map of string keys and values that can be used by external tooling to store and retrieve arbitrary metadata about the object)
  [string]:                                                           # string
items:                                                                # []github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.Service (list of services)
- kind:                                                               # string (kind of object, in CamelCase; cannot be updated)
  id:                                                                 # string (name of the object; must be a DNS_SUBDOMAIN and unique among all objects of the same kind within the same namespace; used in resource URLs; cannot be updated)
  uid:                                                                # github.com/GoogleCloudPlatform/kubernetes/pkg/types.UID (unique UUID across space and time; populated by the system, read-only; cannot be updated)
  creationTimestamp:                                                  # github.com/GoogleCloudPlatform/kubernetes/pkg/util.Time (RFC 3339 date and time at which the object was created; populated by the system, read-only; null for lists)
  selfLink:                                                           # string (URL for the object; populated by the system, read-only)
  resourceVersion:                                                    # uint64 (string that identifies the internal version of this object that can be used by clients to determine when objects have changed; populated by the system, read-only; value must be treated as opaque by clients and passed unmodified back to the server: https://github.com/GoogleCloudPlatform/kubernetes/blob/master/docs/api-conventions.md#concurrency-control-and-consistency)
  apiVersion:                                                         # string (version of the schema the object should have)
  namespace:                                                          # string (namespace to which the object belongs; must be a DNS_SUBDOMAIN; 'default' by default; cannot be updated)
  deletionTimestamp:                                                  # *github.com/GoogleCloudPlatform/kubernetes/pkg/util.Time (RFC 3339 date and time at which the object will be deleted; populated by the system when a graceful deletion is requested, read-only; if not set, graceful deletion of the object has not been requested)
  generateName:                                                       # string (an optional prefix to use to generate a unique name; has the same validation rules as name; optional, and is applied only name if is not specified)
  annotations:                                                        # map[string]string (map of string keys and values that can be used by external tooling to store and retrieve arbitrary metadata about the object)
    [string]:                                                         # string
  port:                                                               # int (port exposed by the service)
  portName:                                                           # string (the name of the first port; optional)
  protocol: TCP|UDP                                                   # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.Protocol (protocol for port; must be UDP or TCP; TCP if unspecified)
  containerPort:                                                      # github.com/GoogleCloudPlatform/kubernetes/pkg/util.IntOrString (number or name of the port to access on the containers belonging to pods targeted by the service; defaults to the container's first open port)
  labels:                                                             # map[string]string (map of string keys and values that can be used to organize and categorize services)
    [string]:                                                         # string
  selector:                                                           # map[string]string (label keys and values that must match in order to receive traffic for this service; if empty, all pods are selected, if not specified, endpoints must be manually specified)
    [string]:                                                         # string
  createExternalLoadBalancer:                                         # bool (set up a cloud-provider-specific load balancer on an external IP)
  publicIPs:                                                          # []string (externally visible IPs (e.g. load balancers) that should be proxied to this service)
  - [string]                                                          # 
  portalIP:                                                           # string (IP address of the service; usually assigned by the system; if specified, it will be allocated to the service if unused, and creation of the service will fail otherwise; cannot be updated; 'None' can be specified for a headless service when proxying is not required)
  proxyPort:                                                          # int (if non-zero, a pre-allocated host port used for this service by the proxy on each node; assigned by the master and ignored on input)
  sessionAffinity: ClientIP|None                                      # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.AffinityType (enable client IP based session affinity; must be ClientIP or None; defaults to None)
  ports:                                                              # []github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.ServicePort (ports to be exposed on the service; if this field is specified, the legacy fields (Port, PortName, Protocol, and ContainerPort) will be overwritten by the first member of this array; if this field is not specified, it will be populated from the legacy fields)
  - name:                                                             # string (the name of this port; optional if only one port is defined)
    protocol: TCP|UDP                                                 # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.Protocol (the protocol used by this port; must be UDP or TCP; TCP if unspecified)
    port:                                                             # int (the port number that is exposed)
    containerPort:                                                    # github.com/GoogleCloudPlatform/kubernetes/pkg/util.IntOrString (the port to access on the containers belonging to pods targeted by the service; defaults to the service port)


Status
======

Status is a return value for calls that don't return other objects.
TODO: this could go in apiserver, but I'm including it here so clients needn't
import both.

kind: Status                                                          # string (kind of object, in CamelCase; cannot be updated)
id:                                                                   # string (name of the object; must be a DNS_SUBDOMAIN and unique among all objects of the same kind within the same namespace; used in resource URLs; cannot be updated)
uid:                                                                  # github.com/GoogleCloudPlatform/kubernetes/pkg/types.UID (unique UUID across space and time; populated by the system, read-only; cannot be updated)
creationTimestamp:                                                    # github.com/GoogleCloudPlatform/kubernetes/pkg/util.Time (RFC 3339 date and time at which the object was created; populated by the system, read-only; null for lists)
selfLink:                                                             # string (URL for the object; populated by the system, read-only)
resourceVersion:                                                      # uint64 (string that identifies the internal version of this object that can be used by clients to determine when objects have changed; populated by the system, read-only; value must be treated as opaque by clients and passed unmodified back to the server: https://github.com/GoogleCloudPlatform/kubernetes/blob/master/docs/api-conventions.md#concurrency-control-and-consistency)
apiVersion: v1beta1                                                   # string (version of the schema the object should have)
namespace:                                                            # string (namespace to which the object belongs; must be a DNS_SUBDOMAIN; 'default' by default; cannot be updated)
deletionTimestamp:                                                    # *github.com/GoogleCloudPlatform/kubernetes/pkg/util.Time (RFC 3339 date and time at which the object will be deleted; populated by the system when a graceful deletion is requested, read-only; if not set, graceful deletion of the object has not been requested)
generateName:                                                         # string (an optional prefix to use to generate a unique name; has the same validation rules as name; optional, and is applied only name if is not specified)
annotations:                                                          # map[string]string (map of string keys and values that can be used by external tooling to store and retrieve arbitrary metadata about the object)
  [string]:                                                           # string
status:                                                               # string (status of the operation; either Success, or Failure)
message:                                                              # string (human-readable description of the status of this operation)
reason: AlreadyExists|Conflict|NotFound|ServerTimeout|                # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.StatusReason (machine-readable description of why this operation is in the 'Failure' status; if this value is empty there is no information available; a reason clarifies an HTTP status code but does not override it)
details:                                                              # *github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.StatusDetails (extended data associated with the reason; each reason may define its own extended details; this field is optional and the data returned is not guaranteed to conform to any schema except that defined by the reason type)
  id:                                                                 # string (the ID attribute of the resource associated with the status StatusReason (when there is a single ID which can be described))
  kind:                                                               # string (the kind attribute of the resource associated with the status StatusReason; on some operations may differ from the requested resource Kind)
  causes:                                                             # []github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.StatusCause (the Causes array includes more details associated with the StatusReason failure; not all StatusReasons may provide detailed causes)
  - reason: FieldValueDuplicate|FieldValueInvalid|FieldValueNotFound|FieldValueNotSupported|FieldValueRequired # github.com/GoogleCloudPlatform/kubernetes/pkg/api/v1beta1.CauseType (machine-readable description of the cause of the error; if this value is empty there is no information available)
    message:                                                          # string (human-readable description of the cause of the error; this field may be presented as-is to a reader)
    field:                                                            # string (field of the resource that has caused this error, as named by its JSON serialization; may include dot and postfix notation for nested attributes; arrays are zero-indexed; fields may appear more than once in an array of causes due to fields having multiple errors)
  retryAfterSeconds:                                                  # int (the number of seconds before the client should attempt to retry this operation)
code:                                                                 # int (suggested HTTP return code for this status; 0 if not set)


